     Š****************************************************************
      * Program Name..: INT374
      * Description...: Non 1P Collateral and Contract Information Inward
      *                 Interface Validate & Transform Data program
      * Date Created..: 04/09/2022
      * Author........: Pruk H.
      * Ref NO........: CR#2111 Bulk stamc
     Š****************************************************************
      * INT374 is part of Silverlake Integrated Banking System
      * Copyright 2001 by Silverlake System Sdn Bhd Kuala Lumpur,
      * Malaysia.
     Š****************************************************************
      * Modification Logs:
      * Init  Ref#     Date    Description
      * ----  ----     ----    -----------
      * Pruk  C0001    10/01/23  Reg. Owner Short Name system auto full fill
     Š****************************************************************
     F* NOTES:
     F* 1. File header or file trailer or file detail error-reject
     F*    entire file
     F* 2. File structure - 'HD',N/A,'TL'
     F* 3. Message Notice:
     F*    P9Error '01' - INT0111  No File Header. File Rejected.
     F*            '02' - INT0047  Trailer record not found.
     F*            '03' - INT0069  Invalid detail record.
     F*            '04' - INT0070  Invalid header record.
     F*            '05' - INT0071  Invalid trailer record.
     F*            '06' - INT0046  Total number of detail records is
     F*                            invalid.
     Š****************************************************************
     Š*Input files
     FSSPAR1    IF   E             DISK
     FCFPAR9    IF   E           K DISK
     FCFPAR92   IF   E           K DISK
     FSMCNTR    IF   E           K DISK
     FCLCLP8    IF   E           K DISK
     F*
     FINT374W01 IF   E             DISK                                         ˜FILE CENTER
     FINT374X01 IF   E             DISK    PREFIX(X_)                           ˜WORK FILE
     FINTFILE   UF   E           K DISK    PREFIX(i_) COMMIT
     FINTFILEL5 IF   E           K DISK    PREFIX(l5_) COMMIT
     F                                     Rename(RINTFILE:RINTFILEL5)
     Š*Output files
     FINT374R01 UF A E             DISK    COMMIT INFSR(*PSSR)
S6404FINTHDR    UF A E           K DISK    PREFIX(HD_)
S6404FINTDTL    UF A E           K DISK    PREFIX(DT_)
S6404FINTDTE    UF A E           K DISK    PREFIX(DE_)
     Š*External input data structure
     Š* Working variables
     D wInfSeq         S                   LIKE(i_INFSEQ)                       ˜FILE SEQ
     D wDate           S                   LIKE(i_INDATE)                       ˜INTFILE'S DATE
     D wINSEQN         S              5  0 INZ(0)                               ˜Block Sequence No.
     Š*Parameter variables
     D wRcnt           S             15  0 INZ(0)
     D P9Error         S              2A                                        ˜ERROR TYPE
     D P9Err           S              1A
     D P9Seq           s             15A                                        ˜RECORD SEQ ERROR
     D P9InfIid        S                   LIKE(i_INFIID)                       ˜FILE INDENTIFIER
     D P9FilSeq        S              5A                                        ˜FILE SEQ
     D P9Date          S              8                                         ˜CREATION DATE
     D P9Filnm         S                   LIKE(i_INFNAM)                       ˜FILENAME
     D P9INREFN        S                   LIKE(i_INREFN)                       ˜Reference number
     D wDetailError    S              1    inz('N')
     D wHeaderError    S              1    inz('N')
     D wTrailerError   S              1    inz('N')
     D wBlockError     S              1    inz('N')
     D wpos            S              2  0 inz(0)
     D wcount          S             15  0
     D werror          S              1    inz('N')
     D wRecordID       S              2    inz(*blank)
     D wPrvRecordID    S                   like(wRecordID)
     D upcase          c                   'ABCDEFGHIJKLMNOPQRSTUVWXYZ '
     D locase          c                   'abcdefghijklmnopqrstuvwxyz '
     D digits          c                   '0123456789. '
     D Integers        c                   '0123456789 '
     D wTestDate       S              8
     D wTestField      S                   Like(wData)
     D wDateField      S              8  0
     D wErrorCode      S              2    inz(*blank)
     D wData           S             80
     D wChkNum         S             19S 0
     D wChkAmt         S             19S 2
     D wChkLate        S             19S 9
     D wChkCloPri      S             19S 7
     Š* Program Status Data Structure
     D                SDS
     D  program                1     10

     Š* Table Reference
     D TabErrCd        S              2    Dim(999) CTDATA PERRCD(1)
     D TabErrDesc      S             50    Dim(999) ALT(TabErrCd)
     Š*
     D RecType         S             60A
     D SequeNum        S             60A
     D CollCat         S             60A
     D CollCold        S             60A
     D BankNum         S             60A
     D BranchNum       S             60A
     D RegCIFNum       S             60A
     Š* Data  Structure
     D DIMRECSEQ       S                   LIKE(CLP002) DIM(9999)
     D II              S              8  0 INZ(0)
     D JJ              S              8  0 INZ(0)
      *
     D                 DS
     D  xINDATA                1   3002
     D  xLEN                          5U 0 OVERLAY(xINDATA:1)
     D  xDATA                      3000    OVERLAY(xINDATA:3)
      *
     D FILENAME      E DS                  EXTNAME(INT374R01)
     D*Collateral Address
     D I_CLCADR      E DS                  EXTNAME(CLCADR) PREFIX(I2_)
      *
     D**Parameter Calculate STOCK
     D wkCCDSHR        S             13  0 INZ(0)                               ˜Number of Units
     D wkCNLSPR        S             13  7 INZ(0)                               ˜Unit Price
     D wkCCDCMV        S             17  2 INZ(0)                               ˜Total Market Value
      *
     D**Parameter Calculate DEBT
     D wkCCDSHR_D      S             13  0 INZ(0)                               ˜Number of Unit
     D wkLPBNPR_D      S             19  5 INZ(0)                               ˜Market Price Per Un
     D wkCCDCMV_D      S             17  2 INZ(0)                               ˜Total Market Value
     **-
     Š* Composite key
     Š*************************************************************************
     Š* Main Logic
     Š*************************************************************************
     C     *ENTRY        PLIST
     C                   PARM                    P9INFIID
     C                   PARM                    P9INREFN
     C                   PARM                    P9ERR
     C*
     C     INTFILEL5KEY  KLIST
     C                   KFLD                    KKINFIID
     C                   KFLD                    KKINREFN
     C     *LIKE         DEFINE    L5_INFIID     KKINFIID
     C     *LIKE         DEFINE    L5_INREFN     KKINREFN
     C*
     C                   MOVEL(P)  P9INFIID      KKINFIID
     C                   MOVEL(P)  P9INREFN      KKINREFN
     C*
     C     INTFILEL5KEY  CHAIN     INTFILEL5
     C                   IF        %FOUND(INTFILEL5)
     C                   MOVEL(P)  L5_INFNAM     P9FILNM
     C                   Z-ADD     L5_INDATE     wDate
     C                   Z-ADD     L5_INFSEQ     wInfSeq
     C                   ENDIF
     C*
S6404C     KINTHDR       KLIST
S6404C                   KFLD                    HD_INFIID
S6404C                   KFLD                    HD_INFNAM
S6404C                   KFLD                    HD_INDATE
S6404C                   KFLD                    HD_INFSEQ
S6404C                   KFLD                    HD_INSEQN
     C*
S6404C     KINTDTL       KLIST
S6404C                   KFLD                    DT_INFIID
S6404C                   KFLD                    DT_INFNAM
S6404C                   KFLD                    DT_INDATE
S6404C                   KFLD                    DT_INFSEQ
S6404C                   KFLD                    DT_INSEQN
S6404C                   KFLD                    DT_INRSEQN
     C*
S6404C     KINTDTE       KLIST
S6404C                   KFLD                    DE_INFIID
S6404C                   KFLD                    DE_INFNAM
S6404C                   KFLD                    DE_INDATE
S6404C                   KFLD                    DE_INFSEQ
S6404C                   KFLD                    DE_INSEQN
S6404C                   KFLD                    DE_INRSEQN
S6404C                   KFLD                    DE_INESEQN
     C*

      /Free

       //˜Loop get inward data
         Read rINT374w01;
         Dow not %eof(INT374w01);
             wRcnt = wRcnt + 1;
             Exsr srHdr;
             Exsr srIntDtl;
             Exsr srProcess;
             If wHeaderError='Y' or wTrailerError='Y';
                Rolbk;
                Leave;
             Endif;
             Exsr srInsertRecord;
             Read rINT374w01;
         Enddo;

       //˜Validate last record must be trailer
         If (%eof(INT374w01) and wRecordID<>'TL');
            wErrorCode = 'T0';
            exsr srGetErrorDescription;
            wHeaderError='N';
            P9Error ='02';
            Rolbk;
         Endif;

       //˜Check and Update Process Error Seq
         Exsr srCheckError;

       //˜Update Process Status of Interface file
         Exsr srUpdateINTFILE;

         Commit;
         *Inlr = *On;

    Š  //***********************************************************************
       //  srProcess - Read & validate record ID
    Š  //***********************************************************************
        BegSr srProcess;

       //˜Validate Record ID Type
           Exsr srChkID;
           If wHeaderError='Y'or wDetailError='Y' or wTrailerError='Y';
             Leavesr;
           Endif;

       //˜Validate Content of Record
           Select;
              //˜Header Record
              When wRecordID ='HD';
                 exsr srFileHeader;
                   If wHeaderError='Y';
                      LeaveSr;
                   Endif ;
              //˜Trailer Record
              When wRecordID ='TL';
                 exsr srFileTrailer;
                   If wTrailerError='Y';
                      wErrorCode = 'T1';
                      exsr srGetErrorDescription;
                      LeaveSr;
                   Endif ;
              //˜Detail Records
              other;
                 exsr srDetail;
           EndSl;

        EndSr;

    Š  //***********************************************************************
       // srChkID - Check Record ID
    Š  //***********************************************************************
        BegSr srChkID;

        wHeaderError = 'N';
        wDetailError = 'N';
        wTrailerError = 'N';

       //˜Record Count
        wCount+=1;
        wRecordID  = %Trim(CLP001);

       //˜Validate Header Record
        If (wCount=1  and wRecordID<>'HD') or
           (wCount<>1 and wRecordID='HD');
           wErrorCode = 'H1';
           exsr srGetErrorDescription;
           wHeaderError='Y';
           P9Error ='01';
           Leavesr;
        Endif;

        Endsr;
    Š  //***********************************************************************
       // srFileHeader - Validate File Header Information
    Š  //***********************************************************************
        Begsr srFileHeader;

        wHeaderError='Y';

       //˜Validate Processing Date of Header
           wData = %trim(CLP002);
           if wData <> *Blanks;
              wTestDate= wData ;
              Exsr srTestDate;
              If wErrorCode<>*blank;
                 wErrorCode = 'H2';
                 exsr srGetErrorDescription;
                 P9Error ='04';
                 Leavesr;
              Endif;

              If %Trim(wData)<> %Char(SP1NB8) ;
                 wErrorCode = 'H3';
                 exsr srGetErrorDescription;
                 P9Error ='04';
                 Leavesr;
              Endif;

           else ;
              wErrorCode = 'H2';
              exsr srGetErrorDescription;
              P9Error ='04';
              Leavesr;
           Endif;

        wHeaderError='N';
        Endsr;

    Š  //***********************************************************************
       // srFileTrailer - Validate File Trailer Information
    Š  //***********************************************************************
        Begsr srFileTrailer;

        wTrailerError='Y';

        wData = %trim(CLP002);
        if wData <> *blank ;
           wTestField= wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'T1';
              exsr srGetErrorDescription;
              P9Error ='05';
              Leavesr;
           Endif;
           Else;
              wErrorCode = 'T3';
              exsr srGetErrorDescription;
              P9Error ='05';
              Leavesr;
        Endif;
       //˜Number of detail records to be exclude Header & Trailer
          If %Int(%Trim(CLP002))<>wcount-2 or
             %Int(%Trim(CLP002)) = *zero;
             wErrorCode = 'T2';
             exsr srGetErrorDescription;
             P9Error ='05';
             Leavesr;
          Endif;

          wTrailerError='N';
        Endsr;
    Š  //***********************************************************************
       // srDetail - Process & Validate Non 1P Account & Charge Information
    Š  //***********************************************************************
        BegSr srDetail;

           wErrorCode = *blank;

        //˜Validate Collateral
           Select;
              When %Trim(CLP003) = 'RE';
                   exsr srReVal;
              When %Trim(CLP003) = 'MAIN';
                   exsr srMainVal;
              When %Trim(CLP003) = 'PG';
                   exsr srPgVal;
              When %Trim(CLP003) = 'STOCK';
                   exsr srSTOCKVal;
              When %Trim(CLP003) = 'DEBT';
                   exsr srDEBTVal;
              When %Trim(CLP003) = 'LC';
                   exsr srLcVal;
              When %Trim(CLP003) = 'LSAGR';
                   exsr srLSAGRVal;
              When %Trim(CLP003) = 'MACH';
                   exsr srMACHVal;
              When %Trim(CLP003) = 'PN';
                   exsr srPnVal;
              When %Trim(CLP003) = 'VEH';
                   exsr srVEHVal;
              When %Trim(CLP003) = 'GEN';
                   exsr srGENVal;

        //˜Validate Link Collateral and Contract
              other;
                   exsr SrCoLConVal;
           Endsl;

        EndSr;

    Š  //***********************************************************************
       //ˆsrReVal - Validate Collateral Category RE
    Š  //***********************************************************************
        begsr SrReVal;

              RecType   = %Trim(CLP001);
              SequeNum  = %Trim(CLP002);
              CollCat   = %Trim(CLP003);
              CollCold  = %Trim(CLP004);
              BankNum   = %Trim(CLP005);
              BranchNum = %Trim(CLP006);
              RegCIFNum = %Trim(CLP007);
              exsr SrValidate;

       //˜Validate Title Type (Mandatory Field)
        wData = %Trim(CLP008);
        If wData = *blank;
           wErrorCode = '51';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Title number (Mandatory Field)
        wData = %Trim(CLP009);
        If wData = *blank;
           wErrorCode = '12';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Lot number (Mandatory Field)
        wData = %Trim(CLP010);
        If wData = *blank;
           wErrorCode = '24';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Survey Number (Mandatory Field)
        wData = %Trim(CLP011);
        If wData = *blank;
           wErrorCode = '23';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Area Unit (Mandatory Field)
        wData = %Trim(CLP012);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '14';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP012 = *blank;
           wErrorCode = '14';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Rai (Optional Field)
        wData = %Trim(CLP013);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '53';
              exsr srGetErrorDescription;
           else;
              wChkNum = %int(wData);
              if wChkNum > 99999;
                 wErrorCode = '53';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP013 = '0';
        endif;

       //˜Validate Ngan (Optional Field)
        wData = %Trim(CLP014);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '54';
              exsr srGetErrorDescription;
           else;
              wChkNum = %int(wData);
              if wChkNum > 9;
                 wErrorCode = '54';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP014 = '0';
        endif;

       //˜Validate Wa (Optional Field)
        wData = %Trim(CLP015);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '55';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 99.99;
                 wErrorCode = '55';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP015 = '0';
        endif;

       //˜Validate Build-up Area (Optional Field)
        wData = %Trim(CLP016);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '52';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 99999999999.99;
                 wErrorCode = '52';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP016 = '0';
        endif;

       //˜Validate Freehold/Leasehold (Mandatory Field)
        wData = %Trim(CLP017);
        If wData = *blank;
           wErrorCode = '13';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Land Office (Mandatory Field)
        wData = %Trim(CLP018);
        if wData = *blank;
           wErrorCode = '22';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Collateral Object (Mandatory Field)
        wData = %Trim(CLP019);
        If wData = *blank;
           wErrorCode = '31';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Property Type (Mandatory Field)
        wData = %Trim(CLP020);
        If wData = *blank;
           wErrorCode = '08';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Usage of property (Mandatory Field)
        wData = %Trim(CLP021);
        If wData = *blank;
           wErrorCode = '09';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Property Complete(Y/N) (Mandatory Field)
        wData = %Trim(CLP022);
        If wData = *blank;
           wErrorCode = '25';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Contract Amount (Mandatory Field)
        wData = %Trim(CLP023);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '47';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = '47';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP023 = *blank;
           wErrorCode = '47';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Fair Market Value (Mandatory Field)
        wData = %Trim(CLP024);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '18';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = '18';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP024 = *blank;
           wErrorCode = '18';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Forced Sales Value (Mandatory Field)
        wData = %Trim(CLP025);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '19';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = '19';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP025 = *blank;
           wErrorCode = '19';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Country Code (Mandatory Field)
        wData = %Trim(CLP026);
        If wData = *blank;
           wErrorCode = '46';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Last Valuation Date (Mandatory Field)
        wData = %Trim(CLP027);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '33';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP027 = *blank;
           wErrorCode = '33';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Valuation Date (Mandatory Field)
        wData = %Trim(CLP028);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '34';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP028 = *blank;
           wErrorCode = '34';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Next valuation Date (Mandatory Field)
        wData = %Trim(CLP029);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '16';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP029 = *blank;
           wErrorCode = '16';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Valuer Code (Mandatory Field)
        wData = %Trim(CLP030);
        If wData = *blank;
           wErrorCode = '36';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Valuation Type (Mandatory Field)
        wData = %Trim(CLP031);
        If wData = *blank;
           wErrorCode = '35';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Basis of Advance Indicator (Mandatory Field)
        wData = %Trim(CLP032);
        If wData = *blank;
           wErrorCode = '21';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Basis of Advance Percent (Mandatory Field)
        wData = %Trim(CLP033);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '40';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
              if wChkLate > 99.999999999;
                 wErrorCode = '40';
                 exsr srGetErrorDescription;
                 wErrorCode = 'IL';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP033 = *blank;
           wErrorCode = '40';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Basel Eligible (Mandatory Field)
        wData = %Trim(CLP034);
        If wData = *blank;
           wErrorCode = '37';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Allow Provisioning (Mandatory Field)
        wData = %Trim(CLP035);
        If wData = *blank;
           wErrorCode = '38';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Include SLL Computation (Mandatory Field)
        wData = %Trim(CLP036);
        If wData = *blank;
           wErrorCode = '39';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Basel Indicator (Mandatory Field)
        wData = %Trim(CLP037);
        If wData = *blank;
           wErrorCode = '48';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Address Format (Mandatory Field)
        wData = %Trim(CLP038);
        Chain (wData)Cfpar9;
        If not %found(cfpar9) or wData = 'F';
           wErrorCode = '41';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Address Type (Mandatory Field)
        wData = %Trim(CLP039);
        Chain (wData)Cfpar92;
        If not %found(cfpar92);
           wErrorCode = '42';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Address Line (Mandatory Field)
        exsr SR_RE_ADD;
        If wErrorCode <> *blank;
           exsr srGetErrorDescription;
        endif;

         //˜Validate Address Line 1 (Mandatory Field)
        //wData = %Trim(CLP040);
        //If wData = *blank;
        //   wErrorCode = '56';
        //   exsr srGetErrorDescription;
        //endif;

         //˜Validate Address Line 2 (Mandatory Field)
        //wData = %Trim(CLP041);
        //If wData = *blank;
        //   wErrorCode = '57';
        //   exsr srGetErrorDescription;
        //endif;

         //˜Validate Address Line 3 (Mandatory Field)
        //wData = %Trim(CLP042);
        //If wData = *blank;
        //   wErrorCode = '58';
        //   exsr srGetErrorDescription;
        //endif;

         //˜Validate Address Line 4 (Mandatory Field)
        //wData = %Trim(CLP043);
        //If wData = *blank;
        //   wErrorCode = '59';
        //   exsr srGetErrorDescription;
        //endif;

         //˜Validate Address Line 5 (Mandatory Field)
        //wData = %Trim(CLP044);
        //If wData = *blank;
        //   wErrorCode = '60';
        //   exsr srGetErrorDescription;
        //endif;

         //˜Validate Address Line 6 (Mandatory Field)
        //wData = %Trim(CLP045);
        //If wData = *blank;
        //   wErrorCode = '61';
        //   exsr srGetErrorDescription;
        //endif;

         //˜Validate Address Line 7 (Mandatory Field)
        //wData = %Trim(CLP046);
        //If wData = *blank;
        //   wErrorCode = '62';
        //   exsr srGetErrorDescription;
        //endif;

       //˜Validate REG. OWNER CIF 1 (Optional Field)
        wData = %Trim(CLP047);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '64';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP047 = '0';
        endif;

       //˜Validate REG. OWNER CIF 2 (Optional Field)
        wData = %Trim(CLP048);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '93';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP048 = '0';
        endif;

       //˜Validate REG. OWNER CIF 3 (Optional Field)
        wData = %Trim(CLP049);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '94';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP049 = '0';
        endif;

       //˜Validate REG. OWNER CIF 4 (Optional Field)
        wData = %Trim(CLP050);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '95';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP050 = '0';
        endif;

       //˜Validate REG. OWNER CIF 5 (Optional Field)
        wData = %Trim(CLP051);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '96';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP051 = '0';
        endif;

       //˜Validate Country of Registration (Optional Field)
        wData = %Trim(CLP054);
        If wData = *blank;
           CLP054 = 'TH';
        endif;

       //˜Validate Restriction of Interest (Optional Field)
        wData = %Trim(CLP055);
        If wData = *blank;
           CLP055 = 'N';
        endif;

       //˜Validate FMV on complete (Optional Field)
        wData = %Trim(CLP056);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '17';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = '17';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP056 = '0';
        endif;

       //˜Validate Marked to Market Value (Y/N) (Optional Field)
        wData = %Trim(CLP057);
        If wData = *blank;
           CLP057 = 'N';
        endif;

       //˜Validate Share Collateral (Optional Field)
        wData = %Trim(CLP058);
        If wData = *blank;
           CLP058 = 'N';
        endif;

       //˜Validate Apportion Realisable Value (Optional Field)
        wData = %Trim(CLP059);
        If wData = *blank;
           CLP059 = 'N';
        endif;

       //˜Validate Express Condition Flag (Optional Field)
        wData = %Trim(CLP060);
        If wData = *blank;
           CLP060 = 'N';
        endif;

       //˜Validate Endorsement Flag (Optional Field)
        wData = %Trim(CLP061);
        If wData = *blank;
           CLP061 = 'N';
        endif;

       //˜Validate Encumbrances Flag (Optional Field)
        wData = %Trim(CLP062);
        If wData = *blank;
           CLP062 = 'N';
        endif;

       //˜Validate Global Collateral (Y/N) (Optional Field)
        wData = %Trim(CLP063);
        If wData = *blank;
           CLP063 = 'N';
        endif;

       //˜Validate Collateral ID (Optional Field)
        wData = %Trim(CLP070);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'F7';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP070 = '0';
        endif;

       //˜Validate Collateral Status (Optional Field)
        wData = %Trim(CLP073);
        If wData = *blank;
           CLP073 = '1';
        endif;

       //˜Validate Currency (Optional Field)
        wData = %Trim(CLP078);
        If wData = *blank;
           CLP078 = 'THB';
        endif;

       //˜Validate Date of Search (Optional Field)
        wData = %Trim(CLP083);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'F8';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP083 = '0';
        endif;

       //˜Validate Lease Agreement Number (Optional Field)
        wData = %Trim(CLP084);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'F9';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP084 = '0';
        endif;

       //˜Validate Land Area (Optional Field)
        wData = %Trim(CLP089);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'G0';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 99999999999.99;
                 wErrorCode = 'G0';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP089 = '0';
        endif;

       //˜Validate Valuation Date (Optional Field)
        wData = %Trim(CLP092);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '34';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP092 = '0';
        endif;

       //˜Validate External/Appraised value (Optional Field)
        wData = %Trim(CLP095);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'G1';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'G1';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP095 = '0';
        endif;

       //˜Validate FSV on Complete (Optional Field)
        wData = %Trim(CLP096);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'G2';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'G2';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP096 = '0';
        endif;

       //˜Validate Land Value (Optional Field)
        wData = %Trim(CLP097);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'G3';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'G3';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP097 = '0';
        endif;

       //˜Validate Building Value (Optional Field)
        wData = %Trim(CLP098);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'G4';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'G4';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP098 = '0';
        endif;

       //˜Validate Official Valuation Date (Optional Field)
        wData = %Trim(CLP100);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'G5';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP100 = '0';
        endif;

       //˜Validate Official Valuation (Optional Field)
        wData = %Trim(CLP101);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'G6';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'G6';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP101 = '0';
        endif;

       //˜Validate Purchase date (Optional Field)
        wData = %Trim(CLP102);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'G7';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP102 = '0';
        endif;

       //˜Validate Purchase Price (Optional Field)
        wData = %Trim(CLP103);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'G8';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'G8';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP103 = '0';
        endif;

       //˜Validate Improvement Cost (Optional Field)
        wData = %Trim(CLP104);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'G9';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'G9';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP104 = '0';
        endif;

       //˜Validate Auction date (Optional Field)
        wData = %Trim(CLP108);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'I0';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP108 = '0';
        endif;

       //˜Validate Auction Price (Optional Field)
        wData = %Trim(CLP111);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'I1';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'I1';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP111 = '0';
        endif;

       //˜Validate Private caveat/G'tee Exp (Optional Field)
        wData = %Trim(CLP112);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'I2';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP112 = '0';
        endif;

       //˜Validate Date Agreement Signed (Optional Field)
        wData = %Trim(CLP114);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'I3';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP114 = '0';
        endif;

       //˜Validate Reserved price (Optional Field)
        wData = %Trim(CLP115);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'I4';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'I4';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP115 = '0';
        endif;

       //˜Validate Redemption Value (Optional Field)
        wData = %Trim(CLP116);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'I5';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'I5';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP116 = '0';
        endif;

       //˜Validate Quit rent payment date (Optional Field)
        wData = %Trim(CLP117);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'I6';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP117 = '0';
        endif;

       //˜Validate Quit rent amount (Optional Field)
        wData = %Trim(CLP118);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'I7';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'I7';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP118 = '0';
        endif;

       //˜Validate Assessment payment date (Optional Field)
        wData = %Trim(CLP119);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'I8';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP119 = '0';
        endif;

       //˜Validate Assessment amount (Optional Field)
        wData = %Trim(CLP120);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'I9';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'I9';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP120 = '0';
        endif;

       //˜Validate Collateral Value Cap Perc (Optional Field)
        wData = %Trim(CLP125);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'J0';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
              if wChkLate > 99.999999999;
                 wErrorCode = 'J0';
                 exsr srGetErrorDescription;
                 wErrorCode = 'IL';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP125 = '0';
        endif;

       //˜Validate Collateral Tagging Date (Optional Field)
        wData = %Trim(CLP127);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'J1';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP127 = '0';
        endif;

       //˜Validate Original coll. value (Optional Field)
        wData = %Trim(CLP128);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'J2';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'J2';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP128 = '0';
        endif;

       //˜Validate Coll Original Value (Optional Field)
        wData = %Trim(CLP129);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'J3';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'J3';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP129 = '0';
        endif;

       //˜Validate Date Ownership Transfred (Optional Field)
        wData = %Trim(CLP131);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'J4';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP131 = '0';
        endif;

       //˜Validate Date Owner Transf Remove (Optional Field)
        wData = %Trim(CLP132);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'J5';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP132 = '0';
        endif;

       //˜Validate Date Collateral Received (Optional Field)
        wData = %Trim(CLP133);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'J6';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP133 = '0';
        endif;

       //˜Validate Date Title issued (Optional Field)
        wData = %Trim(CLP134);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'J7';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP134 = '0';
        endif;

       //˜Validate Title Expiry Date (Optional Field)
        wData = %Trim(CLP135);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'J8';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP135 = '0';
        endif;

       //˜Validate Deposit Term (Optional Field)
        wData = %Trim(CLP137);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'J9';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP137 = '0';
        endif;

       //˜Validate Internal/Br. Valuation (Optional Field)
        wData = %Trim(CLP138);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'K0';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'K0';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP138 = '0';
        endif;

       //˜Validate Internal/Br. Valuation Date (Optional Field)
        wData = %Trim(CLP139);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'K1';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP139 = '0';
        endif;

       //˜Validate Date of Redemption (Optional Field)
        wData = %Trim(CLP140);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'K2';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP140 = '0';
        endif;

       //˜Validate Review date (Optional Field)
        wData = %Trim(CLP141);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'K3';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP141 = '0';
        endif;

       //˜Validate S & P Date (Optional Field)
        wData = %Trim(CLP142);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'K4';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP142 = '0';
        endif;

       //˜Validate S & P Expiry Date (Optional Field)
        wData = %Trim(CLP143);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'K5';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP143 = '0';
        endif;

       //˜Validate Letter of PI by valuer to (Optional Field)
        wData = %Trim(CLP144);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'K6';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP144 = '0';
        endif;

       //˜Validate Amount Redeem (Optional Field)
        wData = %Trim(CLP146);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'K7';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 9999999999999.99;
                 wErrorCode = 'K7';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP146 = '0';
        endif;

       //˜Validate Unit Size (Optional Field)
        wData = %Trim(CLP147);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'K8';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999.99;
                 wErrorCode = 'K8';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP147 = '0';
        endif;

       //˜Validate Price Per Unit (Optional Field)
        wData = %Trim(CLP148);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'K9';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999.99;
                 wErrorCode = 'K9';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP148 = '0';
        endif;

       //˜Validate Cost Per Size (Optional Field)
        wData = %Trim(CLP149);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'L0';
              exsr srGetErrorDescription;
           else;
              wChkNum = %Int(wData);
              if wChkNum > 9999;
                 wErrorCode = 'L0';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP149 = '0';
        endif;

       //˜Validate Price Per Size (Optional Field)
        wData = %Trim(CLP150);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'L1';
              exsr srGetErrorDescription;
           else;
              wChkNum = %Int(wData);
              if wChkNum > 99999;
                 wErrorCode = 'L1';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP150 = '0';
        endif;

       //˜Validate Realisable Value (Optional Field)
        wData = %Trim(CLP153);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'L2';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'L2';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP153 = '0';
        endif;

       //˜Validate Number of Title (Optional Field)
        wData = %Trim(CLP154);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'L3';
              exsr srGetErrorDescription;
           else;
              wChkNum = %Int(wData);
              if wChkNum > 9999999999999999;
                 wErrorCode = 'L3';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP154 = '0';
        endif;

       //˜Validate Created Date (Optional Field)
        wData = %Trim(CLP159);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '91';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP159 = %Char(SP1NB8) ;
        endif;

       //˜Validate Total O/S Balance (Optional Field)
        wData = %Trim(CLP164);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '72';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = '72';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP164 = '0';
        endif;

       //˜Validate Lettable Area (Optional Field)
        wData = %Trim(CLP174);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'L4';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 99999999999.99;
                 wErrorCode = '72';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP174 = '0';
        endif;

       //˜Validate House Value (Optional Field)
        wData = %Trim(CLP175);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'L5';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'L5';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP175 = '0';
        endif;

       //˜Validate Plant & Machinery Value (Optional Field)
        wData = %Trim(CLP176);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'L6';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'L6';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP176 = '0';
        endif;

       //˜Validate Machinery Value (Optional Field)
        wData = %Trim(CLP177);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'L7';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'L7';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP177 = '0';
        endif;

       //˜Validate Equipment Value (Optional Field)
        wData = %Trim(CLP178);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'L8';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'L8';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP178 = '0';
        endif;

       //˜Validate Outstanding Bill Electric (Optional Field)
        wData = %Trim(CLP179);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'L9';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'L9';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP179 = '0';
        endif;

       //˜Validate Outstanding Bill Water (Optional Field)
        wData = %Trim(CLP180);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'M0';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'M0';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP180 = '0';
        endif;

       //˜Validate Outstanding Bill Manageme (Optional Field)
        wData = %Trim(CLP181);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'M1';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'M1';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP181 = '0';
        endif;

       //˜Validate Total Rental Amount (Optional Field)
        wData = %Trim(CLP183);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'M2';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'M2';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP183 = '0';
        endif;

       //˜Validate Rental Term (Optional Field)
        wData = %Trim(CLP184);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'M3';
              exsr srGetErrorDescription;
           else;
              wChkNum = %Int(wData);
              if wChkNum > 999;
                 wErrorCode = 'M3';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP184 = '0';
        endif;

       //˜Validate Depreciate Term (Optional Field)
        wData = %Trim(CLP187);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'M4';
              exsr srGetErrorDescription;
           else;
              wChkNum = %Int(wData);
              if wChkNum > 999;
                 wErrorCode = 'M4';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP187 = '0';
        endif;

       //˜Validate Delivery Date (Optional Field)
        wData = %Trim(CLP189);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'M5';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP189 = '0';
        endif;

       //˜Validate Disposal Value (Optional Field)
        wData = %Trim(CLP190);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'M6';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'M6';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP190 = '0';
        endif;

       //˜Validate Total Asset (Optional Field)
        wData = %Trim(CLP192);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'M7';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'M7';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP192 = '0';
        endif;

       //˜Validate Exchange Rate Date (Optional Field)
        wData = %Trim(CLP193);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'M8';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP193 = '0';
        endif;

       //˜Validate Valuation Freq (Optional Field)
        wData = %Trim(CLP194);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'M9';
              exsr srGetErrorDescription;
           else;
              wChkNum = %Int(wData);
              if wChkNum > 999;
                 wErrorCode = 'M9';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP194 = '0';
        endif;

       //˜Validate Last Valuation Time (Optional Field)
        wData = %Trim(CLP196);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'B1';
              exsr srGetErrorDescription;
           else;
              wChkNum = %Int(wData);
              if wChkNum > 999999;
                 wErrorCode = 'B1';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP196 = '0';
        endif;

       //˜Validate Amount pledged (Optional Field)
        wData = %Trim(CLP197);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'N0';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'N0';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP197 = '0';
        endif;

       //˜Validate Percent pledged (Optional Field)
        wData = %Trim(CLP198);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'N1';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
              if wChkLate > 99.999999999;
                 wErrorCode = 'N1';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP198 = '0';
        endif;

       //˜Validate Reinstatement Value (Optional Field)
        wData = %Trim(CLP204);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'N2';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'N2';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP204 = '0';
        endif;

       //˜Validate Discharge Date with Land (Optional Field)
        wData = %Trim(CLP205);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'N3';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP205 = '0';
        endif;

       //˜Validate Stay Start Date (Optional Field)
        wData = %Trim(CLP211);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'N4';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP211 = '0';
        endif;

       //˜Validate Aggregated Contract Amount (Optional Field)
        wData = %Trim(CLP213);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'N5';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'N5';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP213 = '0';
        endif;

       //˜Validate Aggregated Collateral Amount (Optional Field)
        wData = %Trim(CLP214);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'N6';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'N6';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP214 = '0';
        endif;

       //˜Validate Forced Sales Value (Optional Field)
        wData = %Trim(CLP217);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '19';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = '19';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP217 = '0';
        endif;

       //˜Validate Fair Market Value (Optional Field)
        wData = %Trim(CLP218);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '18';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = '18';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP218 = '0';
        endif;

       //˜Validate Valuation Freq (Optional Field)
        wData = %Trim(CLP219);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'M9';
              exsr srGetErrorDescription;
           else;
              wChkNum = %Int(wData);
                 if wChkNum > 999;
                 wErrorCode = 'M9';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP219 = '0';
        endif;

       endsr;

    Š  //***********************************************************************
       //ˆsrPgVal - Validate Collateral Category PG
    Š  //***********************************************************************
        begsr SrPgVal;

              RecType   = %Trim(CLP001);
              SequeNum  = %Trim(CLP002);
              CollCat   = %Trim(CLP003);
              CollCold  = %Trim(CLP004);
              BankNum   = %Trim(CLP005);
              BranchNum = %Trim(CLP006);
              RegCIFNum = %Trim(CLP007);
              exsr SrValidate;

       //˜Validate Currency (Optional Field)
        wDaTa = %Trim(CLP008);
        If wData = *blank;
           CLP008 = 'THB';
        endif;

       //˜Validate Guaranteed Amount (Mandatory Field)
        wData = %Trim(CLP009);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '70';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = '70';
                 exsr srGetErrorDescription;
                 wErrorCode = 'IL';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP009 = *blank;
           wErrorCode = '70';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Guarantee % (Optional Field)
        wData = %Trim(CLP010);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '73';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
                 if wChkLate > 99.999999999;
                 wErrorCode = '73';
                 exsr srGetErrorDescription;
                 wErrorCode = 'IL';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP010 = '1';
        endif;

       //˜Validate Contract Date (Mandatory Field)
        wData = %Trim(CLP011);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '68';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP011 = *blank;
           wErrorCode = '68';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Effective Date (Mandatory Field)
        wData = %Trim(CLP012);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '71';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP012 = *blank;
           wErrorCode = '71';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Expiry/Maturity Date (Mandatory Field)
        wData = %Trim(CLP013);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '69';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP013 = *blank;
           wErrorCode = '69';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Basis of Advance Indicator (Optional Field)
        wData = %Trim(CLP014);
        If wData = *blank;
           CLP014 = 'GUAR';
        endif;

       //˜Validate Basis of Advance Percent (Optional Field)
        wData = %Trim(CLP015);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '40';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
                 if wChkLate > 99.999999999;
                 wErrorCode = '40';
                 exsr srGetErrorDescription;
                 wErrorCode = 'IL';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP015 = '0';
        endif;

       //˜Validate Basel Eligible (Optional Field)
        wData = %Trim(CLP016);
        If wData = *blank;
           CLP016 = 'N';
        endif;

       //˜Validate Total O/S Balance (Optional Field)
        wData = %Trim(CLP017);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '72';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = '72';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP017 = '0';
        endif;

       //˜Validate Country of Registration (Optional Field)
        wData = %Trim(CLP018);
        If wData = *blank;
           CLP018 = 'TH';
        endif;

       //˜Validate Marked to Market Value (Y/N) (Optional Field)
        wData = %Trim(CLP019);
        If wData = *blank;
           CLP019 = 'N';
        endif;

       //˜Validate Allow Provisioning (Optional Field)
        wData = %Trim(CLP020);
        If wData = *blank;
           CLP020 = 'N';
        endif;

       //˜Validate Include SLL Computation (Optional Field)
        wData = %Trim(CLP021);
        If wData = *blank;
           CLP021 = 'N';
        endif;

       //˜Validate Apportion Realisable Value (Optional Field)
        wData = %Trim(CLP022);
        If wData = *blank;
           CLP022 = 'N';
        endif;

       //˜Validate Collateral ID (Optional Field)
        wData = %Trim(CLP023);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'F7';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP023 = '0';
        endif;

       //˜Validate Fee Renewal Date (Optional Field)
        wData = %Trim(CLP034);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'N7';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP034 = '0';
        endif;

       //˜Validate Date Fund Recieved (Optional Field)
        wData = %Trim(CLP038);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'N8';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP038 = '0';
        endif;

       //˜Validate Deposit Term (Optional Field)
        wData = %Trim(CLP039);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'J9';
              exsr srGetErrorDescription;
           else;
              wChkNum = %Int(wData);
              if wChkNum > 999;
                 wErrorCode = 'J9';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP039 = '0';
        endif;

       //˜Validate Grace Period (Optional Field)
        wData = %Trim(CLP041);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'N9';
              exsr srGetErrorDescription;
           else;
              wChkNum = %Int(wData);
              if wChkNum > 999;
                 wErrorCode = 'N9';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP041 = '0';
        endif;

       //˜Validate Collateral Value Cap Perc (Optional Field)
        wData = %Trim(CLP042);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'J0';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
              if wChkLate > 99.999999999;
                 wErrorCode = 'J0';
                 exsr srGetErrorDescription;
                 wErrorCode = 'IL';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP042 = '0';
        endif;

       //˜Validate Original coll. value (Optional Field)
        wData = %Trim(CLP043);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'J2';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'J2';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP043 = '0';
        endif;

       //˜Validate Review date (Optional Field)
        wData = %Trim(CLP044);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'K3';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP039 = '0';
        endif;

       //˜Validate Realisable Value (Optional Field)
        wData = %Trim(CLP046);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '27';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = '27';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP046 = '0';
        endif;

       //˜Validate Exchange Rate Date (Optional Field)
        wData = %Trim(CLP049);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'J9';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP049 = '0';
        endif;

       //˜Validate Valuation Date (Optional Field)
        wData = %Trim(CLP051);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '34';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP051 = '0';
        endif;

       //˜Validate Next valuation Date (Optional Field)
        wData = %Trim(CLP052);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '16';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP052 = '0';
        endif;

       //˜Validate Valuation Freq (Optional Field)
        wData = %Trim(CLP053);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'M9';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP053 = '0';
        endif;

       //˜Validate Last Valuation Date (Optional Field)
        wData = %Trim(CLP055);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '33';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP055 = '0';
        endif;

       //˜Validate Last Valuation Time (Optional Field)
        wData = %Trim(CLP056);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'B1';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP056 = '0';
        endif;

       //˜Validate Secured Portion (Optional Field)
        wData = %Trim(CLP059);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'O0';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'O0';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP059 = '0';
        endif;

       //˜Validate Unsecured Portion (Optional Field)
        wData = %Trim(CLP060);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'O1';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'O1';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP060 = '0';
        endif;

       //˜Validate Guarantee Amount (Secured) (Optional Field)
        wData = %Trim(CLP061);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'O2';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'O2';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP061 = '0';
        endif;

       //˜Validate Guarantee % (Secured) (Optional Field)
        wData = %Trim(CLP062);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'O3';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
              if wChkLate > 99.999999999;
                 wErrorCode = 'O3';
                 exsr srGetErrorDescription;
                 wErrorCode = 'IL';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP062 = '0';
        endif;

       //˜Validate Guarantee Amount (Unsecured) (Optional Field)
        wData = %Trim(CLP063);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'O4';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'O4';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP063 = '0';
        endif;

       //˜Validate Guarantee % (Unsecured) (Optional Field)
        wData = %Trim(CLP064);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'O5';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
              if wChkLate > 99.999999999;
                 wErrorCode = 'O5';
                 exsr srGetErrorDescription;
                 wErrorCode = 'IL';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP064 = '0';
        endif;

       //˜Validate Amount pledged (Optional Field)
        wData = %Trim(CLP065);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'N0';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'N0';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP065 = '0';
        endif;

       //˜Validate Percent pledged (Optional Field)
        wData = %Trim(CLP066);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'N1';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
              if wChkLate > 99.999999999;
                 wErrorCode = 'N1';
                 exsr srGetErrorDescription;
                 wErrorCode = 'IL';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP066 = '0';
        endif;

       //˜Validate Country  of Origination (Optional Field)
        wData = %Trim(CLP067);
        If wData = *blank;
           CLP067 = 'TH';
        endif;

       //˜Validate Unsecured CGC Fee % (Optional Field)
        wData = %Trim(CLP068);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'O6';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
              if wChkLate > 99.999999999;
                 wErrorCode = 'O6';
                 exsr srGetErrorDescription;
                 wErrorCode = 'IL';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP068 = '0';
        endif;

       //˜Validate Secured CGC Fee % (Optional Field)
        wData = %Trim(CLP070);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'O7';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
              if wChkLate > 99.999999999;
                 wErrorCode = 'O7';
                 exsr srGetErrorDescription;
                 wErrorCode = 'IL';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP070 = '0';
        endif;

       //˜Validate Registered Owner CIF Numb 1 (Optional Field)
        wData = %Trim(CLP071);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'O8';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP071 = '0';
        endif;

       //˜Validate Registered Owner CIF Numb 2 (Optional Field)
        wData = %Trim(CLP072);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'O9';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP072 = '0';
        endif;

       //˜Validate Registered Owner CIF Numb 3 (Optional Field)
        wData = %Trim(CLP073);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'P1';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP073 = '0';
        endif;

       //˜Validate Registered Owner CIF Numb 4 (Optional Field)
        wData = %Trim(CLP074);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'P2';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP074 = '0';
        endif;

       //˜Validate Registered Owner CIF Numb 5 (Optional Field)
        wData = %Trim(CLP075);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'P3';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP075 = '0';
        endif;

       //˜Validate Created User ID (Optional Field)
        wData = %Trim(CLP076);
        If wData = *blank;
           CLP067 = 'CLI500';
        endif;

       //˜Validate Created Date (Optional Field)
        wData = %Trim(CLP077);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '91';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP077 = %Char(SP1NB8) ;
        endif;

       //˜Validate Collateral Tagging Date (Optional Field)
        wData = %Trim(CLP081);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'J1';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP081 = '0' ;
        endif;

       endsr;

    Š  //***********************************************************************
       //ˆSrSTOCKVal - Validate Collateral Category STOCK
    Š  //***********************************************************************
        begsr SrSTOCKVal;

              RecType   = %Trim(CLP001);
              SequeNum  = %Trim(CLP002);
              CollCat   = %Trim(CLP003);
              CollCold  = %Trim(CLP004);
              BankNum   = %Trim(CLP005);
              BranchNum = %Trim(CLP006);
              RegCIFNum = %Trim(CLP007);
              exsr SrValidate;

              wkCCDSHR  = *Zero;
              wkCNLSPR  = *Zero;
              wkCCDCMV  = *Zero;

       //˜Validate Stock Code (Mandatory Field)
        wData = %Trim(CLP008);
        If wData = *blank;
           wErrorCode = '76';
           exsr srGetErrorDescription;
        else;
           Chain (wData)SMCNTR;
           If not %found(SMCNTR);
              wErrorCode = 'ZZ';
              exsr srGetErrorDescription;
           else;
              CLP021 = %Trim(CNEXCH);
              CLP022 = %Char(CNLSPR);
              CLP024 = %Trim(CNEXCH);
              CLP112 = %Trim(CNSTAT);
           endif;
        endif;

       //˜Validate Number of Units (Mandatory Field)
        wData = %Trim(CLP009);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '84';
              exsr srGetErrorDescription;
           else;
              wkCCDSHR = %Dec(wData:13:0);
           endif;
        else;
           CLP009 = *blank;
           wErrorCode = '84';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Beneficiary Name (Mandatory Field)
        If CLP010 = *blank;
           wErrorCode = '77';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Sequence No. 1 (Mandatory Field)
        wData = %Trim(CLP011);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'V3';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP011 = *blank;
           wErrorCode = 'V3';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Share Certificate 1 (Mandatory Field)
        If CLP012 = *blank;
           wErrorCode = 'DB';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Serial No (From) 1 (Mandatory Field)
        wData = %Trim(CLP013);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'V4';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP013 = *blank;
           wErrorCode = 'V4';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Serial No (To) 1 (Mandatory Field)
        wData = %Trim(CLP014);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'V5';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP014 = *blank;
           wErrorCode = 'V5';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Share Quantity 1 (Mandatory Field)
        wData = %Trim(CLP015);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'V6';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP015 = *blank;
           wErrorCode = 'V6';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Reg. Owner Short Name (Mandatory Field)
       // If CLP016 = *blank;                                                  //C0001
       //    wErrorCode = '74';                                                //C0001
       //    exsr srGetErrorDescription;                                       //C0001
       // endif;                                                               //C0001

       //˜Validate Total Market Value (Mandatory Field)
       //˜Calculate Total Market Value
        wData = %Trim(CLP022);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'BY';
              exsr srGetErrorDescription;
           else;
              wkCNLSPR = %Dec(wData:13:7);
              If wkCCDSHR < 0;
                 wErrorCode = 'ZA';
                 exsr srGetErrorDescription;
              else;
                 wkCCDCMV = wkCNLSPR * wkCCDSHR;
                 CLP017 = %Char(wkCCDCMV);
              endif;
           endif;
        endif;

       // wData = %Trim(CLP017);
       // If wData <> *Blank;
       //    wTestField=wData;
       //    Exsr srTestDigits;
       //    If wErrorCode<>*blank;
       //       wErrorCode = 'BW';
       //       exsr srGetErrorDescription;
       //    else;
       //       wChkAmt = %Dec(wData:19:2);
       //       if wChkAmt > 999999999999999.99;
       //          wErrorCode = 'BW';
       //          exsr srGetErrorDescription;
       //          wErrorCode = 'II';
       //          exsr srGetErrorDescription;
       //       endif;
       //    endif;
       // else;
       //    CLP017 = *blank;
       //    wErrorCode = 'BW';
       //    exsr srGetErrorDescription;
       // endif;

       //˜Validate Basis of Advance Indicator (Mandatory Field)
        wData = %Trim(CLP018);
        If wData = *blank;
           CLP018 = 'FMV';
        endif;

       //˜Validate Remarks (Mandatory Field)
       // If CLP019 = *blank;
       //    wErrorCode = 'BX';
       //    exsr srGetErrorDescription;
       // endif;

       //˜Validate Share Collateral (Mandatory Field)
        wData = %Trim(CLP020);
        If wData = *blank;
           CLP020 = 'N';
        endif;

       //˜Validate Stock Exchange Code (Mandatory Field)
       // If CLP021 = *blank;
       //    wErrorCode = '80';
       //    exsr srGetErrorDescription;
       // endif;

       //˜Validate Unit Price (Mandatory Field)
       // wData = %Trim(CLP022);
       // If wData <> *Blank;
       //    wTestField=wData;
       //    Exsr srTestDigits;
       //    If wErrorCode<>*blank;
       //       wErrorCode = 'BY';
       //       exsr srGetErrorDescription;
       //    else;
       //       wChkCloPri = %Dec(wData:19:7);
       //       if wChkCloPri > 999999.9999999;
       //          wErrorCode = 'BY';
       //          exsr srGetErrorDescription;
       //          wErrorCode = 'II';
       //          exsr srGetErrorDescription;
       //       endif;
       //    endif;
       // else;
       //    CLP022 = *blank;
       //    wErrorCode = 'BY';
       //    exsr srGetErrorDescription;
       // endif;

       //˜Validate Listed/Non Listed (Mandatory Field)
        wData = %Trim(CLP023);
        If wData = *blank;
           CLP023 = 'N';
        endif;

       //˜Validate Stock Exchange Code (Mandatory Field)
       // If CLP024 = *blank;
       //    wErrorCode = '80';
       //    exsr srGetErrorDescription;
       // endif;

       //˜Validate Collateral Status (Mandatory Field)
        wData = %Trim(CLP025);
        If wData = *blank;
           CLP025 = '1';
        endif;

       //˜Validate Country of Registration (Mandatory Field)
        wData = %Trim(CLP026);
        If wData = *blank;
           CLP026 = 'TH';
        endif;

       //˜Validate Currency (Mandatory Field)
        wData = %Trim(CLP027);
        If wData = *blank;
           CLP027 = 'THB';
        endif;

       //˜Validate Marked to Market Value (Y/N) (Mandatory Field)
        wData = %Trim(CLP028);
        If wData = *blank;
           CLP028 = 'N';
        endif;

       //˜Validate Apportion Realisable Value (Mandatory Field)
        wData = %Trim(CLP029);
        If wData = *blank;
           CLP029 = 'N';
        endif;

       //˜Validate Amount In Current (Mandatory Field)
        wData = %Trim(CLP030);
        If wData = *blank;
           CLP030 = 'THB';
        endif;

       //˜Validate Global Collateral (Y/N) (Mandatory Field)
        wData = %Trim(CLP031);
        If wData = *blank;
           CLP031 = 'N';
        endif;

       //˜Validate Basis of Advance Percentage (Mandatory Field)
        wData = %Trim(CLP032);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '40';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
              if wChkLate > 99.999999999;
                 wErrorCode = '40';
                 exsr srGetErrorDescription;
                 wErrorCode = 'IL';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP032 = '1';
        endif;

       //˜Validate Basel Eligible (Mandatory Field)
        wData = %Trim(CLP033);
        If wData = *blank;
           CLP033 = 'P';
        endif;

       //˜Validate Allow Provisioning (Mandatory Field)
        wData = %Trim(CLP034);
        If wData = *blank;
           CLP034 = 'N';
        endif;

       //˜Validate Include SLL Computation (Mandatory Field)
        wData = %Trim(CLP035);
        If wData = *blank;
           CLP035 = 'N';
        endif;

       //˜Validate Collateral ID (Optional Field)
        wData = %Trim(CLP036);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'F7';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP036 = '0';
        endif;

       //˜Validate Valuation Date (Mandatory Field)
        wData = %Trim(CLP042);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '34';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP042 = '0';
        endif;

       //˜Validate Collateral Value Cap Perc (Optional Field)
        wData = %Trim(CLP045);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'J0';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
              if wChkLate > 99.999999999;
                 wErrorCode = 'J0';
                 exsr srGetErrorDescription;
                 wErrorCode = 'IL';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP045 = '0';
        endif;

       //˜Validate Date of Tagging (Optional Field)
        wData = %Trim(CLP047);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'BZ';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP047 = '0';
        endif;

       //˜Validate Review date (Optional Field)
        wData = %Trim(CLP048);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'K3';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP048 = '0';
        endif;

       //˜Validate Original coll. value (Optional Field)
        wData = %Trim(CLP049);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'J2';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'J2';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP049 = '0';
        endif;

       //˜Validate Date Ownership Transfred (Optional Field)
        wData = %Trim(CLP051);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'J4';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP051 = '0';
        endif;

       //˜Validate Date Owner Transf Remove (Optional Field)
        wData = %Trim(CLP052);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'J5';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP052 = '0';
        endif;

       //˜Validate Date Collateral Received (Optional Field)
        wData = %Trim(CLP053);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'J6';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP053 = '0';
        endif;

       //˜Validate Min. Cap. per unit (Optional Field)
        wData = %Trim(CLP054);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'U5';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'U5';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP054 = '0';
        endif;

       //˜Validate Max. Cap. per unit (Optional Field)
        wData = %Trim(CLP055);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'U6';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'U6';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP055 = '0';
        endif;

       //˜Validate Exchange Rate (Optional Field)
        wData = %Trim(CLP057);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'U7';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
                 if wChkLate > 9999999.999999999;
                 wErrorCode = 'U7';
                 exsr srGetErrorDescription;
                 wErrorCode = 'IL';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP057 = '0';
        endif;

       //˜Validate Official Valuation (Optional Field)
        wData = %Trim(CLP058);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'G6';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'G6';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP058 = '0';
        endif;

       //˜Validate Internal/Br. Valuation (Optional Field)
        wData = %Trim(CLP059);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'K0';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'K0';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP059 = '0';
        endif;

       //˜Validate Original value (Optional Field)
        wData = %Trim(CLP061);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'U8';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'U8';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP061 = '0';
        endif;

       //˜Validate Realisable Value (Optional Field)
        wData = %Trim(CLP063);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'L2';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'L2';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP063 = '0';
        endif;

       //˜Validate Caped Price (Optional Field)
        wData = %Trim(CLP064);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'U9';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'U9';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP064 = '0';
        endif;

       //˜Validate Moratorium Unit (Optional Field)
        wData = %Trim(CLP065);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'V0';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'V0';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP065 = '0';
        endif;

       //˜Validate Moratorium Expiry Date (Optional Field)
        wData = %Trim(CLP066);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'V1';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP066 = '0';
        endif;

       //˜Validate Created Date (Mandatory Field)
        wData = %Trim(CLP068);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '91';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP068 = %Char(SP1NB8) ;
        endif;

       //˜Validate Total O/S Balance (Mandatory Field)
        wData = %Trim(CLP072);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '72';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = '72';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP072 = '0';
        endif;

       //˜Validate Exchange Rate Date (Optional Field)
        wData = %Trim(CLP073);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'M8';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP073 = '0';
        endif;

       //˜Validate Next valuation Date (Optional Field)
        wData = %Trim(CLP074);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '16';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP074 = '0';
        endif;

       //˜Validate Valuation Freq (Optional Field)
        wData = %Trim(CLP075);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'M9';
              exsr srGetErrorDescription;
           else;
              wChkNum = %Int(wData);
              if wChkNum > 999;
                 wErrorCode = 'M9';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP075 = '0';
        endif;

       //˜Validate Last Valuation Date (Optional Field)
        wData = %Trim(CLP077);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '33';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP077 = '0';
        endif;

       //˜Validate Last Valuation Time (Optional Field)
        wData = %Trim(CLP078);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'B1';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP078 = '0';
        endif;

       //˜Validate SMF Account No. (Optional Field)
        wData = %Trim(CLP079);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'V2';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP079 = '0';
        endif;

       //˜Validate Amount pledged (Optional Field)
        wData = %Trim(CLP082);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'N0';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'N0';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP082 = '0';
        endif;

       //˜Validate Percent pledged (Optional Field)
        wData = %Trim(CLP083);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'N1';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
              if wChkLate > 99.999999999;
                 wErrorCode = 'N1';
                 exsr srGetErrorDescription;
                 wErrorCode = 'IL';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP083 = '0';
        endif;

       //˜Validate Reg. Owner CIF 1 (Mandatory Field)
        wData = %Trim(CLP087);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '64';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP087 = '0';
        endif;

       //˜Validate REG. OWNER CIF 2 (Optional Field)
        wData = %Trim(CLP088);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '93';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP088 = '0';
        endif;

       //˜Validate REG. OWNER CIF 3 (Optional Field)
        wData = %Trim(CLP089);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '94';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP089 = '0';
        endif;

       //˜Validate REG. OWNER CIF 4 (Optional Field)
        wData = %Trim(CLP090);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '95';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP090 = '0';
        endif;

       //˜Validate REG. OWNER CIF 5 (Optional Field)
        wData = %Trim(CLP091);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '96';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP091 = '0';
        endif;

       //˜Validate Sequence No. 2 (Optional Field)
        wData = %Trim(CLP092);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'V7';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP092 = '0';
        endif;

       //˜Validate Serial No (From) 2 (Optional Field)
        wData = %Trim(CLP094);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'V8';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP094 = '0';
        endif;

       //˜Validate Serial No (To) 2 (Optional Field)
        wData = %Trim(CLP095);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'V9';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP095 = '0';
        endif;

       //˜Validate Share Quantity 2 (Optional Field)
        wData = %Trim(CLP096);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'W0';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP096 = '0';
        endif;

       //˜Validate Sequence No. 3 (Optional Field)
        wData = %Trim(CLP097);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'W1';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP097 = '0';
        endif;

       //˜Validate Serial No (From) 3 (Optional Field)
        wData = %Trim(CLP099);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'W2';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP099 = '0';
        endif;

       //˜Validate Serial No (To) 3 (Optional Field)
        wData = %Trim(CLP100);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'W3';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP100 = '0';
        endif;

       //˜Validate Share Quantity 3 (Optional Field)
        wData = %Trim(CLP101);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'W4';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP101 = '0';
        endif;

       //˜Validate Sequence No. 4 (Optional Field)
        wData = %Trim(CLP102);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'W5';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP102 = '0';
        endif;

       //˜Validate Serial No (From) 4 (Optional Field)
        wData = %Trim(CLP104);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'W6';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP104 = '0';
        endif;

       //˜Validate Serial No (To) 4 (Optional Field)
        wData = %Trim(CLP105);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'W7';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP105 = '0';
        endif;

       //˜Validate Share Quantity 4 (Optional Field)
        wData = %Trim(CLP106);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'W8';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP106 = '0';
        endif;

       //˜Validate Sequence No. 5 (Optional Field)
        wData = %Trim(CLP107);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'W9';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP107 = '0';
        endif;

       //˜Validate Serial No (From) 5 (Optional Field)
        wData = %Trim(CLP109);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'X0';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP109 = '0';
        endif;

       //˜Validate Serial No (To) 5 (Optional Field)
        wData = %Trim(CLP110);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'X1';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP110 = '0';
        endif;

       //˜Validate Share Quantity 5 (Optional Field)
        wData = %Trim(CLP111);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'X2';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP111 = '0';
        endif;

       endsr;

    Š  //***********************************************************************
       //ˆSrDEBTVal - Validate Collateral Category DEBT
    Š  //***********************************************************************
        begsr SrDEBTVal;

              RecType   = %Trim(CLP001);
              SequeNum  = %Trim(CLP002);
              CollCat   = %Trim(CLP003);
              CollCold  = %Trim(CLP004);
              BankNum   = %Trim(CLP005);
              BranchNum = %Trim(CLP006);
              RegCIFNum = %Trim(CLP007);
              exsr SrValidate;

              wkCCDSHR_D = *zero;
              wkLPBNPR_D = *zero;
              wkCCDCMV_D = *zero;

       //˜Validate Debt Security Code (Mandatory Field)
        wData = %Trim(CLP008);
        If wData = *blank;
           wErrorCode = 'DA';
           exsr srGetErrorDescription;
        else;
           Chain (wData)CLCLP8;
           If not %found(CLCLP8);
              wErrorCode = 'ZY';
              exsr srGetErrorDescription;
           else;
              CLP009 = %Trim(LPBTYP);
              wkLPBNPR_D = %Dec(LPBNPR:19:5);
              CLP020 = %Char(LPBISD8);
              CLP021 = %Char(LPBINR);
              CLP026 = %Trim(LPBEXC);
              CLP048 = %Char(LPBMTD8);
           endif;
        endif;

       //˜Validate Debt Security Type (Mandatory Field)
       // If CLP009 = *blank;
       //    wErrorCode = '83';
       //    exsr srGetErrorDescription;
       // endif;

       //˜Validate Beneficiary Name (Mandatory Field)
        If CLP010 = *blank;
           wErrorCode = '77';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Sequence No. 1 (Optional Field)
        wData = %Trim(CLP011);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'V3';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP011 = '0';
        endif;

       //˜Validate Share Certificate 1 (Mandatory Field)
        If CLP012 = *blank;
           wErrorCode = 'DB';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Serial No (From) 1 (Mandatory Field)
        wData = %Trim(CLP013);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'V4';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP013 = *blank;
           wErrorCode = 'V4';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Serial No (To) 1 (Mandatory Field)
        wData = %Trim(CLP014);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'V5';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP014 = *blank;
           wErrorCode = 'V5';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Share Quantity 1 (Mandatory Field)
        wData = %Trim(CLP015);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'V6';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP015 = *blank;
           wErrorCode = 'V6';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Reg. Owner Short Name (Mandatory Field)
       // If CLP016 = *blank;                                            //C0001
       //    wErrorCode = '74';                                          //C0001
       //    exsr srGetErrorDescription;                                 //C0001
       // endif;                                                         //C0001

       //˜Validate Number of Units (Mandatory Field)
       //˜Validate Total Market Value (Mandatory Field)
        wData = %Trim(CLP018);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '84';
              exsr srGetErrorDescription;
           Else;
              wkCCDSHR_D = %Dec(wData:13:0);
           endif;
        else;
           CLP018 = *blank;
           wErrorCode = '84';
           exsr srGetErrorDescription;
        endif;

       //˜Calculate Total Market Value
        If wkCCDSHR_D < 0;
           wErrorCode = 'ZA';
           exsr srGetErrorDescription;
        else;
           wkCCDCMV_D = wkLPBNPR_D * wkCCDSHR_D;
           CLP017 = %Char(wkCCDCMV_D);
        endif;

       //˜Validate Discount Period (Mandatory Field)
        wData = %Trim(CLP019);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '85';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP019 = *blank;
           wErrorCode = '85';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Issue Date (Mandatory Field)
       // wData = %Trim(CLP020);
       // If wData <> *Blank;
       //    wTestField=wData;
       //    Exsr srTestIntegers;
       //    If wErrorCode<>*blank;
       //       wErrorCode = '86';
       //       exsr srGetErrorDescription;
       //    endif;
       // else;
       //    CLP020 = *blank;
       //    wErrorCode = '86';
       //    exsr srGetErrorDescription;
       // endif;

       //˜Validate Interest Rate (Mandatory Field)
       // wData = %Trim(CLP021);
       // If wData <> *Blank;
       //    wTestField=wData;
       //    Exsr srTestDigits;
       //    If wErrorCode<>*blank;
       //       wErrorCode = 'BD';
       //       exsr srGetErrorDescription;
       //    else;
       //       wChkLate = %Dec(wData:19:9);
       //       if wChkLate > 99.999999999;
       //          wErrorCode = 'BD';
       //          exsr srGetErrorDescription;
       //          wErrorCode = 'IL';
       //          exsr srGetErrorDescription;
       //       endif;
       //    endif;
       // else;
       //    CLP021 = *blank;
       //    wErrorCode = 'DC';
       //    exsr srGetErrorDescription;
       // endif;

       //˜Validate Basis of Advance Indicator (Mandatory Field)
        If CLP022 = *blank;
           wErrorCode = '21';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Share Collateral (Mandatory Field)
        If CLP023 = *blank;
           wErrorCode = '26';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Created User ID (Mandatory Field)
        If CLP024 = *blank;
           wErrorCode = '90';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Created Date (Mandatory Field)
        wData = %Trim(CLP025);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '91';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP025 = %Char(SP1NB8) ;
        endif;

       //˜Validate Stock Exchange Code (Mandatory Field)
        If CLP026 = *blank;
           wErrorCode = '80';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Collateral Status (Mandatory Field)
        wData = %Trim(CLP027);
        If wData = *blank;
           CLP027 = '1';
        endif;

       //˜Validate Country of Registration (Mandatory Field)
        wData = %Trim(CLP028);
        If wData = *blank;
           CLP028 = 'TH';
        endif;

       //˜Validate Currency (Mandatory Field)
        wData = %Trim(CLP029);
        If wData = *blank;
           CLP029 = 'THB';
        endif;

       //˜Validate Marked to Market Value (Y/N) (Mandatory Field)
        wData = %Trim(CLP030);
        If wData = *blank;
           CLP030 = 'N';
        endif;

       //˜Validate Apportion Realisable Value (Mandatory Field)
        wData = %Trim(CLP031);
        If wData = *blank;
           CLP031 = 'N';
        endif;

       //˜Validate Global Collateral (Y/N) (Mandatory Field)
        wData = %Trim(CLP032);
        If wData = *blank;
           CLP032 = 'N';
        endif;

       //˜Validate Basel Eligible (Mandatory Field)
        wData = %Trim(CLP033);
        If wData = *blank;
           CLP033 = 'P';
        endif;

       //˜Validate Basis of Advance Percentage (Mandatory Field)
        wData = %Trim(CLP034);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '40';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
              if wChkLate > 99.999999999;
                 wErrorCode = '40';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP034 = '1';
        endif;

       //˜Validate Allow Provisioning (Mandatory Field)
        wData = %Trim(CLP035);
        If wData = *blank;
           CLP035 = 'N';
        endif;

       //˜Validate Include SLL Computation (Mandatory Field)
        wData = %Trim(CLP036);
        If wData = *blank;
           CLP036 = 'Y';
        endif;

       //˜Validate Collateral ID (Optional Field)
        wData = %Trim(CLP037);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'F7';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP037 = '0';
        endif;

       //˜Validate Registration Date (Optional Field)
        wData = %Trim(CLP045);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'X3';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP045 = '0';
        endif;

       //˜Validate Int.Receivable Date DDMM (Optional Field)
        wData = %Trim(CLP046);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'X4';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP046 = '0';
        endif;

       //˜Validate Issued Times (Optional Field)
        wData = %Trim(CLP047);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'X5';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP047 = '0';
        endif;

       //˜Validate Debt Security Maturity Date (Optional Field)
       // wData = %Trim(CLP048);
       // If wData <> *Blank;
       //    wTestField=wData;
       //    Exsr srTestIntegers;
       //    If wErrorCode<>*blank;
       //       wErrorCode = 'X6';
       //       exsr srGetErrorDescription;
       //    endif;
       // else;
       //    CLP048 = '0';
       // endif;

       //˜Validate Discount Rate (Optional Field)
        wData = %Trim(CLP049);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'X7';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
              if wChkLate > 99.999999999;
                 wErrorCode = 'X7';
                 exsr srGetErrorDescription;
                 wErrorCode = 'IL';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP049 = '0';
        endif;

       //˜Validate Collateral Value Cap Percent (Optional Field)
        wData = %Trim(CLP053);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'J0';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
              if wChkLate > 99.999999999;
                 wErrorCode = 'J0';
                 exsr srGetErrorDescription;
                 wErrorCode = 'IL';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP053 = '0';
        endif;

       //˜Validate Date of Tagging (Optional Field)
        wData = %Trim(CLP055);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'BZ';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP055 = '0';
        endif;

       //˜Validate Original coll. value (Optional Field)
        wData = %Trim(CLP056);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'J2';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'J2';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP056 = '0';
        endif;

       //˜Validate Date Ownership Transfred (Optional Field)
        wData = %Trim(CLP057);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'J4';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP057 = '0';
        endif;

       //˜Validate Date Owner Transf Remove (Optional Field)
        wData = %Trim(CLP058);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'J5';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP058 = '0';
        endif;

       //˜Validate Review date (Optional Field)
        wData = %Trim(CLP059);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'K3';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP059 = '0';
        endif;

       //˜Validate Date Collateral Received (Optional Field)
        wData = %Trim(CLP060);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'J6';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP060 = '0';
        endif;

       //˜Validate Realisable Value (Optional Field)
        wData = %Trim(CLP065);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'L2';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'L2';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP065 = '0';
        endif;

       //˜Validate Standard Hair Cut Rate (Optional Field)
        wData = %Trim(CLP066);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'X8';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
              if wChkLate > 99.999999999;
                 wErrorCode = 'X8';
                 exsr srGetErrorDescription;
                 wErrorCode = 'IL';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP066 = '0';
        endif;

       //˜Validate Currency Mismatch Hair Cut Rate (Optional Field)
        wData = %Trim(CLP067);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'X9';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
              if wChkLate > 99.999999999;
                 wErrorCode = 'X9';
                 exsr srGetErrorDescription;
                 wErrorCode = 'IL';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP067 = '0';
        endif;

       //˜Validate Total O/S Balance (Optional Field)
        wData = %Trim(CLP070);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '72';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = '72';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP070 = '0';
        endif;

       //˜Validate Exchange Rate Date (Optional Field)
        wData = %Trim(CLP071);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'M8';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP071 = '0';
        endif;

       //˜Validate Next valuation Date (Optional Field)
        wData = %Trim(CLP072);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '16';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP072 = '0';
        endif;

       //˜Validate Valuation Freq (Optional Field)
        wData = %Trim(CLP073);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'M9';
              exsr srGetErrorDescription;
           else;
              wChkNum = %Int(wData);
              if wChkNum > 999;
                 wErrorCode = 'M9';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP073 = '0';
        endif;

       //˜Validate Last Valuation Date (Optional Field)
        wData = %Trim(CLP075);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '33';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP075 = '0';
        endif;

       //˜Validate Last Valuation Time (Optional Field)
        wData = %Trim(CLP076);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'B1';
              exsr srGetErrorDescription;
           else;
              wChkNum = %Int(wData);
              if wChkNum > 999999;
                 wErrorCode = 'B1';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP076 = '0';
        endif;

       //˜Validate Amount pledged (Optional Field)
        wData = %Trim(CLP077);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'N0';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'N0';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP077 = '0';
        endif;

       //˜Validate Percent pledged (Optional Field)
        wData = %Trim(CLP078);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'N1';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
              if wChkLate > 99.999999999;
                 wErrorCode = 'N1';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP078 = '0';
        endif;

       //˜Validate Reg. Owner CIF 1 (Optional Field)
        wData = %Trim(CLP082);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '64';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP082 = '0';
        endif;

       //˜Validate REG. OWNER CIF 2 (Optional Field)
        wData = %Trim(CLP083);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '93';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP083 = '0';
        endif;

       //˜Validate REG. OWNER CIF 3 (Optional Field)
        wData = %Trim(CLP084);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '94';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP084 = '0';
        endif;

       //˜Validate REG. OWNER CIF 4 (Optional Field)
        wData = %Trim(CLP085);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '95';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP085 = '0';
        endif;

       //˜Validate REG. OWNER CIF 5 (Optional Field)
        wData = %Trim(CLP086);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '96';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP086 = '0';
        endif;

       //˜Validate Sequence No. 2 (Optional Field)
        wData = %Trim(CLP087);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'V7';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP087 = '0';
        endif;

       //˜Validate Serial No (From) 2 (Optional Field)
        wData = %Trim(CLP089);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'V8';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP089 = '0';
        endif;

       //˜Validate Serial No (To) 2 (Optional Field)
        wData = %Trim(CLP090);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'V9';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP090 = '0';
        endif;

       //˜Validate Share Quantity 2 (Optional Field)
        wData = %Trim(CLP091);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'W0';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP091 = '0';
        endif;

       //˜Validate Sequence No. 3 (Optional Field)
        wData = %Trim(CLP092);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'W1';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP092 = '0';
        endif;

       //˜Validate Serial No (From) 3 (Optional Field)
        wData = %Trim(CLP094);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'W2';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP094 = '0';
        endif;

       //˜Validate Serial No (To) 3 (Optional Field)
        wData = %Trim(CLP095);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'W3';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP095 = '0';
        endif;

       //˜Validate Share Quantity 3 (Optional Field)
        wData = %Trim(CLP096);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'W4';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP096 = '0';
        endif;

       //˜Validate Sequence No. 4 (Optional Field)
        wData = %Trim(CLP097);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'W5';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP097 = '0';
        endif;

       //˜Validate Serial No (From) 4 (Optional Field)
        wData = %Trim(CLP099);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'W6';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP099 = '0';
        endif;

       //˜Validate Serial No (To) 4 (Optional Field)
        wData = %Trim(CLP100);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'W7';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP100 = '0';
        endif;

       //˜Validate Share Quantity 4 (Optional Field)
        wData = %Trim(CLP101);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'W8';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP101 = '0';
        endif;

       //˜Validate Sequence No. 5 (Optional Field)
        wData = %Trim(CLP102);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'W9';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP102 = '0';
        endif;

       //˜Validate Serial No (From) 5 (Optional Field)
        wData = %Trim(CLP104);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'X0';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP104 = '0';
        endif;

       //˜Validate Serial No (To) 5 (Optional Field)
        wData = %Trim(CLP105);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'X1';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP105 = '0';
        endif;

       //˜Validate Share Quantity 5 (Optional Field)
        wData = %Trim(CLP106);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'X2';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP106 = '0';
        endif;

       endsr;

    Š  //***********************************************************************
       //ˆSrLcVal - Validate Collateral Category LC
    Š  //***********************************************************************
        begsr SrLcVal;

              RecType   = %Trim(CLP001);
              SequeNum  = %Trim(CLP002);
              CollCat   = %Trim(CLP003);
              CollCold  = %Trim(CLP004);
              BankNum   = %Trim(CLP005);
              BranchNum = %Trim(CLP006);
              RegCIFNum = %Trim(CLP007);
              exsr SrValidate;

       //˜Validate Standby LC number (Mandatory Field)
        If CLP008 = *blank;
           wErrorCode = 'DD';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Issuance Date (Mandatory Field)
        wData = CLP009;
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '86';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP009 = *blank;
           wErrorCode = '86';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Expiry Date (Mandatory Field)
        wData = %Trim(CLP010);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'DO';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP010 = *blank;
           wErrorCode = 'DO';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Standby LC Amount (Mandatory Field)
        wData = %Trim(CLP011);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'DE';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'DE';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP011 = *blank;
           wErrorCode = 'DE';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Issuing institution/Bank (Mandatory Field)
        If CLP012 = *blank;
           wErrorCode = 'A2';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Reg. Owner Short Name (Mandatory Field)
       // If CLP013 = *blank;                                                  //C0001
       //    wErrorCode = '74';                                                //C0001
       //    exsr srGetErrorDescription;                                       //C0001
       // endif;                                                               //C0001

       //˜Validate Confirmation from Issuing Bank Date (Mandatory Field)
        wData = %Trim(CLP014);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'DP';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP014 = *blank;
           wErrorCode = 'DP';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Relationship Code (Mandatory Field)
        wData = %Trim(CLP015);
        If wData = *blank;
           CLP015 = *blank;
        endif;

       //˜Validate Share Collateral (Mandatory Field)
        If CLP016 = *blank;
           wErrorCode = '26';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Total O/S Balance (Mandatory Field)
        wData = %Trim(CLP017);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '72';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = '72';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP017 = *blank;
           wErrorCode = '72';
           exsr srGetErrorDescription;
        endif;

       //˜Validate 3rd Party Name (Mandatory Field)
        If CLP018 = *blank;
           wErrorCode = 'A4';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Collateral Status (Mandatory Field)
        wData = %Trim(CLP019);
        If wData = *blank;
           CLP019 = '1';
        endif;

       //˜Validate Country Code (Mandatory Field)
        wData = %Trim(CLP020);
        If wData = *blank;
           CLP020 = 'TH';
        endif;

       //˜Validate Currency (Mandatory Field)
        wData = %Trim(CLP021);
        If wData = *blank;
           CLP021 = 'THB';
        endif;

       //˜Validate Marked to Market Value (Y/N) (Mandatory Field)
        wData = %Trim(CLP022);
        If wData = *blank;
           CLP022 = 'N';
        endif;

       //˜Validate Basis of Advance Indicator (Mandatory Field)
        wData = %Trim(CLP024);
        If wData = *blank;
           CLP024 = 'FMV';
        endif;

       //˜Validate Basis of Advance Percentage (Mandatory Field)
        wData = %Trim(CLP024);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '40';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
              if wChkLate > 99.999999999;
                 wErrorCode = '40';
                 exsr srGetErrorDescription;
                 wErrorCode = 'IL';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP024 = '1';
        endif;

       //˜Validate Apportion Realisable Value (Mandatory Field)
        wData = %Trim(CLP025);
        If wData = *blank;
           CLP025 = 'N';
        endif;

       //˜Validate Global Collateral (Y/N) (Mandatory Field)
        wData = %Trim(CLP026);
        If wData = *blank;
           CLP026 = 'N';
        endif;

       //˜Validate Basel Eligible (Mandatory Field)
        wData = %Trim(CLP027);
        If wData = *blank;
           CLP027 = 'P';
        endif;

       //˜Validate Allow Provisioning (Mandatory Field)
        wData = %Trim(CLP028);
        If wData = *blank;
           CLP028 = 'Y';
        endif;

       //˜Validate Include SLL Computation (Mandatory Field)
        wData = %Trim(CLP029);
        If wData = *blank;
           CLP029 = 'Y';
        endif;

       //˜Validate Collateral ID (Optional Field)
        wData = %Trim(CLP030);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'F7';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP030 = '0';
        endif;

       //˜Validate Original coll. value (Optional Field)
        wData = %Trim(CLP038);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'J2';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'J2';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP038 = '0';
        endif;

       //˜Validate Review date (Optional Field)
        wData = %Trim(CLP039);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'K3';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP039 = '0';
        endif;

       //˜Validate Date Collateral Received (Optional Field)
        wData = %Trim(CLP040);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'J6';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP040 = '0';
        endif;

       //˜Validate Realisable Value (Optional Field)
        wData = %Trim(CLP042);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'L2';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'L2';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP042 = '0';
        endif;

       //˜Validate Next valuation Date (Optional Field)
        wData = %Trim(CLP044);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '16';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP044 = '0';
        endif;

       //˜Validate Valuation Date (Optional Field)
        wData = %Trim(CLP045);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '34';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP045 = '0';
        endif;

       //˜Validate Valuation Freq (Optional Field)
        wData = %Trim(CLP047);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'M9';
              exsr srGetErrorDescription;
           else;
              wChkNum = %Int(wData);
              if wChkNum > 999;
                 wErrorCode = 'M9';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP047 = '0';
        endif;

       //˜Validate Last Valuation Date (Optional Field)
        wData = %Trim(CLP049);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '33';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP049 = '0';
        endif;

       //˜Validate Last Valuation Time (Optional Field)
        wData = %Trim(CLP050);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'B1';
              exsr srGetErrorDescription;
           else;
              wChkNum = %Int(wData);
              if wChkNum > 999999;
                 wErrorCode = 'B1';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP050 = '0';
        endif;

       //˜Validate Amount pledged (Optional Field)
        wData = %Trim(CLP053);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'N0';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'N0';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP053 = '0';
        endif;

       //˜Validate Percent pledged (Optional Field)
        wData = %Trim(CLP054);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'N1';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
              if wChkLate > 99.999999999;
                 wErrorCode = 'N1';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP054 = '0';
        endif;

       //˜Validate Country  of Origination (Mandatory Field)
        wData = %Trim(CLP055);
        If wData = *blank;
           CLP055 = 'TH';
        endif;

       //˜Validate Reg. Owner CIF 1 (Optional Field)
        wData = %Trim(CLP057);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '64';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP057 = '0';
        endif;

       //˜Validate REG. OWNER CIF 2 (Optional Field)
        wData = %Trim(CLP058);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '93';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP058 = '0';
        endif;

       //˜Validate REG. OWNER CIF 3 (Optional Field)
        wData = %Trim(CLP059);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '94';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP059 = '0';
        endif;

       //˜Validate REG. OWNER CIF 4 (Optional Field)
        wData = %Trim(CLP060);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '95';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP060 = '0';
        endif;

       //˜Validate REG. OWNER CIF 5 (Optional Field)
        wData = %Trim(CLP061);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '96';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP061 = '0';
        endif;

       //˜Validate Created Date (Optional Field)
        wData = %Trim(CLP063);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '91';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP063 = %Char(SP1NB8) ;
        endif;

       //˜Validate Guaranteed Amount (Optional Field)
        wData = %Trim(CLP066);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '70';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = '70';
                 exsr srGetErrorDescription;
                 wErrorCode = 'IL';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP066 = '0';
        endif;

       //˜Validate Collateral Tagging Date (Optional Field)
        wData = %Trim(CLP068);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'J1';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP068 = '0';
        endif;

       endsr;

    Š  //***********************************************************************
       //ˆsrLSAGRVal - Validate Collateral Category LSAGR
    Š  //***********************************************************************
        begsr SrLSAGRVal;

              RecType   = %Trim(CLP001);
              SequeNum  = %Trim(CLP002);
              CollCat   = %Trim(CLP003);
              CollCold  = %Trim(CLP004);
              BankNum   = %Trim(CLP005);
              BranchNum = %Trim(CLP006);
              RegCIFNum = %Trim(CLP007);
              exsr SrValidate;

       //˜Validate Reg. Owner Short Name (Mandatory Field)
       // If CLP008 = *blank;                                          //C0001
       //    wErrorCode = '74';                                        //C0001
       //    exsr srGetErrorDescription;                               //C0001
       // endif;                                                       //C0001

       //˜Validate Lessor (Mandatory Field)
        If CLP009 = *blank;
           wErrorCode = 'A8';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Lease Agreement Date (Mandatory Field)
        wData = %Trim(CLP010);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'Y0';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP010 = *blank;
           wErrorCode = 'Y0';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Lease Agreement Expiry Date (Mandatory Field)
        wData = %Trim(CLP011);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'Y1';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP011 = *blank;
           wErrorCode = 'Y1';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Currency Market Value (Mandatory Field)
        wData = %Trim(CLP012);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'Y2';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'Y2';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP012 = *blank;
           wErrorCode = 'Y2';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Lease Term (Mandatory Field)
        wData = %Trim(CLP013);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'A5';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP013 = *blank;
           wErrorCode = 'A5';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Lease Term Code (Mandatory Field)
        If CLP014 = *blank;
           wErrorCode = 'A6';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Lease Amount (Mandatory Field)
        wData = %Trim(CLP015);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'A9';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'A9';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP015 = *blank;
           wErrorCode = 'A9';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Last Valuation Date (Mandatory Field)
        wData = %Trim(CLP016);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '33';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP016 = *blank;
           wErrorCode = '33';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Valuation Date (Mandatory Field)
        wData = %Trim(CLP017);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '34';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP017 = *blank;
           wErrorCode = '34';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Lease Agreement Number (Mandatory Field)
        If CLP018 = *blank;
           wErrorCode = 'F9';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Next valuation Date (Mandatory Field)
        wData = %Trim(CLP019);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '16';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP019 = *blank;
           wErrorCode = '16';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Valuer Code (Mandatory Field)
        If CLP020 = *blank;
           wErrorCode = '36';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Valuation Type (Mandatory Field)
        If CLP021 = *blank;
           wErrorCode = '35';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Basis of Advance Indicator (Mandatory Field)
        If CLP022 = *blank;
           wErrorCode = '21';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Property Type (Mandatory Field)
        If CLP023 = *blank;
           wErrorCode = '08';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Area Unit (Mandatory Field)
        wData = %Trim(CLP024);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '14';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP024 = *blank;
           wErrorCode = '14';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Remark 1 (Mandatory Field)
       // If CLP025 = *blank;
       //    wErrorCode = '78';
       //    exsr srGetErrorDescription;
       // endif;

       //˜Validate Share Collateral (Mandatory Field)
        If CLP026 = *blank;
           wErrorCode = '26';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Apportion Realisable Value (Mandatory Field)
        If CLP027 = *blank;
           wErrorCode = '27';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Created User ID (Mandatory Field)
        If CLP028 = *blank;
           wErrorCode = '90';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Created Date (Mandatory Field)
        wData = %Trim(CLP029);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '91';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP029 = %Char(SP1NB8) ;
        endif;

       //˜Validate Amount In Current (Mandatory Field)
        wData = %Trim(CLP030);
        If wData = *blank;
           CLP030 = 'THB';
        endif;

       //˜Validate Global Collateral (Y/N) (Mandatory Field)
        wData = %Trim(CLP031);
        If wData = *blank;
           CLP031 = 'N';
        endif;

       //˜Validate Last Valuation Time (Mandatory Field)
        wData = %Trim(CLP032);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'B1';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP032 = *blank;
           wErrorCode = 'B1';
           exsr srGetErrorDescription;
        endif;

       //˜Validate State (Mandatory Field)
        If CLP033 = *blank;
           wErrorCode = 'B2';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Residual Value (Mandatory Field)
        wData = %Trim(CLP034);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'Y3';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 9999999999999.99;
                 wErrorCode = 'Y3';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
         else;
           CLP034 = *blank;
           wErrorCode = 'Y3';
           exsr srGetErrorDescription;
         endif;

       //˜Validate Collateral Status (Mandatory Field)
        wData = %Trim(CLP035);
        If wData = *blank;
           CLP035 = '1';
        endif;

       //˜Validate Country of Registration (Mandatory Field)
        wData = %Trim(CLP036);
        If wData = *blank;
           CLP036 = 'TH';
        endif;

       //˜Validate Currency (Mandatory Field)
        wData = %Trim(CLP037);
        If wData = *blank;
           CLP037 = 'THB';
        endif;

       //˜Validate Marked to Market Value (Y/N) (Mandatory Field)
        wData = %Trim(CLP038);
        If wData = *blank;
           CLP038 = 'N';
        endif;

       //˜Validate County (Mandatory Field)
        wData = %Trim(CLP039);
        If wData = *blank;
           CLP039 = 'TH';
        endif;

       //˜Validate Country of Origination (Mandatory Field)
        wData = %Trim(CLP040);
        If wData = *blank;
           CLP040 = 'TH';
        endif;

       //˜Validate Basis of Advance Percent (Mandatory Field)
        wData = %Trim(CLP041);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '40';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
              if wChkLate > 99.999999999;
                 wErrorCode = '40';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP041 = '1';
        endif;

       //˜Validate Basel Eligible (Mandatory Field)
        wData = %Trim(CLP042);
        If wData = *blank;
           CLP042 = 'P';
        endif;

       //˜Validate Allow Provisioning (Mandatory Field)
        wData = %Trim(CLP043);
        If wData = *blank;
           CLP043 = 'Y';
        endif;

       //˜Validate Include SLL Computation (Mandatory Field)
        wData = %Trim(CLP044);
        If wData = *blank;
           CLP044 = 'N';
        endif;

       //˜Validate Collateral ID (Optional Field)
        wData = %Trim(CLP045);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'F7';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP045 = '0';
        endif;

       //˜Validate Notice Assignment Date (Optional Field)
        wData = %Trim(CLP057);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'Y4';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP057 = '0';
        endif;

       //˜Validate Acknowledge & Consent Date (Optional Field)
        wData = %Trim(CLP058);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'C2';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP058 = '0';
        endif;

       //˜Validate Land Area (Optional Field)
        wData = %Trim(CLP059);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'G0';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 99999999999.99;
                 wErrorCode = 'G0';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP059 = '0';
        endif;

       //˜Validate Building Value (Optional Field)
        wData = %Trim(CLP060);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'G4';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'G4';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP060 = '0';
        endif;

       //˜Validate External/Appraised value (Optional Field)
        wData = %Trim(CLP061);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'G1';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'G1';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP061 = '0';
        endif;

       //˜Validate External/Appraisal Date (Optional Field)
        wData = %Trim(CLP063);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'Y5';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP063 = '0';
        endif;

       //˜Validate Collateral Value Cap Percent (Optional Field)
        wData = %Trim(CLP066);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'J0';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
              if wChkLate > 99.999999999;
                 wErrorCode = 'J0';
                 exsr srGetErrorDescription;
                 wErrorCode = 'IL';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP066 = '0';
        endif;

       //˜Validate Date of Tagging (Optional Field)
        wData = %Trim(CLP068);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'BZ';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP068 = '0';
        endif;

       //˜Validate Original coll. value (Optional Field)
        wData = %Trim(CLP069);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'J2';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'J2';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP069 = '0';
        endif;

       //˜Validate Date Ownership Transfred (Optional Field)
        wData = %Trim(CLP070);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'J4';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP070 = '0';
        endif;

       //˜Validate Date Owner Transf Remove (Optional Field)
        wData = %Trim(CLP071);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'J5';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP071 = '0';
        endif;

       //˜Validate Date Collateral Received (Optional Field)
        wData = %Trim(CLP072);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'J6';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP072 = '0';
        endif;

       //˜Validate Review date (Optional Field)
        wData = %Trim(CLP073);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'K3';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP073 = '0';
        endif;

       //˜Validate Exchange Rate (Optional Field)
        wData = %Trim(CLP074);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'U7';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
                 if wChkLate > 9999999.999999999;
                 wErrorCode = 'U7';
                 exsr srGetErrorDescription;
                 wErrorCode = 'IL';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP074 = '0';
        endif;

       //˜Validate Guaranteed Amount (Mandatory Field)
        wData = %Trim(CLP075);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '70';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = '70';
                 exsr srGetErrorDescription;
                 wErrorCode = 'IL';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP075 = '0';
        endif;

       //˜Validate Realisable Value (Optional Field)
        wData = %Trim(CLP077);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'L2';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'L2';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP077 = '0';
        endif;

       //˜Validate Payment Frequency (Optional Field)
        wData = %Trim(CLP079);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'Y6';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP079 = '0';
        endif;

       //˜Validate Total O/S Balance (Optional Field)
        wData = %Trim(CLP083);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '72';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = '72';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP083 = '0';
        endif;

       //˜Validate Exchange Rate Date (Optional Field)
        wData = %Trim(CLP084);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'M8';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP084 = '0';
        endif;

       //˜Validate Valuation Freq (Optional Field)
        wData = %Trim(CLP085);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'M9';
              exsr srGetErrorDescription;
           else;
              wChkNum = %Int(wData);
              if wChkNum > 999;
                 wErrorCode = 'M9';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP085 = '0';
        endif;

       //˜Validate Amount pledged (Optional Field)
        wData = %Trim(CLP089);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'N0';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'N0';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP089 = '0';
        endif;

       //˜Validate Percent pledged (Optional Field)
        wData = %Trim(CLP090);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'N1';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
              if wChkLate > 99.999999999;
                 wErrorCode = 'N1';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP090 = '0';
        endif;

       //˜Validate Reg. Owner CIF 1 (Optional Field)
        wData = %Trim(CLP091);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '64';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP091 = '0';
        endif;

       //˜Validate REG. OWNER CIF 2 (Optional Field)
        wData = %Trim(CLP092);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '93';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP092 = '0';
        endif;

       //˜Validate REG. OWNER CIF 3 (Optional Field)
        wData = %Trim(CLP093);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '94';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP093 = '0';
        endif;

       //˜Validate REG. OWNER CIF 4 (Optional Field)
        wData = %Trim(CLP094);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '95';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP094 = '0';
        endif;

       //˜Validate REG. OWNER CIF 5 (Optional Field)
        wData = %Trim(CLP095);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '96';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP095 = '0';
        endif;

       //˜Validate Address Format (Mandatory Field)
        wData = %Trim(CLP096);
        Chain (wData)Cfpar9;
        If not %found(cfpar9) or wData = 'F';
           wErrorCode = '41';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Address Type (Mandatory Field)
        wData = %Trim(CLP097);
        Chain (wData)Cfpar92;
        If not %found(cfpar92);
           wErrorCode = '42';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Address Line (Mandatory Field)
        exsr SR_LSAGR_ADD;
        If wErrorCode <> *blank;
           exsr srGetErrorDescription;
        endif;

       //˜Validate Stay Start Date (Optional Field)
        wData = %Trim(CLP115);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'N4';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP115 = '0';
        endif;

       //˜Validate Purchase Price (Optional Field)
        wData = %Trim(CLP116);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'G8';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'G8';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP116 = '0';
        endif;

       //˜Validate Purchase date (Optional Field)
        wData = %Trim(CLP117);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'G7';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP117 = '0';
        endif;

       //˜Validate S & P Date (Optional Field)
        wData = %Trim(CLP118);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'K4';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP118 = '0';
        endif;

       //˜Validate S & P Expiry Date (Optional Field)
        wData = %Trim(CLP119);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'K5';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP119 = '0';
        endif;

       endsr;

    Š  //***********************************************************************
       //ˆsrMACHVal - Validate Collateral Category MACH
    Š  //***********************************************************************
        begsr SrMACHVal;

              RecType   = %Trim(CLP001);
              SequeNum  = %Trim(CLP002);
              CollCat   = %Trim(CLP003);
              CollCold  = %Trim(CLP004);
              BankNum   = %Trim(CLP005);
              BranchNum = %Trim(CLP006);
              RegCIFNum = %Trim(CLP007);
              exsr SrValidate;

       //˜Validate Reg. Owner Short Name (Mandatory Field)
       // If CLP008 = *blank;                                              //C0001
       //    wErrorCode = '74';                                            //C0001
       //    exsr srGetErrorDescription;                                   //C0001
       // endif;                                                           //C0001

       //˜Validate Registration No (Mandatory Field)
        If CLP009 = *blank;
           wErrorCode = 'DF';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Make (Mandatory Field)
        If CLP010 = *blank;
           wErrorCode = 'DG';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Model Number (Mandatory Field)
        If CLP011 = *blank;
           wErrorCode = 'B6';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Machinery Type (Mandatory Field)
        If CLP012 = *blank;
           wErrorCode = 'Y9';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Engine number (Mandatory Field)
        If CLP013 = *blank;
           wErrorCode = 'Y7';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Unit Condition (Mandatory Field)
        If CLP014 = *blank;
           wErrorCode = 'DH';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Year Of Manufacture (Mandatory Field)
        wData = %Trim(CLP015);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'Y8';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP015 = *blank;
           wErrorCode = 'Y8';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Lifetime (Year) (Mandatory Field)
        wData = %Trim(CLP016);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'AD';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP016 = *blank;
           wErrorCode = 'AD';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Market Demand (Mandatory Field)
        If CLP017 = *blank;
           wErrorCode = 'AE';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Fair Market Value (Mandatory Field)
        wData = %Trim(CLP018);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '18';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = '18';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP018 = *blank;
           wErrorCode = '18';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Forced Sales Value (Mandatory Field)
        wData = %Trim(CLP019);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '19';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = '19';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP019 = *blank;
           wErrorCode = '19';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Last Valuation Date (Mandatory Field)
        wData = %Trim(CLP020);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '33';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP020 = *blank;
           wErrorCode = '33';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Valuation Date (Mandatory Field)
        wData = %Trim(CLP021);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '34';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP021 = *blank;
           wErrorCode = '34';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Next valuation Date (Mandatory Field)
        wData = %Trim(CLP022);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '16';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP022 = *blank;
           wErrorCode = '16';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Valuer Code (Mandatory Field)
        If CLP023 = *blank;
           wErrorCode = '36';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Valuation Type (Mandatory Field)
        If CLP024 = *blank;
           wErrorCode = '35';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Collateral Status (Mandatory Field)
        wData = %Trim(CLP025);
        If wData = *blank;
           CLP025 = '1';
        endif;

       //˜Validate Log Book No (Mandatory Field)
        If CLP026 = *blank;
           wErrorCode = 'B3';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Country Code (Mandatory Field)
        wData = %Trim(CLP027);
        If wData = *blank;
           CLP027 = 'TH';
        endif;

       //˜Validate Currency (Mandatory Field)
        wData = %Trim(CLP028);
        If wData = *blank;
           CLP028 = 'THB';
        endif;

       //˜Validate Basis of Advance Indicator (Mandatory Field)
        wData = %Trim(CLP029);
        If wData = *blank;
           CLP029 = 'FMV';
           exsr srGetErrorDescription;
        endif;

       //˜Validate External/Appraiser name (Mandatory Field)
        If CLP030 = *blank;
           wErrorCode = 'B5';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Marked to Market Value (Y/N) (Mandatory Field)
        If CLP031 = *blank;
           wErrorCode = '20';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Share Collateral (Mandatory Field)
        If CLP032 = *blank;
           wErrorCode = '26';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Apportion Realisable Value (Mandatory Field)
        If CLP033 = *blank;
           wErrorCode = '27';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Created User ID (Mandatory Field)
        If CLP034 = *blank;
           wErrorCode = '90';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Created Date (Mandatory Field)
        wData = %Trim(CLP035);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '91';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP035 = %Char(SP1NB8) ;
        endif;

       //˜Validate Global Collateral (Y/N) (Mandatory Field)
        If CLP036 = *blank;
           wErrorCode = '32';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Last Valuation Time (Mandatory Field)
        wData = %Trim(CLP037);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'B1';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP037 = *blank;
           wErrorCode = 'B1';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Country of Origination (Mandatory Field)
        wData = %Trim(CLP038);
        If wData = *blank;
           CLP038 = 'TH';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Basis of Advance Percent (Mandatory Field)
        wData = %Trim(CLP039);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '40';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
              if wChkLate > 99.999999999;
                 wErrorCode = '40';
                 exsr srGetErrorDescription;
                 wErrorCode = 'IL';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP039 = '1';
        endif;

       //˜Validate Basel Eligible (Optional Field)
        wData = %Trim(CLP040);
        If wData = *blank;
           CLP040 = 'P';
        endif;

       //˜Validate Allow Provisioning (Optional Field)
        wData = %Trim(CLP041);
        If wData = *blank;
           CLP041 = 'Y';
        endif;

       //˜Validate Include SLL Computation (Optional Field)
        wData = %Trim(CLP042);
        If wData = *blank;
           CLP042 = 'N';
        endif;

       //˜Validate Collateral ID (Optional Field)
        wData = %Trim(CLP043);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'F7';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP043 = '0';
        endif;

       //˜Validate Valuation Date (Mandatory Field)
        wData = %Trim(CLP051);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '34';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP051 = '0';
        endif;

       //˜Validate Downpayment Trade In (Optional Field)
        wData = %Trim(CLP053);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'AF';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'AF';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP053 = '0';
        endif;


       //˜Validate Purchase date (Optional Field)
        wData = %Trim(CLP054);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'G7';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP054 = '0';
        endif;

       //˜Validate Downpayment Cash (Optional Field)
        wData = %Trim(CLP055);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'AG';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'AG';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP055 = '0';
        endif;

       //˜Validate Purchase Price (Optional Field)
        wData = %Trim(CLP056);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'G8';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'G8';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP056 = '0';
        endif;

       //˜Validate Prepaid Rental Number (Optional Field)
        wData = %Trim(CLP060);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'AH';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP060 = '0';
        endif;

       //˜Validate Prepaid Rental Amount (Optional Field)
        wData = %Trim(CLP061);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'AI';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 9999999999999.99;
                 wErrorCode = 'AI';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP061 = '0';
        endif;

       //˜Validate Secondary Lease Rental (Optional Field)
        wData = %Trim(CLP062);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'AJ';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 9999999999999.99;
                 wErrorCode = 'AJ';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP062 = '0';
        endif;

       //˜Validate Rental Rebate (Optional Field)
        wData = %Trim(CLP063);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'AK';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'AK';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP063 = '0';
        endif;

       //˜Validate Rental Retention Sum (Optional Field)
        wData = %Trim(CLP064);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'AL';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'AL';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP064 = '0';
        endif;

       //˜Validate Sales Proceed (Optional Field)
        wData = %Trim(CLP069);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'AM';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'AM';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP069 = '0';
        endif;

       //˜Validate Residual Value (Optional Field)
        wData = %Trim(CLP070);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'Y3';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 9999999999999.99;
                 wErrorCode = 'Y3';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP070 = '0';
        endif;

       //˜Validate Collateral Value Cap Percent (Optional Field)
        wData = %Trim(CLP071);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'J0';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
              if wChkLate > 99.999999999;
                 wErrorCode = 'J0';
                 exsr srGetErrorDescription;
                 wErrorCode = 'IL';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP071 = '0';
        endif;

       //˜Validate Collateral Tagging Date (Optional Field)
        wData = %Trim(CLP073);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'J1';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP073 = '0';
        endif;

       //˜Validate Original coll. value (Optional Field)
        wData = %Trim(CLP074);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'J2';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'J2';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP074 = '0';
        endif;

       //˜Validate Date Ownership Transfred (Optional Field)
        wData = %Trim(CLP076);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'J4';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP076 = '0';
        endif;

       //˜Validate Date Owner Transf Remove (Optional Field)
        wData = %Trim(CLP077);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'J5';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP077 = '0';
        endif;

       //˜Validate Date Collateral Received (Optional Field)
        wData = %Trim(CLP078);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'J6';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP078 = '0';
        endif;

       //˜Validate Review date (Optional Field)
        wData = %Trim(CLP079);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'K3';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP079 = '0';
        endif;

       //˜Validate Original value (Optional Field)
        wData = %Trim(CLP080);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'U8';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'U8';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP080 = '0';
        endif;

       //˜Validate Realisable Value (Optional Field)
        wData = %Trim(CLP083);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'L2';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'L2';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP083 = '0';
        endif;

       //˜Validate Total O/S Balance (Optional Field)
        wData = %Trim(CLP087);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '72';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = '72';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP087 = '0';
        endif;

       //˜Validate Total Rental Amount (Optional Field)
        wData = %Trim(CLP090);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'M2';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'M2';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP090 = '0';
        endif;

       //˜Validate Rental Pymt Freq (Optional Field)
        wData = %Trim(CLP091);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'DQ';
              exsr srGetErrorDescription;
           else;
              wChkNum = %Int(wData);
              if wChkNum > 999;
                 wErrorCode = 'DQ';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP091 = '0';
        endif;

       //˜Validate Depreciate Term (Optional Field)
        wData = %Trim(CLP094);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'M4';
              exsr srGetErrorDescription;
           else;
              wChkNum = %Int(wData);
              if wChkNum > 999;
                 wErrorCode = 'M4';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP094 = '0';
        endif;

       //˜Validate Delivery Date (Optional Field)
        wData = %Trim(CLP096);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'M5';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP096 = '0';
        endif;

       //˜Validate Disposal Value (Optional Field)
        wData = %Trim(CLP097);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'M6';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'M6';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP097 = '0';
        endif;

       //˜Validate Total Asset (Optional Field)
        wData = %Trim(CLP099);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'M7';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'M7';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP099 = '0';
        endif;

       //˜Validate Exchange Rate Date (Optional Field)
        wData = %Trim(CLP100);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'M8';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP100 = '0';
        endif;

       //˜Validate Valuation Freq (Optional Field)
        wData = %Trim(CLP101);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'M9';
              exsr srGetErrorDescription;
           else;
              wChkNum = %Int(wData);
              if wChkNum > 999;
                 wErrorCode = 'M9';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP101 = '0';
        endif;

       //˜Validate Freight Charges (Optional Field)
        wData = %Trim(CLP103);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'AN';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'AN';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP103 = '0';
        endif;

       //˜Validate Registration Date (Optional Field)
        wData = %Trim(CLP105);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'X3';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP105 = '0';
        endif;

       //˜Validate Mileage Used (Optional Field)
        wData = %Trim(CLP106);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'AO';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP106 = '0';
        endif;

       //˜Validate Area Unit (Optional Field)
        wData = %Trim(CLP107);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '14';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP107 = '0';
        endif;

       //˜Validate Exchange Rate (Optional Field)
        wData = %Trim(CLP108);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'U7';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
                 if wChkLate > 9999999.999999999;
                 wErrorCode = 'U7';
                 exsr srGetErrorDescription;
                 wErrorCode = 'IL';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP108 = '0';
        endif;

       //˜Validate Road Tax Expiry Date (Optional Field)
        wData = %Trim(CLP110);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'AP';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP110 = '0';
        endif;

       //˜Validate Road Tax Amount (Optional Field)
        wData = %Trim(CLP111);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'AQ';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'AQ';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP111 = '0';
        endif;

       //˜Validate Road Tax Tenor (Optional Field)
        wData = %Trim(CLP112);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'AR';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP112 = '0';
        endif;

       //˜Validate Ownership Claim No. (Optional Field)
        wData = %Trim(CLP113);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'AS';
              exsr srGetErrorDescription;
           else;
              wChkNum = %Int(wData);
              if wChkNum > 99999999999999999;
                 wErrorCode = 'AS';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP113 = '0';
        endif;

       //˜Validate Balancing Charge (Optional Field)
        wData = %Trim(CLP114);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'AT';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 9999999999999.99;
                 wErrorCode = 'AT';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP114 = '0';
        endif;

       //˜Validate Tax Add-on Value (Optional Field)
        wData = %Trim(CLP116);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'AU';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 9999999999999.99;
                 wErrorCode = 'AU';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP116 = '0';
        endif;

       //˜Validate Registration Fee (Optional Field)
        wData = %Trim(CLP117);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'AV';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'AV';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP117 = '0';
        endif;

       //˜Validate Security Deposit (Optional Field)
        wData = %Trim(CLP120);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'AW';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 9999999999999.99;
                 wErrorCode = 'AW';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP120 = '0';
        endif;

       //˜Validate Guaranteed Amount (Optional Field)
        wData = %Trim(CLP121);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '70';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = '70';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP121 = '0';
        endif;

       //˜Validate PARF Value (Optional Field)
        wData = %Trim(CLP123);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'AX';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'AX';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP123 = '0';
        endif;

       //˜Validate COE Registration date (Optional Field)
        wData = %Trim(CLP124);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'AY';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP124 = '0';
        endif;

       //˜Validate No of Owner Transfer (Optional Field)
        wData = %Trim(CLP128);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'AZ';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP128 = '0';
        endif;

       //˜Validate E-Transfer #1 date (Optional Field)
        wData = %Trim(CLP131);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'BA';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP131 = '0';
        endif;

       //˜Validate E-Transfer #2 date (Optional Field)
        wData = %Trim(CLP132);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'BB';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP132 = '0';
        endif;

       //˜Validate Amount pledged (Optional Field)
        wData = %Trim(CLP133);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'N0';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'N0';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP133 = '0';
        endif;

       //˜Validate Percent pledged (Optional Field)
        wData = %Trim(CLP134);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'N1';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
              if wChkLate > 99.999999999;
                 wErrorCode = 'N1';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP134 = '0';
        endif;

       //˜Validate Depreciation Amount (Optional Field)
        wData = %Trim(CLP137);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'BC';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'BC';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP137 = '0';
        endif;

       //˜Validate Contract Amount (Optional Field)
        wData = %Trim(CLP138);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '47';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = '47';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP138 = '0';
        endif;

       //˜Validate REG. OWNER CIF 1 (Optional Field)
        wData = %Trim(CLP139);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '64';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP139 = '0';
        endif;

       //˜Validate REG. OWNER CIF 2 (Optional Field)
        wData = %Trim(CLP140);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '93';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP140 = '0';
        endif;

       //˜Validate REG. OWNER CIF 3 (Optional Field)
        wData = %Trim(CLP141);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '94';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP141 = '0';
        endif;

       //˜Validate REG. OWNER CIF 4 (Optional Field)
        wData = %Trim(CLP142);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '95';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP142 = '0';
        endif;

       //˜Validate REG. OWNER CIF 5 (Optional Field)
        wData = %Trim(CLP143);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '96';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP143 = '0';
        endif;

       //˜Validate Forced Sales Value (Optional Field)
        wData = %Trim(CLP144);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '19';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = '19';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP144 = '0';
        endif;

       //˜Validate Fair Market Value (Optional Field)
        wData = %Trim(CLP145);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '18';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = '18';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP145 = '0';
        endif;

       //˜Validate Valuation Freq (Optional Field)
        wData = %Trim(CLP146);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'M9';
              exsr srGetErrorDescription;
           else;
              wChkNum = %Int(wData);
                 if wChkNum > 999;
                 wErrorCode = 'M9';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP146 = '0';
        endif;

       endsr;

    Š  //***********************************************************************
       //ˆsrPnVal - Validate Collateral Category PN
    Š  //***********************************************************************
        begsr SrPnVal;

              RecType   = %Trim(CLP001);
              SequeNum  = %Trim(CLP002);
              CollCat   = %Trim(CLP003);
              CollCold  = %Trim(CLP004);
              BankNum   = %Trim(CLP005);
              BranchNum = %Trim(CLP006);
              RegCIFNum = %Trim(CLP007);
              exsr SrValidate;

       //˜Validate Reg. Owner Short Name (Mandatory Field)
       // If CLP008 = *blank;                                            //C0001
       //    wErrorCode = '74';                                          //C0001
       //    exsr srGetErrorDescription;                                 //C0001
       // endif;                                                         //C0001

       //˜Validate Promissory Note Number (Mandatory Field)
        If CLP009 = *blank;
           wErrorCode = 'C1';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Promissory Note Value (Mandatory Field)
        wData = %Trim(CLP010);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'DI';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'DI';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP010 = *blank;
           wErrorCode = 'DI';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Issue Date (Mandatory Field)
        wData = %Trim(CLP011);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '86';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP011 = *blank;
           wErrorCode = '86';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Interest Rate (Mandatory Field)
        wData = %Trim(CLP012);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'BD';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
                 if wChkLate > 99.999999999;
                 wErrorCode = 'BD';
                 exsr srGetErrorDescription;
                 wErrorCode = 'IL';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP012 = '0';
           wErrorCode = 'BD';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Expiry Date (Mandatory Field)
        wData = %Trim(CLP013);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'DO';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP013 = *blank;
           wErrorCode = 'DO';
           exsr srGetErrorDescription;
        endif;

         //˜Validate Issuing institution/Bank (Mandatory Field)
        If CLP014 = *blank;
           wErrorCode = 'A2';
           exsr srGetErrorDescription;
        endif;

         //˜Validate Collateral Status (Mandatory Field)
        wData = %Trim(CLP015);
        If wData = *blank;
           CLP015 = '1';
        endif;

       //˜Validate Country Code (Mandatory Field)
        wData = %Trim(CLP016);
        If wData = *blank;
           CLP016 = 'TH';
        endif;

       //˜Validate Currency Code (Mandatory Field)
        wData = %Trim(CLP017);
        If wData = *blank;
           CLP017 = 'THB';
        endif;

       //˜Validate Acknowledgement Date (Mandatory Field)
        wData = %Trim(CLP018);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'DJ';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP018 = *blank;
           wErrorCode = 'DJ';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Share Collateral (Mandatory Field)
        If CLP019 = *blank;
           wErrorCode = '26';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Marked to Market Value (Y/N) (Mandatory Field)
        wData = %Trim(CLP020);
        If wData = *blank;
           CLP020 = 'N';
        endif;

       //˜Validate Basis of Advance Indicator (Mandatory Field)
        wData = %Trim(CLP021);
        If wData = *blank;
           CLP021 = 'FMV';
        endif;

       //˜Validate Apportion Realisable Value (Mandatory Field)
        wData = %Trim(CLP022);
        If wData = *blank;
           CLP022 = 'N';
        endif;

       //˜Validate Amount In Current (Mandatory Field)
        wData = %Trim(CLP023);
        If wData = *blank;
           CLP023 = 'THB';
        endif;

       //˜Validate Global Collateral (Y/N) (Mandatory Field)
        wData = %Trim(CLP024);
        If wData = *blank;
           CLP024 = 'N';
        endif;

       //˜Validate Country of Origination (Mandatory Field)
        wData = %Trim(CLP025);
        If wData = *blank;
           CLP025 = 'TH';
        endif;

       //˜Validate Basis of Advance Percentage (Mandatory Field)
        wData = %Trim(CLP026);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '40';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
              if wChkLate > 99.999999999;
                 wErrorCode = '40';
                 exsr srGetErrorDescription;
                 wErrorCode = 'IL';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP026 = '1';
        endif;

       //˜Validate Basel Eligible (Mandatory Field)
        wData = %Trim(CLP027);
        If wData = *blank;
           CLP027 = 'N';
        endif;

       //˜Validate Allow Provisioning (Mandatory Field)
        wData = %Trim(CLP028);
        If wData = *blank;
           CLP028 = 'Y';
        endif;

       //˜Validate Include SLL Computation (Mandatory Field)
        wData = %Trim(CLP029);
        If wData = *blank;
           CLP029 = 'N';
        endif;

       //˜Validate Collateral ID (Optional Field)
        wData = %Trim(CLP030);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'F7';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP030 = '0';
        endif;

       //˜Validate Collateral Value Cap Percent (Optional Field)
        wData = %Trim(CLP042);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'J0';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
              if wChkLate > 99.999999999;
                 wErrorCode = 'J0';
                 exsr srGetErrorDescription;
                 wErrorCode = 'IL';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP042 = '0';
        endif;

       //˜Validate Date of Tagging (Optional Field)
        wData = %Trim(CLP044);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'BZ';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP044 = '0';
        endif;

       //˜Validate Original coll. value (Optional Field)
        wData = %Trim(CLP045);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'J2';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'J2';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP045 = '0';
        endif;

       //˜Validate Date Ownership Transfred (Optional Field)
        wData = %Trim(CLP046);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'J4';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP046 = '0';
        endif;

       //˜Validate Date Owner Transf Remove (Optional Field)
        wData = %Trim(CLP047);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'J5';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP047 = '0';
        endif;

       //˜Validate Date Collateral Received (Optional Field)
        wData = %Trim(CLP048);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'J6';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP048 = '0';
        endif;

       //˜Validate Review date (Optional Field)
        wData = %Trim(CLP049);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'K3';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP049 = '0';
        endif;

       //˜Validate Exchange Rate (Optional Field)
        wData = %Trim(CLP050);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'U7';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
                 if wChkLate > 9999999.999999999;
                 wErrorCode = 'U7';
                 exsr srGetErrorDescription;
                 wErrorCode = 'IL';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP050 = '0';
        endif;

       //˜Validate Realisable Value (Optional Field)
        wData = %Trim(CLP052);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'L2';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'L2';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP052 = '0';
        endif;

       //˜Validate Created Date (Optional Field)
        wData = %Trim(CLP054);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '91';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP054 = %Char(SP1NB8) ;
        endif;

       //˜Validate Total O/S Balance (Optional Field)
        wData = %Trim(CLP057);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '72';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = '72';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP057 = '0';
        endif;

       //˜Validate Exchange Rate Date (Optional Field)
        wData = %Trim(CLP058);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'M8';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP058 = '0';
        endif;

       //˜Validate Next valuation Date (Optional Field)
        wData = %Trim(CLP059);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '16';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP059 = '0';
        endif;

       //˜Validate Valuation Freq (Optional Field)
        wData = %Trim(CLP060);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'M9';
              exsr srGetErrorDescription;
           else;
              wChkNum = %Int(wData);
              if wChkNum > 999;
                 wErrorCode = 'M9';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP060 = '0';
        endif;

       //˜Validate Last Valuation Date (Optional Field)
        wData = %Trim(CLP062);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '33';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP062 = '0';
        endif;

       //˜Validate Last Valuation Time (Optional Field)
        wData = %Trim(CLP063);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'B1';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP063 = '0';
        endif;

       //˜Validate Amount pledged (Optional Field)
        wData = %Trim(CLP064);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'N0';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'N0';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP064 = '0';
        endif;

       //˜Validate Percent pledged (Optional Field)
        wData = %Trim(CLP065);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'N1';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
              if wChkLate > 99.999999999;
                 wErrorCode = 'N1';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP065 = '0';
        endif;

       //˜Validate Reg. Owner CIF 1 (Optional Field)
        wData = %Trim(CLP068);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '64';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP068 = '0';
        endif;

       //˜Validate REG. OWNER CIF 2 (Optional Field)
        wData = %Trim(CLP069);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '93';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP069 = '0';
        endif;

       //˜Validate REG. OWNER CIF 3 (Optional Field)
        wData = %Trim(CLP070);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '94';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP070 = '0';
        endif;

       //˜Validate REG. OWNER CIF 4 (Optional Field)
        wData = %Trim(CLP071);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '95';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP071 = '0';
        endif;

       //˜Validate REG. OWNER CIF 5 (Optional Field)
        wData = %Trim(CLP072);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '96';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP072 = '0';
        endif;

       endsr;

    Š  //***********************************************************************
       //ˆsrVEHVal - Validate Collateral Category VEH
    Š  //***********************************************************************
        begsr SrVEHVal;

              RecType   = %Trim(CLP001);
              SequeNum  = %Trim(CLP002);
              CollCat   = %Trim(CLP003);
              CollCold  = %Trim(CLP004);
              BankNum   = %Trim(CLP005);
              BranchNum = %Trim(CLP006);
              RegCIFNum = %Trim(CLP007);
              exsr SrValidate;

       //˜Validate Reg. Owner Short Name (Mandatory Field)
       // If CLP008 = *blank;                                         //C0001
       //    wErrorCode = '74';                                       //C0001
       //    exsr srGetErrorDescription;                              //C0001
       // endif;                                                      //C0001

       //˜Validate Registration / Plate No. (Mandatory Field)
        If CLP009 = *blank;
           wErrorCode = 'BE';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Province (Mandatory Field)
        If CLP010 = *blank;
           wErrorCode = 'C8';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Make (Mandatory Field)
        If CLP011 = *blank;
           wErrorCode = 'DG';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Unit Type / Class (Mandatory Field)
        If CLP012 = *blank;
           wErrorCode = 'DK';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Car Color (Mandatory Field)
        If CLP013 = *blank;
           wErrorCode = 'C7';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Unit / Vehicle Condition (Mandatory Field)
        If CLP014 = *blank;
           wErrorCode = 'BF';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Collateral Object (Mandatory Field)
        If CLP015 = *blank;
           wErrorCode = '31';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Collateral Status (Mandatory Field)
        wData = %Trim(CLP016);
        If wData = *blank;
           CLP016 = '1';
        endif;

       //˜Validate Log Book No (Mandatory Field)
        If CLP017 = *blank;
           wErrorCode = 'B3';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Basis of Advance Indicator (Mandatory Field)
        wData = %Trim(CLP018);
        If wData = *blank;
           CLP018 = 'FMV';
        endif;

       //˜Validate Marked to Market Value (Y/N) (Mandatory Field)
        wData = %Trim(CLP019);
        If wData = *blank;
           CLP019 = 'N';
        endif;

       //˜Validate Blank Transfer(Y/N) (Mandatory Field)
        wData = %Trim(CLP020);
        If wData = *blank;
           CLP020 = 'N';
        endif;

       //˜Validate Tax Add On Indicator (Mandatory Field)
        wData = %Trim(CLP021);
        If wData = *blank;
           CLP021 = 'N';
        endif;

       //˜Validate Auto Control of Reserve Price (Mandatory Field)
        wData = %Trim(CLP022);
        If wData = *blank;
           CLP022 = 'N';
        endif;

       //˜Validate Share Collateral (Mandatory Field)
        wData = %Trim(CLP023);
        If wData = *blank;
           CLP023 = 'N';
        endif;

       //˜Validate Total O/S Balance (Mandatory Field)
        wData = %Trim(CLP024);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '72';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = '72';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP024 = *blank;
           wErrorCode = '72';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Road Tax Sticker Delivery (Mandatory Field)
        wData = %Trim(CLP025);
        If wData = *blank;
           CLP025 = 'Y';
        endif;

       //˜Validate Vehicle Insurance Policy Delivery (Mandatory Field)
        wData = %Trim(CLP026);
        If wData = *blank;
           CLP026 = 'Y';
        endif;

       //˜Validate Country of Registration (Mandatory Field)
        wData = %Trim(CLP027);
        If wData = *blank;
           CLP027 = 'TH';
        endif;

       //˜Validate Currency (Mandatory Field)
        wData = %Trim(CLP028);
        If wData = *blank;
           CLP028 = 'THB';
        endif;

       //˜Validate Apportion Realisable Value (Mandatory Field)
        wData = %Trim(CLP029);
        If wData = *blank;
           CLP029 = 'N';
        endif;

       //˜Validate Amount In Current (Mandatory Field)
        wData = %Trim(CLP030);
        If wData = *blank;
           CLP030 = 'THB';
        endif;

       //˜Validate Global Collateral (Y/N) (Mandatory Field)
        wData = %Trim(CLP031);
        If wData = *blank;
           CLP031 = 'N';
        endif;

       //˜Validate Basis of Advance Percent (Mandatory Field)
        wData = %Trim(CLP032);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '40';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
              if wChkLate > 99.999999999;
                 wErrorCode = '40';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP032 = '1';
        endif;

       //˜Validate Basel Eligible (Mandatory Field)
        wData = %Trim(CLP033);
        If wData = *blank;
           CLP033 = 'P';
        endif;

       //˜Validate Allow Provisioning (Mandatory Field)
        wData = %Trim(CLP034);
        If wData = *blank;
           CLP034 = 'Y';
        endif;

       //˜Validate Include SLL Computation (Mandatory Field)
        wData = %Trim(CLP035);
        If wData = *blank;
           CLP035 = 'N';
        endif;

       //˜Validate Collateral ID (Optional Field)
        wData = %Trim(CLP036);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'F7';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP036 = '0';
        endif;

       //˜Validate Registration Date (Optional Field)
        wData = %Trim(CLP045);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'X3';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP045 = '0';
        endif;

       //˜Validate Road Tax Expiry Date (Optional Field)
        wData = %Trim(CLP047);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'AP';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP047 = '0';
        endif;

       //˜Validate Year Of Manufacture (Optional Field)
        wData = %Trim(CLP048);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'Y8';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP048 = '0';
        endif;

       //˜Validate Valuation Date (Optional Field)
        wData = %Trim(CLP050);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '34';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP050 = '0';
        endif;

       //˜Validate Fair Market Value (Optional Field)
        wData = %Trim(CLP052);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '18';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = '18';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP052 = '0';
        endif;

       //˜Validate Purchase date (Optional Field)
        wData = %Trim(CLP053);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'G7';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP053 = '0';
        endif;

       //˜Validate Downpayment Trade In (Optional Field)
        wData = %Trim(CLP054);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'AF';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'AF';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP054 = '0';
        endif;

       //˜Validate Purchase Price (Optional Field)
        wData = %Trim(CLP055);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'G8';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'G8';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP055 = '0';
        endif;

       //˜Validate Downpayment Cash (Optional Field)
        wData = %Trim(CLP056);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'AG';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'AG';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP056 = '0';
        endif;

       //˜Validate Prepaid Rental Number (Optional Field)
        wData = %Trim(CLP061);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'AH';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP061 = '0';
        endif;

       //˜Validate Prepaid Rental Amount (Optional Field)
        wData = %Trim(CLP062);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'AI';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 9999999999999.99;
                 wErrorCode = 'AI';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP062 = '0';
        endif;

       //˜Validate Secondary Lease Rental (Optional Field)
        wData = %Trim(CLP063);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'AJ';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 9999999999999.99;
                 wErrorCode = 'AJ';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP063 = '0';
        endif;

       //˜Validate Rental Rebate (Optional Field)
        wData = %Trim(CLP064);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'AK';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'AK';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP064 = '0';
        endif;

       //˜Validate Retension Sum (Optional Field)
        wData = %Trim(CLP065);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'AL';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'AL';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP065 = '0';
        endif;

       //˜Validate Forced Sales Value (Optional Field)
        wData = %Trim(CLP070);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '19';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = '19';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP070 = '0';
        endif;

       //˜Validate Sales Proceed (Optional Field)
        wData = %Trim(CLP071);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'AM';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'AM';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP071 = '0';
        endif;

       //˜Validate Residual Value (Optional Field)
        wData = %Trim(CLP072);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'Y3';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 9999999999999.99;
                 wErrorCode = 'Y3';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP072 = '0';
        endif;

       //˜Validate Collateral Value Cap Percent (Optional Field)
        wData = %Trim(CLP073);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'J0';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
              if wChkLate > 99.999999999;
                 wErrorCode = 'J0';
                 exsr srGetErrorDescription;
                 wErrorCode = 'IL';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP073 = '0';
        endif;

       //˜Validate Original coll. value (Optional Field)
        wData = %Trim(CLP074);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'J2';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'J2';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP074 = '0';
        endif;

      //˜Validate Freight Charges (Optional Field)
       wData = %Trim(CLP075);
       If wData <> *Blank;
          wTestField=wData;
          Exsr srTestDigits;
          If wErrorCode<>*blank;
             wErrorCode = 'AN';
             exsr srGetErrorDescription;
          else;
             wChkAmt = %Dec(wData:19:2);
             if wChkAmt > 999999999999999.99;
                wErrorCode = 'AN';
                exsr srGetErrorDescription;
                wErrorCode = 'II';
                exsr srGetErrorDescription;
             endif;
          endif;
       else;
          CLP075 = '0';
       endif;

       //˜Validate Date Ownership Transfred (Optional Field)
        wData = %Trim(CLP077);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'J4';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP077 = '0';
        endif;

       //˜Validate Date Owner Transf Remove (Optional Field)
        wData = %Trim(CLP078);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'J5';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP078 = '0';
        endif;

       //˜Validate Review date (Optional Field)
        wData = %Trim(CLP079);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'K3';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP079 = '0';
        endif;

       //˜Validate Date Collateral Received (Optional Field)
        wData = %Trim(CLP080);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'J6';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP080 = '0';
        endif;

       //˜Validate Original value (Optional Field)
        wData = %Trim(CLP081);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'U8';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'U8';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP081 = '0';
        endif;

       //˜Validate Registration Fee (Optional Field)
        wData = %Trim(CLP082);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'AV';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'AV';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP082 = '0';
        endif;

       //˜Validate Exchange Rate (Optional Field)
        wData = %Trim(CLP083);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'U7';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
                 if wChkLate > 9999999.999999999;
                 wErrorCode = 'U7';
                 exsr srGetErrorDescription;
                 wErrorCode = 'IL';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP083 = '0';
        endif;

       //˜Validate Collateral Tagging Date (Optional Field)
        wData = %Trim(CLP086);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'J1';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP086 = '0';
        endif;

       //˜Validate Balancing Charge (Optional Field)
        wData = %Trim(CLP087);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'AT';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 9999999999999.99;
                 wErrorCode = 'AT';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP087 = '0';
        endif;

       //˜Validate Security Deposit (Optional Field)
        wData = %Trim(CLP088);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'AW';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 9999999999999.99;
                 wErrorCode = 'AW';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP088 = '0';
        endif;

       //˜Validate Tax Add-on Value (Optional Field)
        wData = %Trim(CLP089);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'AU';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 9999999999999.99;
                 wErrorCode = 'AU';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP089 = '0';
        endif;

       //˜Validate Guaranteed Amount (Optional Field)
        wData = %Trim(CLP090);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '70';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = '70';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP090 = '0';
        endif;

       //˜Validate External/Appraised value (Optional Field)
        wData = %Trim(CLP091);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'G1';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'G1';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP091 = '0';
        endif;

       //˜Validate Postcode for location of lot (Optional Field)
        wData = %Trim(CLP092);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'BG';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP092 = '0';
        endif;

       //˜Validate Ownership Claim No. (Optional Field)
        wData = %Trim(CLP096);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'AS';
              exsr srGetErrorDescription;
           else;
              wChkNum = %Int(wData);
              if wChkNum > 99999999999999999;
                 wErrorCode = 'AS';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP096 = '0';
        endif;

       //˜Validate Disposal Value (Optional Field)
        wData = %Trim(CLP097);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'M6';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'M6';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP097 = '0';
        endif;

       //˜Validate Realisable Value (Optional Field)
        wData = %Trim(CLP099);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'L2';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'L2';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP099 = '0';
        endif;

       //˜Validate Created Date (Optional Field)
        wData = %Trim(CLP101);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '91';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP101 = %Char(SP1NB8) ;
        endif;

       //˜Validate Total Rental Amount (Optional Field)
        wData = %Trim(CLP106);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'M2';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'M2';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP106 = '0';
        endif;

       //˜Validate Rental Term (Optional Field)
        wData = %Trim(CLP107);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'M3';
              exsr srGetErrorDescription;
           else;
              wChkNum = %Int(wData);
              if wChkNum > 999;
                 wErrorCode = 'M3';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP107 = '0';
        endif;

       //˜Validate Depreciate Term (Optional Field)
        wData = %Trim(CLP110);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'M4';
              exsr srGetErrorDescription;
           else;
              wChkNum = %Int(wData);
              if wChkNum > 999;
                 wErrorCode = 'M4';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP110 = '0';
        endif;

       //˜Validate Delivery Date (Optional Field)
        wData = %Trim(CLP112);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'M5';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP112 = '0';
        endif;

       //˜Validate Total Asset (Optional Field)
        wData = %Trim(CLP114);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'M7';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'M7';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP114 = '0';
        endif;

       //˜Validate Road Tax Amount (Optional Field)
        wData = %Trim(CLP115);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'AQ';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'AQ';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP115 = '0';
        endif;

       //˜Validate Road Tax Tenor (Optional Field)
        wData = %Trim(CLP116);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'AR';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP116 = '0';
        endif;

       //˜Validate PARF Value (Optional Field)
        wData = %Trim(CLP117);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'AX';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'AX';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP117 = '0';
        endif;

       //˜Validate Organ. Regs. Date (Optional Field)
        wData = %Trim(CLP118);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'BH';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP118 = '0';
        endif;

       //˜Validate E-Transfer #1 date (Optional Field)
        wData = %Trim(CLP119);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'BA';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP119 = '0';
        endif;

       //˜Validate E-Transfer #2 date (Optional Field)
        wData = %Trim(CLP120);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'BB';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP120 = '0';
        endif;

       //˜Validate COE Registration date (Optional Field)
        wData = %Trim(CLP121);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'AY';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP121 = '0';
        endif;

       //˜Validate No of Owner Transfer (Optional Field)
        wData = %Trim(CLP125);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'AZ';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP125 = '0';
        endif;

       //˜Validate Exchange Rate Date (Optional Field)
        wData = %Trim(CLP128);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'M8';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP128 = '0';
        endif;

       //˜Validate Next valuation Date (Optional Field)
        wData = %Trim(CLP129);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '16';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP129 = '0';
        endif;

       //˜Validate Valuation Freq (Optional Field)
        wData = %Trim(CLP130);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'M9';
              exsr srGetErrorDescription;
           else;
              wChkNum = %Int(wData);
              if wChkNum > 999;
                 wErrorCode = 'M9';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP130 = '0';
        endif;

       //˜Validate Last Valuation Date (Optional Field)
        wData = %Trim(CLP132);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '33';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP132 = '0';
        endif;

       //˜Validate Last Valuation Time (Optional Field)
        wData = %Trim(CLP133);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'B1';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP133 = '0';
        endif;

       //˜Validate Mileage Used (Optional Field)
        wData = %Trim(CLP134);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'AO';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP134 = '0';
        endif;

       //˜Validate Area Unit (Optional Field)
        wData = %Trim(CLP135);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '14';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP135 = '0';
        endif;

       //˜Validate Amount pledged (Optional Field)
        wData = %Trim(CLP136);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'N0';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'N0';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP136 = '0';
        endif;

       //˜Validate Percent pledged (Optional Field)
        wData = %Trim(CLP137);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'N1';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
              if wChkLate > 99.999999999;
                 wErrorCode = 'N1';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP137 = '0';
        endif;

       //˜Validate Car Status Date (Optional Field)
        wData = %Trim(CLP140);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'BI';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP140 = '0';
        endif;

       //˜Validate Car Usage Status Date (Optional Field)
        wData = %Trim(CLP142);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'BJ';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP142 = '0';
        endif;

       //˜Validate Year of First Purchase (Optional Field)
        wData = %Trim(CLP146);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'BK';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP146 = '0';
        endif;

       //˜Validate Weight of Vehicle in KG (Optional Field)
        wData = %Trim(CLP147);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'BL';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP147 = '0';
        endif;

       //˜Validate Year of Usage (Optional Field)
        wData = %Trim(CLP148);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'BM';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP148 = '0';
        endif;

       //˜Validate RY Category (Optional Field)
        wData = %Trim(CLP149);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'BN';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP149 = '0';
        endif;

       //˜Validate Valuation Date (Optional Field)
        wData = %Trim(CLP151);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '34';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP151 = '0';
        endif;

       //˜Validate Reg. Owner CIF 1 (Optional Field)
        wData = %Trim(CLP153);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '64';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP153 = '0';
        endif;

       //˜Validate REG. OWNER CIF 2 (Optional Field)
        wData = %Trim(CLP154);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '93';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP154 = '0';
        endif;

       //˜Validate REG. OWNER CIF 3 (Optional Field)
        wData = %Trim(CLP155);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '94';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP155 = '0';
        endif;

       //˜Validate REG. OWNER CIF 4 (Optional Field)
        wData = %Trim(CLP156);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '95';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP156 = '0';
        endif;

       //˜Validate REG. OWNER CIF 5 (Optional Field)
        wData = %Trim(CLP157);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '96';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP157 = '0';
        endif;

       //˜Validate Date of Receipt (Optional Field)
        wData = %Trim(CLP158);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'BO';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP158 = '0';
        endif;

       //˜Validate Contract Amount (Optional Field)
        wData = %Trim(CLP161);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '47';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = '47';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP161 = '0';
        endif;

       //˜Validate Forced Sales Value (Optional Field)
        wData = %Trim(CLP163);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '19';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = '19';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP163 = '0';
        endif;

       //˜Validate Fair Market Value (Optional Field)
        wData = %Trim(CLP164);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '18';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = '18';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP164 = '0';
        endif;

       //˜Validate Valuation Freq (Optional Field)
        wData = %Trim(CLP165);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'M9';
              exsr srGetErrorDescription;
           else;
              wChkNum = %Int(wData);
              if wChkNum > 999;
                 wErrorCode = 'M9';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP165 = '0';
        endif;

       endsr;

    Š  //***********************************************************************
       //ˆsrGENVal - Validate Collateral Category GEN
    Š  //***********************************************************************
        begsr SrGENVal;

              RecType   = %Trim(CLP001);
              SequeNum  = %Trim(CLP002);
              CollCat   = %Trim(CLP003);
              CollCold  = %Trim(CLP004);
              BankNum   = %Trim(CLP005);
              BranchNum = %Trim(CLP006);
              RegCIFNum = %Trim(CLP007);
              exsr SrValidate;

       //˜Validate Reg. Owner Short Name (Mandatory Field)
       // If CLP008 = *blank;                                        //C0001
       //    wErrorCode = '74';                                      //C0001
       //    exsr srGetErrorDescription;                             //C0001
       // endif;                                                     //C0001

       //˜Validate Collateral description (Mandatory Field)
        If CLP009 = *blank;
           wErrorCode = 'D1';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Current Value (Mandatory Field)
        wData = %Trim(CLP010);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'BP';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'BP';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP010 = *blank;
           wErrorCode = 'BP';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Last Valuation Date (Mandatory Field)
        wData = %Trim(CLP011);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '33';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP011 = *blank;
           wErrorCode = '33';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Next valuation Date (Mandatory Field)
        wData = %Trim(CLP012);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '16';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP012 = *blank;
           wErrorCode = '16';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Collateral Status (Mandatory Field)
        wData = %Trim(CLP013);
        If wData = *blank;
           CLP013 = '1';
        endif;

       //˜Validate Relationship Code (Mandatory Field)
        wData = %Trim(CLP014);
        If wData = *blank;
           CLP014 = *blank;
        endif;

       //˜Validate Basis of Advance Indicator (Mandatory Field)
        wData = %Trim(CLP015);
        If wData = *blank;
           CLP015 = 'FMV';
        endif;

       //˜Validate Share Collateral (Mandatory Field)
        wData = %Trim(CLP016);
        If wData = *blank;
           CLP016 = 'N';
        endif;

       //˜Validate Created User ID (Mandatory Field)
        If CLP017 = *blank;
           wErrorCode = '90';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Created Date (Mandatory Field)
        wData = %Trim(CLP018);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '91';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP018 = %Char(SP1NB8) ;
        endif;

       //˜Validate Last Valuation Time (Mandatory Field)
        wData = %Trim(CLP019);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'B1';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP019 = *blank;
           wErrorCode = 'B1';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Tangible Net Worth Currency (Mandatory Field)
        wData = %Trim(CLP020);
        If wData = *blank;
           CLP020 = 'THB';
        endif;

       //˜Validate Country of Registration (Mandatory Field)
        wData = %Trim(CLP021);
        If wData = *blank;
           CLP021 = 'TH';
        endif;

       //˜Validate Currency (Mandatory Field)
        wData = %Trim(CLP022);
        If wData = *blank;
           CLP022 = 'THB';
        endif;

       //˜Validate Apportion Realisable Value (Mandatory Field)
        wData = %Trim(CLP023);
        If wData = *blank;
           CLP023 = 'N';
        endif;

       //˜Validate Global Collateral (Y/N) (Mandatory Field)
        wData = %Trim(CLP024);
        If wData = *blank;
           CLP024 = 'N';
        endif;

       //˜Validate Country of Origination (Mandatory Field)
        wData = %Trim(CLP025);
        If wData = *blank;
           CLP025 = 'TH';
        endif;

       //˜Validate Basis of Advance Percent (Mandatory Field)
        wData = %Trim(CLP026);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '40';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
              if wChkLate > 99.999999999;
                 wErrorCode = '40';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP026 = '1';
        endif;

       //˜Validate Basel Eligible (Mandatory Field)
        wData = %Trim(CLP027);
        If wData = *blank;
           CLP027 = 'N';
        endif;

       //˜Validate Allow Provisioning (Mandatory Field)
        wData = %Trim(CLP028);
        If wData = *blank;
           CLP028 = 'Y';
        endif;

       //˜Validate Include SLL Computation (Mandatory Field)
        wData = %Trim(CLP029);
        If wData = *blank;
           CLP029 = 'N';
        endif;

       //˜Validate Collateral ID (Optional Field)
        wData = %Trim(CLP030);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'F7';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP030 = '0';
        endif;

       //˜Validate External/Appraised value (Optional Field)
        wData = %Trim(CLP035);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'G1';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'G1';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP035 = '0';
        endif;

       //˜Validate External/Appraisal Date (Optional Field)
        wData = %Trim(CLP036);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'Y5';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP036 = '0';
        endif;

       //˜Validate Issue Date (Optional Field)
        wData = %Trim(CLP037);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '86';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP037 = '0';
        endif;

       //˜Validate Expiry/Maturity Date (Optional Field)
        wData = %Trim(CLP038);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '69';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP038 = '0';
        endif;

       //˜Validate Collateral Value Cap Percent (Optional Field)
        wData = %Trim(CLP043);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'J0';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
              if wChkLate > 99.999999999;
                 wErrorCode = 'J0';
                 exsr srGetErrorDescription;
                 wErrorCode = 'IL';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP043 = '0';
        endif;

       //˜Validate Date of Tagging (Optional Field)
        wData = %Trim(CLP045);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'BZ';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP045 = '0';
        endif;

       //˜Validate Original coll. value (Optional Field)
        wData = %Trim(CLP046);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'J2';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'J2';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP046 = '0';
        endif;

       //˜Validate Date of Bill / Invoice (Optional Field)
        wData = %Trim(CLP049);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'DL';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP049 = '0';
        endif;

       //˜Validate Weightage / Unit (Optional Field)
        wData = %Trim(CLP050);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'DM';
              exsr srGetErrorDescription;
           else;
              wChkNum = %Int(wData);
              if wChkNum > 9999999999999;
                 wErrorCode = 'DM';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP050 = '0';
        endif;

       //˜Validate Price Per Weightage / Unit (Optional Field)
        wData = %Trim(CLP051);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'DN';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999.99;
                 wErrorCode = 'DN';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP051 = '0';
        endif;

       //˜Validate Date Ownership Transfred (Optional Field)
        wData = %Trim(CLP054);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'J4';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP054 = '0';
        endif;

       //˜Validate Date Owner Transf Remove (Optional Field)
        wData = %Trim(CLP055);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'J5';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP055 = '0';
        endif;

       //˜Validate Review date (Optional Field)
        wData = %Trim(CLP056);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'K3';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP056 = '0';
        endif;

       //˜Validate Date Collateral Received (Optional Field)
        wData = %Trim(CLP057);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'J6';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP057 = '0';
        endif;

       //˜Validate Realisable Value (Optional Field)
        wData = %Trim(CLP060);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'L2';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'L2';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP060 = '0';
        endif;

       //˜Validate Total O/S Balance (Optional Field)
        wData = %Trim(CLP064);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '72';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = '72';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP064 = '0';
        endif;

       //˜Validate Exchange Rate Date (Optional Field)
        wData = %Trim(CLP065);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'M8';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP065 = '0';
        endif;

       //˜Validate Valuation Freq (Optional Field)
        wData = %Trim(CLP066);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'M9';
              exsr srGetErrorDescription;
           else;
              wChkNum = %Int(wData);
              if wChkNum > 999;
                 wErrorCode = 'M9';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP066 = '0';
        endif;

       //˜Validate Tangible Net Worth (Optional Field)
        wData = %Trim(CLP068);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'BR';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'BR';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP068 = '0';
        endif;

       //˜Validate Financial Year End (Mandatory Field)
        wData = %Trim(CLP069);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'BS';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP069 = '0';
        endif;

       //˜Validate Amount pledged (Optional Field)
        wData = %Trim(CLP070);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'N0';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'N0';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP070 = '0';
        endif;

       //˜Validate Percent pledged (Optional Field)
        wData = %Trim(CLP071);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'N1';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
              if wChkLate > 99.999999999;
                 wErrorCode = 'N1';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP071 = '0';
        endif;

       //˜Validate Date Pledged (Optional Field)
        wData = %Trim(CLP072);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'BT';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP072 = '0';
        endif;

       //˜Validate Account Number (Optional Field)
        wData = %Trim(CLP074);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'BU';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP074 = '0';
        endif;

       //˜Validate Interest Rate (Optional Field)
        wData = %Trim(CLP075);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'BD';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
              if wChkLate > 99.999999999;
                 wErrorCode = 'BD';
                 exsr srGetErrorDescription;
                 wErrorCode = 'IL';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP075 = '0';
        endif;

       //˜Validate Deposit Term (Optional Field)
        wData = %Trim(CLP076);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'J9';
              exsr srGetErrorDescription;
           else;
              wChkNum = %Int(wData);
              if wChkNum > 999;
                 wErrorCode = 'J9';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP076 = '0';
        endif;

       //˜Validate Forced Sales Value (Optional Field)
        wData = %Trim(CLP079);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '19';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = '19';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP079 = '0';
        endif;

       //˜Validate Reg. Owner CIF 1 (Optional Field)
        wData = %Trim(CLP080);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '64';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP080 = '0';
        endif;

       //˜Validate REG. OWNER CIF 2 (Optional Field)
        wData = %Trim(CLP081);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '93';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP081 = '0';
        endif;

       //˜Validate REG. OWNER CIF 3 (Optional Field)
        wData = %Trim(CLP082);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '94';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP082 = '0';
        endif;

       //˜Validate REG. OWNER CIF 4 (Optional Field)
        wData = %Trim(CLP083);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '95';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP083 = '0';
        endif;

       //˜Validate REG. OWNER CIF 5 (Optional Field)
        wData = %Trim(CLP084);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '96';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP084 = '0';
        endif;

       //˜Validate Forced Sales Value (Optional Field)
        wData = %Trim(CLP085);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '19';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = '19';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP085 = '0';
        endif;

       //˜Validate Valuation Freq (Optional Field)
        wData = %Trim(CLP086);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'M9';
              exsr srGetErrorDescription;
           else;
              wChkNum = %Int(wData);
              if wChkNum > 999;
                 wErrorCode = 'M9';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP086 = '0';
        endif;

       //˜Validate Realisable Amount (Optional Field)
        wData = %Trim(CLP100);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'BV';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'BV';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP100 = '0';
        endif;

       endsr;

    Š  //***********************************************************************
       //ˆsrMainVal - Validate Collateral Category MAIN
    Š  //***********************************************************************
        begsr SrMainVal;

              Rectype   = %Trim(CLP001);
              SequeNum  = %Trim(CLP002);
              CollCat   = %Trim(CLP003);
              CollCold  = %Trim(CLP004);
              BankNum   = %Trim(CLP005);
              BranchNum = %Trim(CLP006);
              RegCIFNum = %Trim(CLP007);
              exsr SrValidate;

       //˜Validate Fair Market Value (Optional Field)
        wData = %Trim(CLP008);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '18';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = '18';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP008 = '0';
        endif;

       //˜Validate Forced Sales Value (Optional Field)
        wData = %Trim(CLP009);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '19';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = '19';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP009 = '0';
        endif;

       //˜Validate Contract Amount (Optional Field)
        wData = %Trim(CLP010);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '47';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = '47';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP010 = '0';
        endif;

       //˜Validate Basis of Advance Percent (Optional Field)
        wData = %Trim(CLP012);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '40';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
              if wChkLate > 99.999999999;
                 wErrorCode = '40';
                 exsr srGetErrorDescription;
                 wErrorCode = 'IL';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP012 = '1';
        endif;

       //˜Validate Basel Eligible (Mandatory Field)
        wData = %Trim(CLP013);
        If wData = *blank;
           wErrorCode = '37';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Allow Provisioning (Optional Field)
        wData = %Trim(CLP014);
        If wData = *blank;
           CLP014 = 'Y';
        endif;

       //˜Validate Include SLL Computation (Optional Field)
        wData = %Trim(CLP015);
        If wData = *blank;
           CLP015 = 'N';
        endif;

       //˜Validate Last Valuation Date (Mandatory Field)
        wData = %Trim(CLP016);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '33';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP016 = '0';
        endif;

       //˜Validate Valuation Date (Mandatory Field)
        wData = %Trim(CLP017);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '34';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP017 = '0';
        endif;

       //˜Validate Next valuation Date (Mandatory Field)
        wData = %Trim(CLP018);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '16';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP018 = '0';
        endif;

       //˜Validate Reg. Owner CIF 1 (Mandatory Field)
        wData = %Trim(CLP021);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '64';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP021 = *blank;
           wErrorCode = '64';
           exsr srGetErrorDescription;
        endif;

       //˜Validate REG. OWNER CIF 2 (Optional Field)
       wData = %Trim(CLP022);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '93';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP022 = '0';
        endif;

       //˜Validate REG. OWNER CIF 3 (Optional Field)
        wData = %Trim(CLP023);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '94';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP023 = '0';
        endif;

       //˜Validate REG. OWNER CIF 4 (Optional Field)
        wData = %Trim(CLP024);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '95';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP024 = '0';
        endif;

       //˜Validate REG. OWNER CIF 5 (Optional Field)
        wData = %Trim(CLP025);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '96';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP025 = '0';
        endif;

       //˜Validate Sub Collateral 1 (Optional Field)
        wData = %Trim(CLP026);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '65';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP026 = '0';
        endif;

       //˜Validate Sub Collateral 2 (Optional Field)
        wData = %Trim(CLP027);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '66';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP027 = '0';
        endif;

       //˜Validate Sub Collateral 3 (Optional Field)
        wData = %Trim(CLP028);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '97';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP028 = '0';
        endif;

       //˜Validate Sub Collateral 4 (Optional Field)
        wData = %Trim(CLP029);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '98';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP029 = '0';
        endif;

       //˜Validate Sub Collateral 5 (Optional Field)
        wData = %Trim(CLP030);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '99';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP030 = '0';
        endif;

       //˜Validate Address Format (Optional Field)
        wData = %Trim(CLP031);
        Chain (wData)Cfpar9;
        If not %found(cfpar9) or wData = 'F';
           wErrorCode = '41';
           exsr srGetErrorDescription;
        else;
           CLP031 = %trim(wData);
        endif;

       //˜Validate Address Type (Optional Field)
        wData = %Trim(CLP032);
        Chain (wData)Cfpar92;
        If not %found(cfpar92);
           wErrorCode = '42';
           exsr srGetErrorDescription;
        else;
           CLP032 = %trim(wData);
        endif;

       //˜Validate Address Line (Optional Field)
        exsr SR_MAIN_ADD;
        If wErrorCode <> *blank;
           exsr srGetErrorDescription;
        endif;

       //˜Validate Collateral Category (Mandatory Field)
        wData = %Trim(CLP038);
        If wData = *blank;
           wErrorCode = '05';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Country of Registration (Optional Field)
        wData = %Trim(CLP039);
        If wData = *blank;
           CLP039 = 'TH';
        endif;

       //˜Validate Currency (Optional Field)
        wData = %Trim(CLP040);
        If wData = *blank;
           CLP040 = 'THB';
        endif;

       //˜Validate Marked to Market Value (Y/N) (Optional Field)
        wData = %Trim(CLP041);
        If wData = *blank;
           CLP041 = 'N';
        endif;

       //˜Validate Apportion Realisable Value (Optional Field)
        wData = %Trim(CLP042);
        If wData = *blank;
           CLP042 = 'N';
        endif;

       //˜Validate Collateral ID (Optional Field)
        wData = %Trim(CLP048);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'F7';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP048 = '0';
        endif;

       //˜Validate Created Date (Optional Field)
        wData = %Trim(CLP056);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '91';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP056 = %Char(SP1NB8) ;
        endif;

       //˜Validate Valuation Freq (Optional Field)
        wData = %Trim(CLP058);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'M9';
              exsr srGetErrorDescription;
           else;
              wChkNum = %Int(wData);
              if wChkNum > 999;
                 wErrorCode = 'M9';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP058 = '0';
        endif;

       //˜Validate FMV on complete (Optional Field)
        wData = %Trim(CLP060);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '17';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = '17';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP060 = '0';
        endif;

       //˜Validate FSV on Complete (Optional Field)
        wData = %Trim(CLP061);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'G2';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'G2';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP061 = '0';
        endif;

       //˜Validate Deposit Hold amount (Optional Field)
        wData = %Trim(CLP062);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'P4';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'P4';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP062 = '0';
        endif;

       //˜Validate Purchase Price (Optional Field)
        wData = %Trim(CLP063);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'G8';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'G8';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP063 = '0';
        endif;

       //˜Validate Transfer Amount (Optional Field)
        wData = %Trim(CLP064);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'P5';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'P5';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP064 = '0';
        endif;

       //˜Validate Guaranteed Amount (Optional Field)
        wData = %Trim(CLP065);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '70';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = '70';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP065 = '0';
        endif;

       //˜Validate Expected Total Deposit Amount (Optional Field)
        wData = %Trim(CLP066);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'P6';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'P6';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP066 = '0';
        endif;

       //˜Validate Last Valuation Time (Optional Field)
        wData = %Trim(CLP067);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'B1';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP067 = '0';
        endif;

       //˜Validate Aggregated Contract Amount (Optional Field)
        wData = %Trim(CLP068);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'N5';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'N5';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP068 = '0';
        endif;

       //˜Validate Aggregated Collateral Amount (Optional Field)
        wData = %Trim(CLP069);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'N6';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'N6';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP069 = '0';
        endif;

       //˜Validate Forced Sales Value (Optional Field)
        wData = %Trim(CLP070);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '19';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = '19';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP070 = '0';
        endif;

       //˜Validate Fair Market Value (Optional Field)
        wData = %Trim(CLP071);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '18';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = '18';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP071 = '0';
        endif;

       //˜Validate Valuation Freq (Optional Field)
        wData = %Trim(CLP072);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'M9';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP072 = '0';
        endif;

       //˜Validate Stay Start Date (Optional Field)
        wData = %Trim(CLP085);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'N4';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP085 = '0';
        endif;

       endsr;

    Š  //***********************************************************************
       //ˆSrColConVal - Validate Collateral Category Collateral and Contract
    Š  //***********************************************************************
        begsr SrColConVal;

         Select;

       //˜Collateral Creation
          When wRecordID = 'CT';

       //˜Validate Record Type (Mandatory Field)
          If CLP001 = *blank;
             wErrorCode = '00';
             exsr srGetErrorDescription;
          endif;

       //˜Validate Group Sequence No. (Mandatory Field)
          wData = %Trim(CLP002);
          If wData <> *Blank;
             wTestField=wData;
             Exsr srTestIntegers;
             If wErrorCode<>*blank;
                wErrorCode = '03';
                exsr srGetErrorDescription;
             endif;
          else;
               CLP002 = *blank;
             wErrorCode = '03';
             exsr srGetErrorDescription;
          endif;

       //˜Validate Contract ID (Mandatory Field)
          wData = %Trim(CLP003);
          If wData <> *Blank;
             wTestField=wData;
             Exsr srTestIntegers;
             If wErrorCode<>*blank;
                wErrorCode = 'E0';
                exsr srGetErrorDescription;
             endif;
          endif;

       //˜Validate Contract Reference No (Mandatory Field)
          If CLP004 = *blank;
             wErrorCode = 'F0';
             exsr srGetErrorDescription;
          endif;

       //˜Validate Contract Type (Mandatory Field)
          If CLP005 = *blank;
             wErrorCode = 'F1';
             exsr srGetErrorDescription;
          endif;

       //˜Validate Contract Date (Mandatory Field)
          wData = %Trim(CLP006);
          If wData <> *Blank;
             wTestField=wData;
             Exsr srTestIntegers;
             If wErrorCode<>*blank;
                wErrorCode = 'F2';
                exsr srGetErrorDescription;
             endif;
          else;
             CLP006 = *blank;
             wErrorCode = 'F2';
             exsr srGetErrorDescription;
          endif;

       //˜Validate Contract Currency (Mandatory Field)
          If CLP007 = *blank;
             wErrorCode = 'F3';
             exsr srGetErrorDescription;
          endif;

       //˜Validate Contract Amount (Optional Field)
        wData = %Trim(CLP008);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = '18';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = '18';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP008 = '0';
        endif;

       //˜Validate Aggregated Contract Amt (Optional Field)
        wData = %Trim(CLP009);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'N5';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'N5';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP009 = '0';
        endif;

       //˜Validate Contract Status (Mandatory Field)
          If CLP010 = *blank;
             wErrorCode = 'F4';
             exsr srGetErrorDescription;
          endif;

       //˜Validate Contract Status Date (Mandatory Field)
          wData = %Trim(CLP011);
          If wData <> *Blank;
             wTestField=wData;
             Exsr srTestIntegers;
             If wErrorCode<>*blank;
                wErrorCode = 'F5';
                exsr srGetErrorDescription;
             endif;
          else;
             CLP011 = *blank;
             wErrorCode = 'F5';
             exsr srGetErrorDescription;
          endif;

       //˜Validate Collateral Category (Mandatory Field)
          If CLP012 = *blank;
             wErrorCode = '05';
             exsr srGetErrorDescription;
          endif;

       //˜Validate 1st/3rd Party Charge (Optional Field)
        wData = %Trim(CLP013);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'P7';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP013 = '0';
        endif;

       //˜Validate Charge Rank (Optional Field)
        wData = %Trim(CLP015);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = 'P8';
              exsr srGetErrorDescription;
           endif;
        else;
           CLP015 = '0';
        endif;

       //˜Validate Aggregated (Optional Field)
        wData = %Trim(CLP018);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'P9';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'P9';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP018 = '0';
        endif;

       //˜Validate Collateral ID 1 (Mandatory Field)
          wData = %Trim(CLP019);
          If wData <> *Blank;
             wTestField=wData;
             Exsr srTestIntegers;
             If wErrorCode<>*blank;
                wErrorCode = 'Q0';
                exsr srGetErrorDescription;
             endif;
          else;
             CLP019 = '0';
          endif;

       //˜Validate Collateral ID 2 (Optional Field)
          wData = %Trim(CLP020);
          If wData <> *Blank;
             wTestField=wData;
             Exsr srTestIntegers;
             If wErrorCode<>*blank;
                wErrorCode = 'Q1';
                exsr srGetErrorDescription;
             endif;
          else;
             CLP020 = '0';
          endif;

       //˜Validate Collateral ID 3 (Optional Field)
          wData = %Trim(CLP021);
          If wData <> *Blank;
             wTestField=wData;
             Exsr srTestIntegers;
             If wErrorCode<>*blank;
                wErrorCode = 'Q2';
                exsr srGetErrorDescription;
             endif;
          else;
             CLP021 = '0';
          endif;

       //˜Validate Collateral ID 4 (Optional Field)
          wData = %Trim(CLP022);
          If wData <> *Blank;
             wTestField=wData;
             Exsr srTestIntegers;
             If wErrorCode<>*blank;
                wErrorCode = 'Q3';
                exsr srGetErrorDescription;
             endif;
          else;
             CLP022 = '0';
          endif;

       //˜Validate Collateral ID 5 (Optional Field)
          wData = %Trim(CLP023);
          If wData <> *Blank;
             wTestField=wData;
             Exsr srTestIntegers;
             If wErrorCode<>*blank;
                wErrorCode = 'Q4';
                exsr srGetErrorDescription;
             endif;
          else;
             CLP023 = '0';
          endif;

       //˜Contract link facility
          When wRecordID = 'CF';

       //˜Validate Record Type (Mandatory Field)
          wData = %Trim(CLP001);
          If wData = *blank;
             wErrorCode = '00';
             exsr srGetErrorDescription;
          endif;

       //˜Validate Group Sequence No. (Mandatory Field)
          wData = %Trim(CLP002);
          If wData <> *Blank;
             wTestField=wData;
             Exsr srTestIntegers;
             If wErrorCode<>*blank;
                wErrorCode = '03';
                exsr srGetErrorDescription;
             endif;
          else;
             CLP002 = *blank;
             wErrorCode = '03';
             exsr srGetErrorDescription;
          endif;

       //˜Validate Facility ID (Optional Field)
          wData = %Trim(CLP003);
          If wData <> *Blank;
             wTestField=wData;
             Exsr srTestIntegers;
             If wErrorCode<>*blank;
                wErrorCode = 'Q5';
                exsr srGetErrorDescription;
             endif;
          else;
             CLP003 = '0';
          endif;

       //˜Validate Approved Limit (Optional Field)
        wData = %Trim(CLP005);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'R1';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'R1';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP005 = '0';
        endif;

       //˜Validate Drawing Limit (Optional Field)
        wData = %Trim(CLP006);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'R2';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'R2';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP006 = '0';
        endif;

       //˜Validate Level (Optional Field)
          wData = %Trim(CLP008);
          If wData <> *Blank;
             wTestField=wData;
             Exsr srTestIntegers;
             If wErrorCode<>*blank;
                wErrorCode = 'R3';
                exsr srGetErrorDescription;
             endif;
          else;
             CLP008 = '0';
          endif;

       //˜Validate Facility CIF No. (Optional Field)
          wData = %Trim(CLP009);
          If wData <> *Blank;
             wTestField=wData;
             Exsr srTestIntegers;
             If wErrorCode<>*blank;
                wErrorCode = 'R4';
                exsr srGetErrorDescription;
             endif;
          else;
             CLP009 = '0';
          endif;

       //˜Validate Percent pledged (Optional Field)
        wData = %Trim(CLP011);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'N1';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
              if wChkLate > 99.999999999;
                 wErrorCode = 'N1';
                 exsr srGetErrorDescription;
                 wErrorCode = 'IL';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP011 = '0';
        endif;

       //˜Validate Amount pledged (Optional Field)
        wData = %Trim(CLP012);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'N0';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'N0';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP012 = '0';
        endif;

       //˜Validate Drawing % chg to BOA (Optional Field)
        wData = %Trim(CLP013);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'R5';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
              if wChkLate > 99.999999999;
                 wErrorCode = 'N1';
                 exsr srGetErrorDescription;
                 wErrorCode = 'IL';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP013 = '0';
        endif;

       //˜Validate Drawing Lmt chg to BOA (Optional Field)
        wData = %Trim(CLP014);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'R6';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'N0';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP014 = '0';
        endif;

       //˜Validate Contract ID (Mandatory Field)
          wData = %Trim(CLP016);
          If wData <> *Blank;
             wTestField=wData;
             Exsr srTestIntegers;
             If wErrorCode<>*blank;
                wErrorCode = 'E0';
                exsr srGetErrorDescription;
             endif;
          endif;

       //˜Validate Facility ID 1 (Mandatory Field)
          wData = %Trim(CLP017);
          If wData <> *Blank;
             wTestField=wData;
             Exsr srTestIntegers;
             If wErrorCode<>*blank;
                wErrorCode = 'E2';
                exsr srGetErrorDescription;
             endif;
          else;
             CLP017 = '0';
             wErrorCode = 'E1';
             exsr srGetErrorDescription;
          endif;

       //˜Validate Facility ID 2 (Optional Field)
          wData = %Trim(CLP018);
          If wData <> *Blank;
             wTestField=wData;
             Exsr srTestIntegers;
             If wErrorCode<>*blank;
                wErrorCode = 'Q7';
                exsr srGetErrorDescription;
             endif;
          else;
             CLP018 = '0';
          endif;

       //˜Validate Facility ID 3 (Optional Field)
          wData = %Trim(CLP019);
          If wData <> *Blank;
             wTestField=wData;
             Exsr srTestIntegers;
             If wErrorCode<>*blank;
                wErrorCode = 'Q8';
                exsr srGetErrorDescription;
             endif;
          else;
             CLP019 = '0';
          endif;

       //˜Validate Facility ID 4 (Optional Field)
          wData = %Trim(CLP020);
          If wData <> *Blank;
             wTestField=wData;
             Exsr srTestIntegers;
             If wErrorCode<>*blank;
                wErrorCode = 'Q9';
                exsr srGetErrorDescription;
             endif;
          else;
             CLP020 = '0';
          endif;

       //˜Validate Facility ID 5 (Optional Field)
          wData = %Trim(CLP021);
          If wData <> *Blank;
             wTestField=wData;
             Exsr srTestIntegers;
             If wErrorCode<>*blank;
                wErrorCode = 'R0';
                exsr srGetErrorDescription;
             endif;
          else;
             CLP021 = '0';
          endif;

       //˜Validate PLEDGED % 1 (Optional Field)
        wData = %Trim(CLP022);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'S0';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
              if wChkLate > 99.999999999;
                 wErrorCode = 'S0';
                 exsr srGetErrorDescription;
                 wErrorCode = 'IL';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP022 = '0';
        endif;

       //˜Validate PLEDGED % 2 (Optional Field)
        wData = %Trim(CLP023);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'S1';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
              if wChkLate > 99.999999999;
                 wErrorCode = 'S1';
                 exsr srGetErrorDescription;
                 wErrorCode = 'IL';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP023 = '0';
        endif;

       //˜Validate PLEDGED % 3 (Optional Field)
        wData = %Trim(CLP024);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'S2';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
              if wChkLate > 99.999999999;
                 wErrorCode = 'S2';
                 exsr srGetErrorDescription;
                 wErrorCode = 'IL';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP024 = '0';
        endif;

       //˜Validate PLEDGED % 4 (Optional Field)
        wData = %Trim(CLP025);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'S3';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
              if wChkLate > 99.999999999;
                 wErrorCode = 'S3';
                 exsr srGetErrorDescription;
                 wErrorCode = 'IL';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP025 = '0';
        endif;

       //˜Validate PLEDGED % 5 (Optional Field)
        wData = %Trim(CLP026);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'S4';
              exsr srGetErrorDescription;
           else;
              wChkLate = %Dec(wData:19:9);
              if wChkLate > 99.999999999;
                 wErrorCode = 'S4';
                 exsr srGetErrorDescription;
                 wErrorCode = 'IL';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP026 = '0';
        endif;

       //˜Validate AMOUNT PLEDGED 1 (Optional Field)
        wData = %Trim(CLP027);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'S5';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'S5';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP027 = '0';
        endif;

       //˜Validate AMOUNT PLEDGED 2 (Optional Field)
        wData = %Trim(CLP028);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'S6';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'S6';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP028 = '0';
        endif;

       //˜Validate AMOUNT PLEDGED 3 (Optional Field)
        wData = %Trim(CLP029);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'S7';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'S7';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP029 = '0';
        endif;

       //˜Validate AMOUNT PLEDGED 4 (Optional Field)
        wData = %Trim(CLP030);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'S8';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'S8';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP030 = '0';
        endif;

       //˜Validate AMOUNT PLEDGED 5 (Optional Field)
        wData = %Trim(CLP031);
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestDigits;
           If wErrorCode<>*blank;
              wErrorCode = 'S9';
              exsr srGetErrorDescription;
           else;
              wChkAmt = %Dec(wData:19:2);
              if wChkAmt > 999999999999999.99;
                 wErrorCode = 'S9';
                 exsr srGetErrorDescription;
                 wErrorCode = 'II';
                 exsr srGetErrorDescription;
              endif;
           endif;
        else;
           CLP031 = '0';
        endif;

       //˜Validate BOA % 1 / BOA AMOUNT 1 (Mandatory Field)
          If CLP032 <> *Blank and CLP037 <> *Blank or
             (CLP032 = *Blank and CLP037 = *Blank);
             wErrorCode = 'U0';
             exsr srGetErrorDescription;
          endif;

          if CLP032 <> *blank;
             wData = %Trim(CLP032);
             If wData <> *Blank;
                wTestField=wData;
                Exsr srTestDigits;
                If wErrorCode<>*blank;
                   wErrorCode = 'E3';
                   exsr srGetErrorDescription;
                endif;
             else;
                CLP032 = '0';
             endif;
          else;
             CLP032 = '0';
          endif;

          if CLP037 <> *blank;
             wData = %Trim(CLP037);
             If wData <> *Blank;
                wTestField=wData;
                Exsr srTestDigits;
                If wErrorCode<>*blank;
                   wErrorCode = 'E3';
                   exsr srGetErrorDescription;
                endif;
             else;
                CLP037 = '0';
             endif;
          else;
             CLP037 = '0';
          endif;

       //˜Validate Facility ID 2 BOA % 2 / BOA AMOUNT 2 (Optional Field)
          If CLP018 = '0';
             if CLP033 <> *Blank or CLP038 <> *Blank;
                wErrorCode = 'E5';
                exsr srGetErrorDescription;
             else;
                CLP033 = '0';
                CLP038 = '0';
             endif;
          else;
             If CLP033 <> *Blank and CLP038 <> *Blank or
                (CLP033 = *Blank and CLP038 = *Blank);
                wErrorCode = 'U1';
                exsr srGetErrorDescription;
             endif;

             if CLP033 <> *blank;
                wData = %Trim(CLP033);
                If wData <> *Blank;
                   wTestField=wData;
                   Exsr srTestDigits;
                   If wErrorCode<>*blank;
                      wErrorCode = 'E3';
                      exsr srGetErrorDescription;
                   endif;
                else;
                   CLP033 = '0';
                endif;
             else;
                CLP033 = '0';
             endif;

             if CLP038 <> *blank;
                wData = %Trim(CLP038);
                If wData <> *Blank;
                   wTestField=wData;
                   Exsr srTestDigits;
                   If wErrorCode<>*blank;
                      wErrorCode = 'E3';
                      exsr srGetErrorDescription;
                   endif;
                else;
                   CLP038 = '0';
                endif;
             else;
                CLP038 = '0';
             endif;
          endif;

       //˜Validate Facility ID 3 BOA % 3 / BOA AMOUNT 3 (Optional Field)
          If CLP019 = '0';
             if CLP034 <> *Blank or CLP039 <> *Blank;
                wErrorCode = 'E6';
                exsr srGetErrorDescription;
             else;
                CLP034 = '0';
                CLP039 = '0';
             endif;
          else;
             If CLP034 <> *Blank and CLP039 <> *Blank or
                (CLP034 = *Blank and CLP039 = *Blank);
                wErrorCode = 'U2';
                exsr srGetErrorDescription;
             endif;

             if CLP034 <> *blank;
                wData = %Trim(CLP034);
                If wData <> *Blank;
                   wTestField=wData;
                   Exsr srTestDigits;
                   If wErrorCode<>*blank;
                      wErrorCode = 'E3';
                      exsr srGetErrorDescription;
                   endif;
                else;
                   CLP034 = '0';
                endif;
             else;
                CLP034 = '0';
             endif;

             if CLP039 <> *blank;
                wData = %Trim(CLP039);
                If wData <> *Blank;
                   wTestField=wData;
                   Exsr srTestDigits;
                   If wErrorCode<>*blank;
                      wErrorCode = 'E3';
                      exsr srGetErrorDescription;
                   endif;
                else;
                   CLP039 = '0';
                endif;
             else;
                CLP039 = '0';
             endif;
          endif;

       //˜Validate Facility ID 4 BOA % 4 / BOA AMOUNT 4 (Optional Field)
          If CLP020 = '0';
             if CLP035 <> *Blank or CLP040 <> *Blank;
                wErrorCode = 'E7';
                exsr srGetErrorDescription;
             else;
                CLP035 = '0';
                CLP040 = '0';
             endif;
          else;
             If CLP035 <> *Blank and CLP040 <> *Blank or
                (CLP035 = *Blank and CLP040 = *Blank);
                wErrorCode = 'U3';
                exsr srGetErrorDescription;
             endif;

             if CLP035 <> *blank;
                wData = %Trim(CLP035);
                If wData <> *Blank;
                   wTestField=wData;
                   Exsr srTestDigits;
                   If wErrorCode<>*blank;
                      wErrorCode = 'E3';
                      exsr srGetErrorDescription;
                   endif;
                else;
                   CLP035 = '0';
                endif;
             else;
                CLP035 = '0';
             endif;

             if CLP040 <> *blank;
                wData = %Trim(CLP040);
                If wData <> *Blank;
                   wTestField=wData;
                   Exsr srTestDigits;
                   If wErrorCode<>*blank;
                      wErrorCode = 'E3';
                      exsr srGetErrorDescription;
                   endif;
                else;
                   CLP040 = '0';
                endif;
             else;
                CLP040 = '0';
             endif;
          endif;

       //˜Validate Facility ID 5 BOA % 5 / BOA AMOUNT 5 (Optional Field)
          If CLP021 = '0';
             if CLP036 <> *Blank or CLP041 <> *Blank;
                wErrorCode = 'E8';
                exsr srGetErrorDescription;
             else;
                CLP036 = '0';
                CLP041 = '0';
             endif;
          else;
             If CLP036 <> *Blank and CLP041 <> *Blank or
                (CLP036 = *Blank and CLP041 = *Blank);
                wErrorCode = 'U4';
                exsr srGetErrorDescription;
             endif;

             if CLP036 <> *blank;
                wData = %Trim(CLP036);
                If wData <> *Blank;
                   wTestField=wData;
                   Exsr srTestDigits;
                   If wErrorCode<>*blank;
                      wErrorCode = 'E3';
                      exsr srGetErrorDescription;
                   endif;
                else;
                   CLP036 = '0';
                endif;
             else;
                CLP036 = '0';
             endif;

             if CLP041 <> *blank;
                wData = %Trim(CLP041);
                If wData <> *Blank;
                   wTestField=wData;
                   Exsr srTestDigits;
                   If wErrorCode<>*blank;
                      wErrorCode = 'E3';
                      exsr srGetErrorDescription;
                   endif;
                else;
                   CLP041 = '0';
                endif;
             else;
                CLP041 = '0';
             endif;
          endif;

         endsl;

       endsr;

    Š  //***********************************************************************
       //ˆsrValidate - Validate Main (Mandatory Field)
    Š  //***********************************************************************
        begsr SrValidate;

       //˜Validate Record Type (Mandatory Field)
        If RecType = *blank;
           wErrorCode = '00';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Group Sequence No. (Mandatory Field)
        wData = SequeNum;
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '03';
              exsr srGetErrorDescription;
           endif;
        else;
           SequeNum = *blank;
           wErrorCode = '03';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Collateral Category (Mandatory Field)
        IF CollCat = *blank;
           wErrorCode = '05';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Collateral code (Mandatory Field)
        wData = CollCold;
        If wData = *blank;
           wErrorCode = '04';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Bank number (Mandatory Field)
        wData = BankNum;
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '01';
              exsr srGetErrorDescription;
           endif;
        else;
           BankNum = *blank;
           wErrorCode = '01';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Branch Number (Mandatory Field)
        wData = BranchNum;
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '02';
              exsr srGetErrorDescription;
           endif;
        else;
           BranchNum = *blank;
           wErrorCode = '02';
           exsr srGetErrorDescription;
        endif;

       //˜Validate Registered Owner CIF Numb (Mandatory Field)
        wData = RegCIFNum;
        If wData <> *Blank;
           wTestField=wData;
           Exsr srTestIntegers;
           If wErrorCode<>*blank;
              wErrorCode = '06';
              exsr srGetErrorDescription;
           endif;
        else;
           RegCIFNum = *blank;
           wErrorCode = '06';
           exsr srGetErrorDescription;
        endif;

       endsr;

    Š  //***********************************************************************
       // srInsertRecord - Write result data into workfile
    Š  //***********************************************************************
        Begsr srInsertRecord;

           If wRecordID<>'HD' and wRecordID<>'TL';

            //if Errdsc = *blank;
       //˜Insert into workfile for CLON1PC
            //   write rINT374o01;
            //endif;

              Errcde = wErrorcode;
              Clear Flagerr;
              if Errdsc <> *blank;
                 FLAGERR = 'Y';
                 exsr SRDIMRECSEQ;
              endif;

              write rINT374r01;

           Endif;

           Clear wChkNum;
           Clear wChkAmt;
           Clear wChkLate;

       //  Clear rINT374o01;
           Clear rINT374r01;

        Endsr;
    Š  //***********************************************************************
       //  srUpdateINTFILE
    Š  //***********************************************************************
        Begsr srUpdateINTFILE;

        chain (p9infiid:P9Filnm:wDate:wInfSeq) intfile;
        If %found(intfile);
           i_InPgm  = Program;
           If P9Error  <> '00' or wHeaderError = 'Y'
              or wTrailerError = 'Y';
              i_IntThd = 0;
              i_IntOtr = wcount ;
              i_InSts  = '2';                                      // reject
              P9Err    = 'Y';
           else;
              i_IntThd = 1;
              i_IntOtr = wcount ;
              i_inSts  = '3';                                      // success
              P9Err    = 'N';
           Endif;
           update rintfile %fields(i_InPgm:i_IntThd:i_IntOtr:i_InSts);
           commit;
        Endif;

        Endsr;
    Š  //***********************************************************************
       // srTestDigits - Test if field values contains digits only
    Š  //***********************************************************************
        Begsr srTestDigits;

          wPos = %check(digits:wTestField);
          If wpos>0;
            wErrorCode='99';
            Leavesr;
          Endif;

        Endsr;

    Š  //***********************************************************************
       // srTestInteger - Test if field values contains digits only
    Š  //***********************************************************************
        Begsr srTestIntegers;

          wPos = %check(Integers:wTestField);
          If wpos>0;
            wErrorCode='99';
            Leavesr;
          Endif;

        Endsr;

    Š  //***********************************************************************
       // srTestDate - Test if field values contains valid date
    Š  //***********************************************************************
        Begsr srTestDate;

          wTestField=wTestDate;
          Exsr srTestIntegers;
          If wpos=0 and wTestDate<>*blank and wTestDate<>*zeros;
            wDateField=%int(wTestDate);
            test(de) *iso wDateField;
            if %error;
              wErrorCode='99';
              Leavesr;
            endif;
          Endif;

        Endsr;

    Š  //***********************************************************************
       // srGetErrorDescription - Get Error Description
    Š  //***********************************************************************
        Begsr srGetErrorDescription ;

           if %tlookup(wErrorCode:TabErrCd:TabErrDesc);   // error description
              Errdsc = %Trim(Errdsc) + %Trim(TabErrDesc) + '|';
           endif;

           Exsr srIntDtle;
           wErrorCode = *blank;

        Endsr;

    Š  //***********************************************************************
       // *PsSr : Exceptional Error Handling Subroutine
    Š  //***********************************************************************
          Begsr *Pssr ;

           chain (p9infiid:P9Filnm:wDate:wInfSeq) intfile;
           If %found(intfile);
              i_InPgm  = Program;
              i_IntOtr = wcount ;
              i_InSts  = '2';                                      // reject
              P9Err    = 'Y';
           update rintfile %fields(i_InPgm :i_IntOtr :i_InSts);
           commit;
           Endif;

          Endsr  '*CANCL';

    Š  //***********************************************************************
       // *InzSr : Initialization Subroutine
    Š  //***********************************************************************
        Begsr *InzSr;

        // wInfseq = %Dec(P9FilSeq:5:0);
        // wDate   = %Int(p9date);
           Read rsspar1;
           P9Error = '00';

        Endsr;
      //End-Free
      **********************************************************************
      * ŠSRHDR     - Create Header                                        ˆ*
      **********************************************************************
     C     SRHDR         BEGSR
      *
     C                   EVAL      HD_INFIID     = P9INFIID
     C                   EVAL      HD_INFNAM     = P9FILNM
     C                   EVAL      HD_INDATE     = WDATE
     C                   EVAL      HD_INFSEQ     = WINFSEQ
     C                   EVAL      HD_INSEQN     = wINSEQN + 1
      *
     C     KINTHDR       CHAIN     RINTHDR
     C                   IF        %FOUND(INTHDR)
     C                   EVAL      HD_INDTLN     = WRCNT
     C                   UPDATE    RINTHDR
     C                   ELSE
      *
     C                   EVAL      HD_INFNAM     = P9FILNM
     C                   IF        HD_INFSEQ     <> 1
     C                   EVAL      HD_INFSEQ     = HD_INFSEQ
     C                   ELSE
     C                   Z-ADD     1             HD_INFSEQ
     C                   ENDIF
      *
     C                   Z-ADD     WDATE         HD_INDATE
     C                   Z-ADD     1             HD_INSEQN
     C                   EVAL      HD_INTIME     = %DEC(%TIME())
      *
     C                   WRITE     RINTHDR
     C                   ENDIF
      *
     C                   ENDSR
      **********************************************************************
      * ŠSRINTDTL  - Create Detail                                        ˆ*
      **********************************************************************
     C     SRINTDTL      BEGSR
      *
     C                   EVAL      DT_INFIID     = HD_INFIID
     C                   EVAL      DT_INFNAM     = HD_INFNAM
     C                   EVAL      DT_INFSEQ     = HD_INFSEQ
     C                   EVAL      DT_INDATE     = HD_INDATE
     C                   EVAL      DT_INSEQN     = HD_INSEQN
     C                   EVAL      DT_INRSEQN    += 1
     C                   EVAL      DT_INTIME     = %DEC(%TIME())
     C                   EVAL      xDATA         = FILENAME
     C                   EVAL      xLEN          = %LEN(%TRIMR(xDATA))
      *
     C                   IF        %TRIM(CLP001) = 'HD' OR
     C                             %TRIM(CLP001) = 'TL'
     C                   EVAL      DT_INDATA     = %TRIM(CLP001) + ',' +
     C                                             %TRIM(CLP002) + ','
     C                   ELSE
     C                   EVAL      DT_INDATA     = %TRIM(CLP001) + ',' +
     C                                             %TRIM(CLP002) + ',' +
     C                                             %TRIM(CLP003) + ',' +
     C                                             %TRIM(CLP004) + ',' +
     C                                             %TRIM(CLP005) + ',' +
     C                                             %TRIM(CLP006) + ',' +
     C                                             %TRIM(CLP007) + ',' +
     C                                             %TRIM(CLP008) + ',' +
     C                                             %TRIM(CLP009) + ',' +
     C                                             %TRIM(CLP010) + ',' +
     C                                             %TRIM(CLP011) + ',' +
     C                                             %TRIM(CLP012) + ',' +
     C                                             %TRIM(CLP013) + ',' +
     C                                             %TRIM(CLP014) + ',' +
     C                                             %TRIM(CLP015) + ',' +
     C                                             %TRIM(CLP016) + ',' +
     C                                             %TRIM(CLP017) + ',' +
     C                                             %TRIM(CLP018) + ',' +
     C                                             %TRIM(CLP019) + ',' +
     C                                             %TRIM(CLP020) + ',' +
     C                                             %TRIM(CLP021) + ',' +
     C                                             %TRIM(CLP022) + ',' +
     C                                             %TRIM(CLP023) + ',' +
     C                                             %TRIM(CLP024) + ',' +
     C                                             %TRIM(CLP025) + ',' +
     C                                             %TRIM(CLP026) + ',' +
     C                                             %TRIM(CLP027) + ',' +
     C                                             %TRIM(CLP028) + ',' +
     C                                             %TRIM(CLP029) + ',' +
     C                                             %TRIM(CLP030) + ',' +
     C                                             %TRIM(CLP031) + ',' +
     C                                             %TRIM(CLP032) + ',' +
     C                                             %TRIM(CLP033) + ',' +
     C                                             %TRIM(CLP034) + ',' +
     C                                             %TRIM(CLP035) + ',' +
     C                                             %TRIM(CLP036) + ',' +
     C                                             %TRIM(CLP037) + ',' +
     C                                             %TRIM(CLP038) + ',' +
     C                                             %TRIM(CLP039) + ',' +
     C                                             %TRIM(CLP040) + ',' +
     C                                             %TRIM(CLP041) + ',' +
     C                                             %TRIM(CLP042) + ',' +
     C                                             %TRIM(CLP043) + ',' +
     C                                             %TRIM(CLP044) + ',' +
     C                                             %TRIM(CLP045) + ',' +
     C                                             %TRIM(CLP046) + ',' +
     C                                             %TRIM(CLP047) + ',' +
     C                                             %TRIM(CLP048) + ',' +
     C                                             %TRIM(CLP049) + ',' +
     C                                             %TRIM(CLP050) + ',' +
     C                                             %TRIM(CLP051) + ',' +
     C                                             %TRIM(CLP052) + ',' +
     C                                             %TRIM(CLP053) + ',' +
     C                                             %TRIM(CLP054) + ',' +
     C                                             %TRIM(CLP055) + ',' +
     C                                             %TRIM(CLP056) + ',' +
     C                                             %TRIM(CLP057) + ',' +
     C                                             %TRIM(CLP058) + ',' +
     C                                             %TRIM(CLP059) + ',' +
     C                                             %TRIM(CLP060) + ',' +
     C                                             %TRIM(CLP061) + ',' +
     C                                             %TRIM(CLP062) + ',' +
     C                                             %TRIM(CLP063) + ',' +
     C                                             %TRIM(CLP064) + ',' +
     C                                             %TRIM(CLP065) + ',' +
     C                                             %TRIM(CLP066) + ',' +
     C                                             %TRIM(CLP067) + ',' +
     C                                             %TRIM(CLP068) + ',' +
     C                                             %TRIM(CLP069) + ',' +
     C                                             %TRIM(CLP070) + ',' +
     C                                             %TRIM(CLP071) + ',' +
     C                                             %TRIM(CLP072) + ',' +
     C                                             %TRIM(CLP073) + ',' +
     C                                             %TRIM(CLP074) + ',' +
     C                                             %TRIM(CLP075) + ',' +
     C                                             %TRIM(CLP076) + ',' +
     C                                             %TRIM(CLP077) + ',' +
     C                                             %TRIM(CLP078) + ',' +
     C                                             %TRIM(CLP079) + ',' +
     C                                             %TRIM(CLP080) + ',' +
     C                                             %TRIM(CLP081) + ',' +
     C                                             %TRIM(CLP082) + ',' +
     C                                             %TRIM(CLP083) + ',' +
     C                                             %TRIM(CLP084) + ',' +
     C                                             %TRIM(CLP085) + ',' +
     C                                             %TRIM(CLP086) + ',' +
     C                                             %TRIM(CLP087) + ',' +
     C                                             %TRIM(CLP088) + ',' +
     C                                             %TRIM(CLP089) + ',' +
     C                                             %TRIM(CLP090) + ',' +
     C                                             %TRIM(CLP091) + ',' +
     C                                             %TRIM(CLP092) + ',' +
     C                                             %TRIM(CLP093) + ',' +
     C                                             %TRIM(CLP094) + ',' +
     C                                             %TRIM(CLP095) + ',' +
     C                                             %TRIM(CLP096) + ',' +
     C                                             %TRIM(CLP097) + ',' +
     C                                             %TRIM(CLP098) + ',' +
     C                                             %TRIM(CLP099) + ',' +
     C                                             %TRIM(CLP100)
     C                   ENDIF
      *
     C     KINTDTL       CHAIN     INTDTL
     C                   IF        %FOUND(INTDTL)
      *
     C                   UPDATE    RINTDTL
     C                   ELSE
      *
     C                   WRITE     RINTDTL
     C                   ENDIF
      *
     C                   ENDSR
      **********************************************************************
      * ŠSRINTDTLE - Create Detail Error                                  ˆ*
      **********************************************************************
     C     SRINTDTLE     BEGSR
      *
     C                   EVAL      DE_INFIID     = DT_INFIID
     C                   EVAL      DE_INFNAM     = DT_INFNAM
     C                   EVAL      DE_INFSEQ     = DT_INFSEQ
     C                   EVAL      DE_INDATE     = DT_INDATE
     C                   EVAL      DE_INTIME     = %DEC(%TIME())
     C                   EVAL      DE_INSEQN     = DT_INSEQN
     C                   EVAL      DE_INRSEQN    = DT_INRSEQN
     C                   EVAL      DE_INESEQN    += 1
     C                   EVAL      DE_INIFERR    = 'Y'
     C                   EVAL      DE_INERVAL    = ERRDSC
     C                   EVAL      DE_INERCD     = WERRORCODE
      *
     C     KINTDTE       CHAIN     INTDTE
     C                   IF        %FOUND(INTDTE)
      *
     C                   UPDATE    RINTDTE
     C                   ELSE
      *
     C                   WRITE     RINTDTE
     C                   ENDIF
      *
     C                   ENDSR
      **********************************************************************
      * ŠSRCHECKERROR - Check and Update Process Error                    ˆ*
      **********************************************************************
     C     SRCHECKERROR  BEGSR
      *
     C     *START        SETLL     INT374R01
     C                   READ      INT374R01
     C                   DOW       NOT %EOF(INT374R01)
     C                   Z-ADD     1             JJ
     C     CLP002        LOOKUP    DIMRECSEQ(JJ)                          30
     C                   IF        *IN30
     C                   EVAL      FLAGERR       = 'Y'
     C                   UPDATE    RINT374R01
     C                   ENDIF
     C                   READ      INT374R01
     C                   ENDDO
      *
     C                   ENDSR
      **********************************************************************
      * ŠSRDIMRECSEQ - Dimension Array for Error                          ˆ*
      **********************************************************************
     C     SRDIMRECSEQ   BEGSR
      *
     C                   Z-ADD     1             JJ
     C     CLP002        LOOKUP    DIMRECSEQ(JJ)                          30
     C                   IF        *IN30
     C                   ELSE
     C                   ADD       1             II
     C                   MOVEL     CLP002        DIMRECSEQ(II)
     C                   ENDIF
      *
     C                   ENDSR
     ***********************************************************************
     C     SR_MAIN_ADD   BEGSR
     C*MAIN address
     C                   EVAL      I2_CFADFM     = %SUBST(CLP031:1:1)
     C                   EVAL      I2_CFNA2      = %SUBST(CLP033:1:40)
     C                   EVAL      I2_CFNA3      = %SUBST(CLP034:1:40)
     C                   EVAL      I2_CFNA4      = %SUBST(CLP035:1:40)
     C                   EVAL      I2_CFNA5      = %SUBST(CLP036:1:40)
     C                   EVAL      I2_CFNA6      = %SUBST(CLP037:1:40)
     C                   EVAL      I2_CFNA7      = %SUBST(CLP074:1:40)
     C                   EVAL      I2_CFNA8      = %SUBST(CLP075:1:40)
     C*
     C                   IF        I2_CFADFM     = *BLANK   AND
     C                             I2_CFNA2      = *BLANK   AND
     C                             I2_CFNA3      = *BLANK   AND
     C                             I2_CFNA4      = *BLANK   AND
     C                             I2_CFNA5      = *BLANK   AND
     C                             I2_CFNA6      = *BLANK   AND
     C                             I2_CFNA7      = *BLANK   AND
     C                             I2_CFNA8      = *BLANK
     C                   ELSE
     C                   IF        I2_CFADFM     = 'L'
     C                   EXSR      SR_CFCKAD
     C                   ENDIF
     C                   ENDIF
     C*
     C                   ENDSR
     C*-----------------------
     C     SR_RE_ADD     BEGSR
     C*RE address
     C                   EVAL      I2_CFADFM     = %SUBST(CLP038:1:1)
     C                   EVAL      I2_CFNA2      = %SUBST(CLP040:1:40)
     C                   EVAL      I2_CFNA3      = %SUBST(CLP041:1:40)
     C                   EVAL      I2_CFNA4      = %SUBST(CLP042:1:40)
     C                   EVAL      I2_CFNA5      = %SUBST(CLP043:1:40)
     C                   EVAL      I2_CFNA6      = %SUBST(CLP044:1:40)
     C                   EVAL      I2_CFNA7      = %SUBST(CLP045:1:40)
     C                   EVAL      I2_CFNA8      = %SUBST(CLP046:1:40)
     C*
     C                   IF        I2_CFADFM     = *BLANK   AND
     C                             I2_CFNA2      = *BLANK   AND
     C                             I2_CFNA3      = *BLANK   AND
     C                             I2_CFNA4      = *BLANK   AND
     C                             I2_CFNA5      = *BLANK   AND
     C                             I2_CFNA6      = *BLANK   AND
     C                             I2_CFNA7      = *BLANK   AND
     C                             I2_CFNA8      = *BLANK
     C                   ELSE
     C                   IF        I2_CFADFM     = 'L'
     C                   EXSR      SR_CFCKAD
     C                   ENDIF
     C                   ENDIF
     C*
     C                   ENDSR
     C*-----------------------
     C     SR_LSAGR_ADD  BEGSR
     C*LC address
     C                   EVAL      I2_CFADFM     = %SUBST(CLP096:1:1)
     C                   EVAL      I2_CFNA2      = %SUBST(CLP098:1:40)
     C                   EVAL      I2_CFNA3      = %SUBST(CLP099:1:40)
     C                   EVAL      I2_CFNA4      = %SUBST(CLP100:1:40)
     C                   EVAL      I2_CFNA5      = %SUBST(CLP101:1:40)
     C                   EVAL      I2_CFNA6      = %SUBST(CLP102:1:40)
     C                   EVAL      I2_CFNA7      = %SUBST(CLP103:1:40)
     C                   EVAL      I2_CFNA8      = %SUBST(CLP104:1:40)
     C*
     C                   IF        I2_CFADFM     = *BLANK   AND
     C                             I2_CFNA2      = *BLANK   AND
     C                             I2_CFNA3      = *BLANK   AND
     C                             I2_CFNA4      = *BLANK   AND
     C                             I2_CFNA5      = *BLANK   AND
     C                             I2_CFNA6      = *BLANK   AND
     C                             I2_CFNA7      = *BLANK   AND
     C                             I2_CFNA8      = *BLANK
     C                   ELSE
     C                   IF        I2_CFADFM     = 'L'
     C                   EXSR      SR_CFCKAD
     C                   ENDIF
     C                   ENDIF
     C*
     C                   ENDSR
     C*-----------------------
     C     SR_CFCKAD     BEGSR
     C*Customer Address Validation
     C*
     C     *LIKE         DEFINE    I2_CFADFM     IN_CFADFM
     C     *LIKE         DEFINE    I2_CFCOUN     IN_CFCOUN
     C     *LIKE         DEFINE    I2_CFSTAT     IN_CFSTAT
     C     *LIKE         DEFINE    I2_CFNA2      IN_INAD01
     C     *LIKE         DEFINE    I2_CFNA3      IN_INAD02
     C     *LIKE         DEFINE    I2_CFNA4      IN_INAD03
     C     *LIKE         DEFINE    I2_CFNA5      IN_INAD04
     C     *LIKE         DEFINE    I2_CFNA6      IN_INAD05
     C     *LIKE         DEFINE    I2_CFNA7      IN_INAD06
     C     *LIKE         DEFINE    I2_CFNA8      IN_INAD07
     C     *LIKE         DEFINE    I2_CFCOUN     OT_CFCOUN
     C     *LIKE         DEFINE    I2_CFSTAT     OT_CFSTAT
     C     *LIKE         DEFINE    I2_CFZIP      OT_CFZIP
     C     *LIKE         DEFINE    I2_CFDFC1     OT_CFDFC1
     C     *LIKE         DEFINE    I2_CFDFC2     OT_CFDFC2
     C     *LIKE         DEFINE    I2_CFDFC3     OT_CFDFC3
     C     *LIKE         DEFINE    I2_CFDFC4     OT_CFDFC4
     C*
     C     CFCKAD_PARM   PLIST
     C                   PARM                    IN_CFADFM
     C                   PARM                    IN_CFCOUN
     C                   PARM                    IN_CFSTAT
     C                   PARM                    IN_INAD01
     C                   PARM                    IN_INAD02
     C                   PARM                    IN_INAD03
     C                   PARM                    IN_INAD04
     C                   PARM                    IN_INAD05
     C                   PARM                    IN_INAD06
     C                   PARM                    IN_INAD07
     C                   PARM                    IN_ERROR          1
     C                   PARM                    O_ERLINE          1 0
     C                   PARM                    IN_OPTION         1
     C                   PARM                    OT_CFCOUN
     C                   PARM                    OT_CFSTAT
     C                   PARM                    OT_CFZIP
     C                   PARM                    OT_CFDFC1
     C                   PARM                    OT_CFDFC2
     C                   PARM                    OT_CFDFC3
     C                   PARM                    OT_CFDFC4
     C*
     C                   EVAL      IN_CFADFM     = I2_CFADFM
     C                   EVAL      IN_INAD01     = I2_CFNA2
     C                   EVAL      IN_INAD02     = I2_CFNA3
     C                   EVAL      IN_INAD03     = I2_CFNA4
     C                   EVAL      IN_INAD04     = I2_CFNA5
     C                   EVAL      IN_INAD05     = I2_CFNA6
     C                   EVAL      IN_INAD06     = I2_CFNA7
     C                   EVAL      IN_INAD07     = I2_CFNA8
     C                   EVAL      IN_OPTION     = 'R'
     C*
     C                   CLEAR                   IN_CFCOUN
     C                   CLEAR                   IN_CFSTAT
     C                   CLEAR                   IN_ERROR
     C                   CLEAR                   O_ERLINE
     C                   CLEAR                   OT_CFCOUN
     C                   CLEAR                   OT_CFSTAT
     C                   CLEAR                   OT_CFZIP
     C                   CLEAR                   OT_CFDFC1
     C                   CLEAR                   OT_CFDFC2
     C                   CLEAR                   OT_CFDFC3
     C                   CLEAR                   OT_CFDFC4
     C*
     C                   CALL      'CFCKAD'      CFCKAD_PARM
     C*
     C                   IF        IN_ERROR      <> '0'
     C                   SELECT
     C                   WHEN      IN_ERROR      = '1'
     C                   EVAL      wErrorCode    = 'Z0'
     C                   WHEN      IN_ERROR      = '3'
     C                   EVAL      wErrorCode    = 'Z1'
     C                   WHEN      IN_ERROR      = '4' AND
     C                             O_ERLINE      = 1
     C                   EVAL      wErrorCode    = 'Z2'
     C                   WHEN      IN_ERROR      = '4' AND
     C                             O_ERLINE      = 2
     C                   EVAL      wErrorCode    = 'Z3'
     C                   WHEN      IN_ERROR      = '4' AND
     C                             O_ERLINE      = 3
     C                   EVAL      wErrorCode    = 'Z4'
     C                   WHEN      IN_ERROR      = '4' AND
     C                             O_ERLINE      = 4
     C                   EVAL      wErrorCode    = 'Z5'
     C                   WHEN      IN_ERROR      = '4' AND
     C                             O_ERLINE      = 5
     C                   EVAL      wErrorCode    = 'Z6'
     C                   WHEN      IN_ERROR      = '4' AND
     C                             O_ERLINE      = 6
     C                   EVAL      wErrorCode    = 'Z7'
     C                   WHEN      IN_ERROR      = '4' AND
     C                             O_ERLINE      = 7
     C                   EVAL      wErrorCode    = 'Z8'
     C                   WHEN      IN_ERROR      = '6'
     C                   EVAL      wErrorCode    = 'Z9'
     C                   WHEN      IN_ERROR      = '7'
     C                   EVAL      wErrorCode    = 'AA'
     C                   WHEN      IN_ERROR      = '8'
     C                   EVAL      wErrorCode    = 'AB'
     C                   WHEN      IN_ERROR      = '9'
     C                   EVAL      wErrorCode    = 'AC'
     C                   ENDSL
     C                   ELSE
     C                   EXSR      SR_CFFXAD
     C                   ENDIF
     C*
     C                   ENDSR
     C*-----------------------
     C     SR_CFFXAD     BEGSR
     C*Customer Fixed Address Label
     C     CFFXAD_PARM   PLIST
     C                   PARM                    IN_CFADFM
     C                   PARM                    IN_INAD01
     C                   PARM                    IN_INAD02
     C                   PARM                    IN_INAD03
     C                   PARM                    IN_INAD04
     C                   PARM                    IN_INAD05
     C                   PARM                    IN_INAD06
     C                   PARM                    IN_INAD07
     C                   PARM                    IN_ERROR
     C*
     C                   EVAL      IN_CFADFM     = I2_CFADFM
     C                   EVAL      IN_INAD01     = I2_CFNA2
     C                   EVAL      IN_INAD02     = I2_CFNA3
     C                   EVAL      IN_INAD03     = I2_CFNA4
     C                   EVAL      IN_INAD04     = I2_CFNA5
     C                   EVAL      IN_INAD05     = I2_CFNA6
     C                   EVAL      IN_INAD06     = I2_CFNA7
     C                   EVAL      IN_INAD07     = I2_CFNA8
     C                   CALL      'CFFXAD'      CFFXAD_PARM
     C                   IF        IN_ERROR      = '0'
     C                   IF        CLP003        = 'RE'
     C                   EVAL      CLP040        = IN_INAD01
     C                   EVAL      CLP041        = IN_INAD02
     C                   EVAL      CLP042        = IN_INAD03
     C                   EVAL      CLP043        = IN_INAD04
     C                   EVAL      CLP044        = IN_INAD05
     C                   EVAL      CLP045        = IN_INAD06
     C                   EVAL      CLP046        = IN_INAD07
     C                   EVAL      CLP026        = OT_CFCOUN
     C                   EVAL      CLP066        = OT_CFSTAT
     C                   EVAL      CLP065        = OT_CFZIP
     C                   EVAL      CLP067        = OT_CFDFC1
     C                   EVAL      CLP068        = OT_CFDFC2
     C                   EVAL      CLP215        = OT_CFDFC3
     C                   EVAL      CLP216        = OT_CFDFC4
     C                   ENDIF
     C                   IF        CLP003        = 'MAIN'
     C                   EVAL      CLP033        = IN_INAD01
     C                   EVAL      CLP034        = IN_INAD02
     C                   EVAL      CLP035        = IN_INAD03
     C                   EVAL      CLP036        = IN_INAD04
     C                   EVAL      CLP037        = IN_INAD05
     C                   EVAL      CLP074        = IN_INAD06
     C                   EVAL      CLP075        = IN_INAD07
     C                   EVAL      CLP047        = OT_CFCOUN
     C                   EVAL      CLP046        = OT_CFSTAT
     C                   EVAL      CLP045        = OT_CFZIP
     C                   EVAL      CLP043        = OT_CFDFC1
     C                   EVAL      CLP044        = OT_CFDFC2
     C                   EVAL      CLP078        = OT_CFDFC3
     C                   EVAL      CLP079        = OT_CFDFC4
     C                   ENDIF
     C**
     C                   IF        CLP003        = 'LSAGR'
     C                   EVAL      CLP098        = IN_INAD01
     C                   EVAL      CLP099        = IN_INAD02
     C                   EVAL      CLP100        = IN_INAD03
     C                   EVAL      CLP101        = IN_INAD04
     C                   EVAL      CLP102        = IN_INAD05
     C                   EVAL      CLP103        = IN_INAD06
     C                   EVAL      CLP104        = IN_INAD07
     C                   EVAL      CLP113        = OT_CFCOUN
     C                   EVAL      CLP112        = OT_CFSTAT
     C                   EVAL      CLP111        = OT_CFZIP
     C                   ENDIF
     C**
     C                   ENDIF
     C                   ENDSR
     C*-----------------------
** Error Code Table & Description
H1H1-Invalid header record format.
H2H2-Invalid header date.
H3H3-Header date not match Next business date.
DTDT-Invalid detail record.
T0T0-Trailer Record Not found.
T1T1-Invalid trailer record format.
T2T2-Total number of detail records is invalid.
T3T3-Total number not be blank.
0000-Record Type Wrong Format
0101-Bank
0202-Branch
0303-Group Sequence No.
0404-Collateral code
0505-Collateral Category
0606-Registered Owner CIF Numb
0707-Property Class
0808-Property Type
0909-Usage of property
1010-Master / Sub Title
1111-Country of Registration
1212-Title number
1313-Freehold/Leasehold
1414-Area Unit
1515-Restriction of Interest
1616-Next valuation Date
1717-FMV on complete
1818-Fair Market Value
1919-Forced Sales Value
2020-Marked to Market Value
2121-Basis of Advance Indicat
2222-Land Office
2323-Survey Number
2424-Lot number
2525-Property Complete(Y/N)
2626-Share Collateral
2727-Apportion Realisable Valu
2828-Express Condition Flag
2929-Endorsement Flag
3030-Encumbrances Flag
3131-Collateral Object
3232-Global Collateral (Y/N)
3333-Last Valuation Date
3434-Valuation Date
3535-Valuation Type
3636-Valuer Code
3737-Basel Eligible
3838-Allow Provisioning
3939-Include SLL Computation
4040-Basis of Advance Percent
4141-Address Format
4242-Address Type
4343-Additional Name 1
4444-Postal Code
4545-State Code
4646-Country Code
4747-Contract Amount
4848-Basel Indicator
4949-Default Code 1
5050-Default Code 2
5151-Title Type
5252-Build-up Area
5353-Rai
5454-Ngan
5555-Wa
5656-Address Line 1
5757-Address Line 2
5858-Address Line 3
5959-Address Line 4
6060-Address Line 5
6161-Address Line 6
6262-Address Line 7
6363-Additional Name 2
6464-Reg. Owner CIF 1
6565-Sub Collateral 1
6666-Sub Collateral 2
6767-Currency
6868-Contract Date
6969-Expiry/Maturity Date
7070-Guaranteed Amount
7171-Effective Date
7272-Total O/S Balance
7373-Guarantee %
7474-Reg. Owner Short Name
7575-Collateral Status
7676-Stock Code
7777-Beneficiary Name
7878-Remark Not Blank
7979-Amount In Current
8080-Stock Exchange Code
8181-Closing Price
8282-Listed/Non Listed
8383-Debt Security Type
8484-Number of Units
8585-Discount Period
8686-Issue Date
8787-Deposit/Bond Int/Pft Rate
8888-Collateral Message Flag
8989-Debt Security Counter Code
9090-Created User ID
9191-Created Date
9292-Debt Security Number
9393-REG. OWNER CIF 2
9494-REG. OWNER CIF 3
9595-REG. OWNER CIF 4
9696-REG. OWNER CIF 5
9797-Sub Collateral 3
9898-Sub Collateral 4
9999-Sub Collateral 5
A0A0-Confirmation Date
A1A1-Relationship Code
A2A2-Issuing institution/Bank
A3A3-Country of Origination
A4A4-3rd Party Name
A5A5-Lease Term
A6A6-Lease Term Code
A7A7-County
A8A8-Lessor
A9A9-Lease Amount
B1B1-Last Valuation Time
B2B2-State
B3B3-Log Book No
B4B4-New Used Recond
B5B5-External/Appraiser name
B6B6-Model Number
B7B7-Type Of Unit
B8B8-Make of Goods
B9B9-Private Caveat Registration No
C1C1-Promissory Note Number
C2C2-Acknowledge & Consent Date
C3C3-Certificate Number
C4C4-Blank Transfer(Y/N)
C5C5-Tax Add On Indicator
C6C6-Auto Control of Reserve Price
C7C7-Car Color
C8C8-Province
C9C9-Road Tax Sticker Delivery
D0D0-Vehicle Insurance Policy Delivery
D1D1-Collateral description
D2D2-Tangible Net Worth Currency
E0E0-Contract ID Only Numberic
E1E1-Facility ID Cannot be Blank
E2E2-Facility ID Only Numberic
E3E3-Must fill up Either BOA % / BOA Amount
E4E4-BOA % / BOA Amount Cannot be Blank
E5E5-If Facility ID 2 Not Blank Must have fill BOA % 2 / BOA Amount 2
E6E6-If Facility ID 3 Not Blank Must have fill BOA % 3 / BOA Amount 3
E7E7-If Facility ID 4 Not Blank Must have fill BOA % 4 / BOA Amount 4
E8E8-If Facility ID 5 Not Blank Must have fill BOA % 5 / BOA Amount 5
F0F0-Contract Reference No
F1F1-Contract Type
F2F2-Contract Date
F3F3-Contract Currency
F4F4-Contract Status
F5F5-Contract Status Date
F7F7-Collateral ID
F8F8-Date of Search
F9F9-Lease Agreement Number
G0G0-Land Area
G1G1-External/Appraised value
G2G2-FSV on Complete
G3G3-Land Value
G4G4-Building Value
G5G5-Official Valuation Date
G6G6-Official Valuation
G7G7-Purchase date
G8G8-Purchase Price
G9G9-Improvement Cost
I0I0-Auction date
I1I1-Auction Price
I2I2-Private caveat/G'tee Exp
I3I3-Date Agreement Signed
I4I4-Reserved price
I5I5-Redemption Value
I6I6-Quit rent payment date
I7I7-Quit rent amount
I8I8-Assessment payment date
I9I9-Assessment amount
J0J0-Collateral Value Cap Perc
J1J1-Collateral Tagging Date
J2J2-Original coll. value
J3J3-Coll Original Value
J4J4-Date Ownership Transfred
J5J5-Date Owner Transf Remove
J6J6-Date Collateral Received
J7J7-Date Title issued
J8J8-Title Expiry Date
J9J9-Deposit Term
K0K0-Internal/Br. Valuation
K1K1-Internal/Br. Valuation Date
K2K2-Date of Redemption
K3K3-Review date
K4K4-S & P Date
K5K5-S & P Expiry Date
K6K6-Letter of PI by valuer to
K7K7-Amount Redeem
K8K8-Unit Size
K9K9-Price Per Unit
L0L0-Cost Per Size
L1L1-Price Per Size
L2L2-Realisable Value
L3L3-Number of Title
L4L4-Lettable Area
L5L5-House Value
L6L6-Plant & Machinery Value
L7L7-Machinery Value
L8L8-Equipment Value
L9L9-Outstanding Bill Electric
M0M0-Outstanding Bill Water
M1M1-Outstanding Bill Manageme
M2M2-Total Rental Amount
M3M3-Rental Term
M4M4-Depreciate Term
M5M5-Delivery Date
M6M6-Disposal Value
M7M7-Total Asset
M8M8-Exchange Rate Date
M9M9-Valuation Freq
N0N0-Amount pledged
N1N1-Percent pledged
N2N2-Reinstatement Value
N3N3-Discharge Date with Land
N4N4-Stay Start Date
N5N5-Aggregated Contract Amount
N6N6-Aggregated Collateral Amount
N7N7-Fee Renewal Date
N8N8-Date Fund Recieved
N9N9-Grace Period
O0O0-Secured Portion
O1O1-Unsecured Portion
O2O2-Guarantee Amount (Secured)
O3O3-Guarantee % (Secured)
O4O4-Guarantee Amount (Unsecured)
O5O5-Guarantee % (Unsecured)
O6O6-Unsecured CGC Fee %
O7O7-Secured CGC Fee %
O8O8-Registered Owner CIF Numb 1
O9O9-Registered Owner CIF Numb 2
P1P1-Registered Owner CIF Numb 3
P2P2-Registered Owner CIF Numb 4
P3P3-Registered Owner CIF Numb 5
P4P4-Deposit Hold amount
P5P5-Transfer Amount
P6P6-Expected Total Deposit Amount
P7P7-1st/3rd Party Charge
P8P8-Charge Rank
P9P9-Aggregated
Q0Q0-Collateral ID 1
Q1Q1-Collateral ID 2
Q2Q2-Collateral ID 3
Q3Q3-Collateral ID 4
Q4Q4-Collateral ID 5
Q5Q5-Facility ID (Optional)
Q7Q7-Facility ID 2 (Optional)
Q8Q8-Facility ID 3 (Optional)
Q9Q9-Facility ID 4 (Optional)
R0R0-Facility ID 5 (Optional)
R1R1-Approved Limit
R2R2-Drawing Limit
R3R3-Level
R4R4-Facility CIF No.
R5R5-Drawing % chg to BOA
R6R6-Drawing Lmt chg to BOA
S0S0-PLEDGED % 1
S1S1-PLEDGED % 2
S2S2-PLEDGED % 3
S3S3-PLEDGED % 4
S4S4-PLEDGED % 5
S5S5-AMOUNT PLEDGED 1 (Optional)
S6S6-AMOUNT PLEDGED 2 (Optional)
S7S7-AMOUNT PLEDGED 3 (Optional)
S8S8-AMOUNT PLEDGED 4 (Optional)
S9S9-AMOUNT PLEDGED 5 (Optional)
U0U0-Only Must fill up BOA % 1 / BOA Amount 1 One Field
U1U1-Only Must fill up BOA % 2 / BOA Amount 2 One Field
U2U2-Only Must fill up BOA % 3 / BOA Amount 3 One Field
U3U3-Only Must fill up BOA % 4 / BOA Amount 4 One Field
U4U4-Only Must fill up BOA % 5 / BOA Amount 5 One Field
U5U5-Min. Cap. per unit
U6U6-Max. Cap. per unit
U7U7-Exchange Rate
U8U8-Original value
U9U9-Cap Price
V0V0-Moratorium Unit
V1V1-Moratorium Expiry Date
V2V2-SMF Account No.
V3V3-Sequence No. 1
V4V4-Serial No (From) 1
V5V5-Serial No (To) 1
V6V6-Share Quantity 1
V7V7-Sequence No. 2
V8V8-Serial No (From) 2
V9V9-Serial No (To) 2
W0W0-Share Quantity 2
W1W1-Sequence No. 3
W2W2-Serial No (From) 3
W3W3-Serial No (To) 3
W4W4-Share Quantity 3
W5W5-Sequence No. 4
W6W6-Serial No (From) 4
W7W7-Serial No (To) 4
W8W8-Share Quantity 4
W9W9-Sequence No. 5
X0X0-Serial No (From) 5
X1X1-Serial No (To) 5
X2X2-Share Quantity 5
X3X3-Registration Date
X4X4-Int.Receivable Date DDMM
X5X5-Issued Times
X6X6-Maturity Date
X7X7-Discount Rate
X8X8-Standard Hair Cut Rate
X9X9-Currency Mismatch Hair Cut Rate
Y0Y0-Lease Agreement Date
Y1Y1-Lease Agreement Expiry Date
Y2Y2-Currency Market Value
Y3Y3-Residual Value
Y4Y4-Notice Assignment Date
Y5Y5-External/Appraisal Date
Y6Y6-Payment Frequency
Y7Y7-Engine number
Y8Y8-Year Of Manufacture
Y9Y9-Machinery Type
Z0Z0-Invalid Address Format
Z1Z1-Invalid Address Country
Z2Z2-Address Line 1 Not According To Format
Z3Z3-Address Line 2 Not According To Format
Z4Z4-Address Line 3 Not According To Format
Z5Z5-Address Line 4 Not According To Format
Z6Z6-Address Line 5 Not According To Format
Z7Z7-Address Line 6 Not According To Format
Z8Z8-Address Line 7 Not According To Format
Z9Z9-Address Contain Invalid Character
AAAA-Invalid District Code
ABAB-Invalid Sub District Code
ACAC-Invalid Postal Code
ADAD-Lifetime (Year)
AEAE-Market Demand
AFAF-Downpayment Trade In
AGAG-Downpayment Cash
AHAH-Prepaid Rental Number
AIAI-Prepaid Rental Amount
AJAJ-Secondary Lease Rental
AKAK-Rental Rebate
ALAL-Rental Retention Sum
AMAM-Sales Proceed
ANAN-Freight Charges
AOAO-Mileage Used
APAP-Road Tax Expiry Date
AQAQ-Road Tax Amount
ARAR-Road Tax Tenor
ASAS-Ownership Claim No.
ATAT-Balancing Charge
AUAU-Tax Add-on Value
AVAV-Registration Fee
AWAW-Security Deposit
AXAX-PARF Value
AYAY-COE Registration date
AZAZ-No of Owner Transfer
BABA-E-Transfer #1 date
BBBB-E-Transfer #2 date
BCBC-Depreciation Amount
BDBD-Interest Rate
BEBE-Registration / Plate No
BFBF-Unit / Vehicle Condition
BGBG-Postcode for location of lot
BHBH-Organ. Regs. Date
BIBI-Car Status Date
BJBJ-Car Usage Status Date
BKBK-Year of First Purchase
BLBL-Weight of Vehicle in KG
BMBM-Year of Usage
BNBN-RY Category
BOBO-Date of Receipt
BPBP-Current Value
BQBQ-Quantity Of Goods
BRBR-Tangible Net Worth
BSBS-Financial Year End
BTBT-Date Pledged
BUBU-Account Number
BVBV-Realisable Amount
BWBW-Total Market Value
BXBX-Remarks
BYBY-Unit Price
BZBZ-Date of Tagging
DADA-Debt Security Code
DBDB-Share Certificate 1
DDDD-Standby LC number
DEDE-Standby LC Amount
DFDF-Registration No.
DGDG-Make
DHDH-Unit Condition
DIDI-Promissory Note Value
DJDJ-Acknowledgement Date
DKDK-Unit Type / Class
DLDL-Date of Bill / Invoice
DMDM-Weightage / Unit
DNDN-Price Per Weightage / Unit
DODO-Expiry Date
DPDP-Confirmation from Issuing Bank Date
DQDQ-Rental Pymt Freq
IIII-Error Over Position Numeric
ILIL-Error Precent > 100
ZAZA-Number of Units cannot < 0
ZYZY-Not found Debt Security Code
ZZZZ-Not found Stock Code
